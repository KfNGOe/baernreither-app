PREFIX kfngoeo: <https://github.com/KfNGOe/kfngoeo#>
PREFIX tei: <http://www.tei-c.org/ns/1.0/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX kfngoei: <https://github.com/KfNGOe/kfngoei/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

#import: TB or MF, annoAppi, annoNotei, annoIndexi

SELECT ?pos_txt_nr ?o_txt
WHERE {
    ?s_tei a kfngoeo:StartTag ;
        kfngoeo:elementName tei:TEI ;
        kfngoeo:elementPos ?o_pos_tei ;
	.
    BIND(substr(?o_pos_tei,1,strlen(?o_pos_tei)-2) AS ?title_short)
    ?s_text a kfngoeo:StartTag ;
       kfngoeo:elementName tei:text ;
       kfngoeo:elementPos ?o_pos_text ;
	.
    BIND(xsd:integer(substr(?o_pos_text,strlen(?title_short)+2)) AS ?o_pos_text_nr)
    ?s_txt a kfngoeo:Text ;
		kfngoeo:hasContent ?o_txt ;
		kfngoeo:elementPos ?o_pos_txt ;
 	.
    BIND(xsd:integer(SUBSTR(?o_pos_txt,strlen(?title_short)+2)) AS ?o_pos_txt_nr)    
    FILTER(?o_pos_txt_nr > ?o_pos_text_nr)
    BIND(?o_pos_txt_nr AS ?pos_txt_nr)
    BIND(CONCAT(?result_app, ?result_note, ?result_index) AS ?result)
    #Convert nr to string and concat with special chars '_', '#' to get unique hits in contains()    
    FILTER(!CONTAINS(?result, CONCAT('_', STR(?pos_txt_nr), '#')))         
    {
        SELECT (GROUP_CONCAT(CONCAT('_', STR(?o_pos_txt_nr_app), '#')) AS ?result_app)
        WHERE {
            ?s_anno_app
                a kfngoeo:AnnoApp ;                
                kfngoeo:hasTarget [
                    kfngoeo:hasSource ?title_app ;
                    kfngoeo:hasSelector [
                        a kfngoeo:TextPositionSelector ;
                        kfngoeo:start ?start_nr_app ;
                        kfngoeo:end ?end_nr_app ;
                    ] 
                ] ;                
            .
            BIND(?title_app AS ?title_short)            
            ?s_txt_app a kfngoeo:Text ;
                kfngoeo:hasContent ?o_txt_app ;
                kfngoeo:elementPos ?o_pos_txt_app ;
            .
            BIND(xsd:integer(substr(?o_pos_txt_app,strlen(?title_app)+2)) AS ?o_pos_txt_nr_app)
            FILTER((?o_pos_txt_nr_app > ?start_nr_app) && (?o_pos_txt_nr_app < ?end_nr_app))
        }
    } .    
    {
        SELECT (GROUP_CONCAT(CONCAT('_', STR(?o_pos_txt_nr_note), '#')) AS ?result_note)
        WHERE {
            ?s_anno_note
                a kfngoeo:AnnoNote ;                
                kfngoeo:hasTarget [
                    kfngoeo:hasSource ?title_note ;
                    kfngoeo:hasSelector [
                        a kfngoeo:TextPositionSelector ;
                        kfngoeo:start ?start_nr_note ;
                        kfngoeo:end ?end_nr_note ;
                    ] 
                ] ;                
            . 
            ?s_txt_note a kfngoeo:Text ;
                kfngoeo:hasContent ?o_txt_note ;
                kfngoeo:elementPos ?o_pos_txt_note ;
            .
            BIND(xsd:integer(substr(?o_pos_txt_note,strlen(?title_note)+2)) AS ?o_pos_txt_nr_note)
            FILTER((?o_pos_txt_nr_note > ?start_nr_note) && (?o_pos_txt_nr_note < ?end_nr_note))
        }
    }
    {
        SELECT (GROUP_CONCAT(CONCAT('_', STR(?o_pos_txt_nr_index), '#')) AS ?result_index)
        WHERE {
            ?s_anno_index
                a kfngoeo:AnnoIndex ;                
                kfngoeo:hasTarget [
                    kfngoeo:hasSource ?title_index ;
                    kfngoeo:hasSelector [
                        a kfngoeo:TextPositionSelector ;
                        kfngoeo:start ?start_nr_index ;
                        kfngoeo:end ?end_nr_index ;
                    ] 
            	] ;
			.
            BIND(CONCAT(?title_index, '_', STR(?end_nr_index-3)) AS ?o_pos_txt_index)
            ?s_txt_index a kfngoeo:Text ;
                         kfngoeo:hasContent ?o_txt_index ;
                         kfngoeo:elementPos ?o_pos_txt_index ;
			.
            BIND(xsd:integer(SUBSTR(?o_pos_txt_index,STRLEN(?title_index)+2)) AS ?o_pos_txt_nr_index)            
		}
    }    
}