(window.webpackJsonp=window.webpackJsonp||[]).push([[124,321],{200:function(e,t,n){"use strict";n.r(t);var E=n(0),a=n(87);function i(e,t,n){return{restrict:"E",templateUrl:"js/angular/ttyg/templates/agent-list.html",scope:{agentList:"=",agentListFilterModel:"="},link:(i,A,T)=>{i.selectedAgent=void 0,i.selectedAgentsFilter=void 0,i.deletingAgent=void 0,i.onEditAgent=t=>{e.emit(a.TTYGEventName.EDIT_AGENT,t)},i.onCloneAgent=t=>{e.emit(a.TTYGEventName.CLONE_AGENT,t)},i.onDeleteAgent=i=>{const A=n.instant("ttyg.agent.delete_agent_modal.title"),T=Object(E.decodeHTML)(n.instant("ttyg.agent.delete_agent_modal.body",{agentName:i.name}));t.openConfirmation(A,T,()=>e.emit(a.TTYGEventName.DELETE_AGENT,i))},i.onAgentsFilterChange=e=>{i.selectedAgentsFilter=e,i.selectedAgentsFilter&&i.agentList.filterByRepository(i.selectedAgentsFilter.key)};const c=()=>{const e=i.agentListFilterModel.find(e=>e.selected);i.selectedAgentsFilter=e||i.agentListFilterModel[0],i.onAgentsFilterChange(i.selectedAgentsFilter)},o=[];o.push(i.$watch("agentListFilterModel",c)),o.push(e.subscribe(a.TTYGEventName.DELETING_AGENT,e=>{i.deletingAgent=e})),o.push(e.onSelectedAgentChanged(e=>{i.selectedAgent=e})),i.$on("$destroy",()=>{o.forEach(e=>e())}),c()}}}angular.module("graphdb.framework.ttyg.directives.agent-list",[]).directive("agentList",i),i.$inject=["TTYGContextService","ModalService","$translate"]},87:function(e,t,n){"use strict";n.r(t),n.d(t,"TTYGEventName",(function(){return i}));var E=n(18);function a(e){let t=void 0,n=void 0,a=void 0,A=void 0,T={},c=void 0,o=!1;const d=()=>Object(E.cloneDeep)(t),l=()=>Object(E.cloneDeep)(n),s=e=>{n=Object(E.cloneDeep)(e),S(i.CHAT_LIST_UPDATED,l())},C=()=>Object(E.cloneDeep)(a),_=()=>Object(E.cloneDeep)(A),g=()=>Object(E.cloneDeep)(T),r=e=>!!T[e],D=()=>o,S=(t,n)=>{e.emitSync(t,Object(E.cloneDeep)(n))},p=(t,n)=>e.subscribeSync(t,e=>n(e));return{resetContext:()=>{t=void 0,n=void 0,a=void 0,A=void 0,T={},c=void 0,o=!1},emit:S,subscribe:p,getChats:l,updateChats:s,addChat:e=>{n.appendChat(e),s(n)},replaceChat:(e,t)=>{n.replaceChat(e,t),s(n)},onChatsListChanged:e=>(n&&angular.isFunction(e)&&e(l()),p(i.CHAT_LIST_UPDATED,t=>e(t))),getSelectedChat:C,selectChat:e=>{a&&a.id===e.id||(a=Object(E.cloneDeep)(e),S(i.SELECT_CHAT,C()))},deselectChat:()=>{a=void 0,S(i.SELECT_CHAT,C())},deleteChat:e=>{n.deleteChat(e),s(n)},onSelectedChatChanged:e=>(angular.isFunction(e)&&e(C()),p(i.SELECT_CHAT,t=>e(t))),updateSelectedChat:e=>{a&&a.id&&e&&a.id!==e.id||(a=Object(E.cloneDeep)(e),S(i.SELECTED_CHAT_UPDATED,C()))},onSelectedChatUpdated:e=>(a&&angular.isFunction(e)&&e(C()),p(i.SELECTED_CHAT_UPDATED,t=>e(t))),onLastMessageReceived:e=>(a&&angular.isFunction(e)&&e(C()),p(i.LAST_MESSAGE_RECEIVED,t=>e(t))),updateAgents:e=>{t=Object(E.cloneDeep)(e),S(i.AGENT_LIST_UPDATED,d())},onAgentsListChanged:e=>(t&&angular.isFunction(e)&&e(d()),p(i.AGENT_LIST_UPDATED,t=>e(t))),getAgents:d,getAgent:e=>{if(t)return Object(E.cloneDeep)(t.getAgent(e))},selectAgent:e=>{A=Object(E.cloneDeep)(e),S(i.AGENT_SELECTED,_())},getSelectedAgent:_,onSelectedAgentChanged:e=>(A&&angular.isFunction(e)&&e(_()),p(i.AGENT_SELECTED,t=>e(t))),getDefaultAgent:()=>Object(E.cloneDeep)(c),setDefaultAgent:e=>{c=e},setCanModifyAgent:e=>{o=Object(E.cloneDeep)(e),S(i.CAN_MODIFY_AGENT_UPDATED,D())},getCanModifyAgent:D,onCanUpdateAgentUpdated:e=>(angular.isFunction(e)&&e(D()),p(i.CAN_MODIFY_AGENT_UPDATED,t=>e(t))),hasExplainResponse:r,toggleExplainResponse:e=>{r(e)&&(T[e].expanded=!T[e].expanded,S(i.EXPLAIN_RESPONSE_CACHE_UPDATED,g()))},getExplainResponse:e=>Object(E.cloneDeep)(T[e]),addExplainResponseCache:e=>{T[e.answerId]=Object(E.cloneDeep)(e),S(i.EXPLAIN_RESPONSE_CACHE_UPDATED,g())},onExplainResponseCacheUpdated:e=>(angular.isFunction(e)&&e(g()),p(i.EXPLAIN_RESPONSE_CACHE_UPDATED,t=>e(t)))}}angular.module("graphdb.framework.ttyg.services.ttygcontext",[]).factory("TTYGContextService",a),a.$inject=["EventEmitterService","TTYGService"];const i={CREATE_CHAT:"createChat",CREATE_CHAT_SUCCESSFUL:"chatCreated",CREATE_CHAT_FAILURE:"chatCreationFailed",RENAME_CHAT:"renameChat",RENAME_CHAT_SUCCESSFUL:"chatRenamed",RENAME_CHAT_FAILURE:"chatRenamedFailure",SELECT_CHAT:"selectChat",SELECTED_CHAT_UPDATED:"selectChatUpdated",LAST_MESSAGE_RECEIVED:"lastMessageReceived",DELETING_CHAT:"deletingChat",DELETE_CHAT:"deleteChat",DELETE_CHAT_SUCCESSFUL:"chatDeleted",DELETE_CHAT_FAILURE:"chatDeletedFailure",CHAT_EXPORT:"chatExport",CHAT_EXPORT_SUCCESSFUL:"chatExportSuccess",CHAT_EXPORT_FAILURE:"chatExportFailure",CHAT_LIST_UPDATED:"chatListUpdated",ASK_QUESTION:"askQuestion",ASK_QUESTION_FAILURE:"askQuestionFailure",CONTINUE_CHAT_RUN:"continueChatRun",LOAD_CHATS:"loadChats",LOAD_CHAT_SUCCESSFUL:"loadChatSuccess",LOAD_CHAT_FAILURE:"loadChatFailure",AGENT_LIST_UPDATED:"agentListUpdated",OPEN_AGENT_SETTINGS:"openAgentSettings",EDIT_AGENT:"editAgent",CLONE_AGENT:"cloneAgent",DELETE_AGENT:"deleteAgent",AGENT_DELETED:"agentDeleted",DELETING_AGENT:"deletingAgent",AGENT_SELECTED:"agentSelected",GO_TO_CREATE_SIMILARITY_VIEW:"goToCreateSimilarityView",GO_TO_CONNECTORS_VIEW:"goToConnectorsView",EXPLAIN_RESPONSE:"explainResponse",EXPLAIN_RESPONSE_CACHE_UPDATED:"explainResponseCacheUpdated",GO_TO_SPARQL_EDITOR:"openQueryInSparqlEditor",CAN_MODIFY_AGENT_UPDATED:"canModifyAgentUpdated"}}}]);