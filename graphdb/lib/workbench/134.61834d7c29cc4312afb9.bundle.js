(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{221:function(e,t,s){"use strict";s.r(t);s(222);var n=s(18);function a(e,t,s,a,o,l){const i=[];e.isValid=o.isValid(),e.ok=()=>{const e=o.getClusterView();e.hasCluster()?t.close(Object(n.cloneDeep)(e.getUpdateActions())):t.close(Object(n.cloneDeep)(e.getUpdateActions().clusterConfiguration))},e.cancel=()=>{e.isChanged?l.openSimpleModal({title:s.instant("common.warning"),message:s.instant("page.leave.pristine.warning"),warning:!0}).result.then(()=>{t.dismiss("cancel")}):t.dismiss("cancel")};const r=()=>{i.forEach(e=>e())};i.push(o.onClusterValidityChanged(t=>{e.isValid=t})),i.push(o.onClusterViewChanged(()=>{if(!e.hasCluster&&0===o.getAttached().length){const e=o.getLocalNode();o.addLocation(e)}e.isChanged=o.isChanged()})),e.$on("$destroy",()=>{r(),o.setClusterView(void 0)}),o.setClusterView(a.clusterModel),e.hasCluster=a.clusterModel.hasCluster}angular.module("graphdb.framework.clustermanagement.controllers.edit-cluster-nodes-modal",["graphdb.framework.clustermanagement.services.cluster-context"]).controller("EditClusterNodesModalController",a),a.$inject=["$scope","$uibModalInstance","$translate","data","ClusterContextService","ModalService"]}}]);