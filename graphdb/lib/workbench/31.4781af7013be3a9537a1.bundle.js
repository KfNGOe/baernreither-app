(window.webpackJsonp=window.webpackJsonp||[]).push([[31,102,197,222,226,234,235,265,266,268,328,329],{100:function(e,t,n){"use strict";n.r(t),n.d(t,"removeSpecialChars",(function(){return o})),n.d(t,"toBoolean",(function(){return a})),n.d(t,"toTitleCase",(function(){return s}));var r=n(18);const o=e=>e.replace(/[()']/g,""),a=e=>"string"==typeof e?"true"===e:Boolean(e),s=e=>e?Object(r.upperFirst)(e.toLowerCase()):e},119:function(e,t,n){"use strict";n.r(t),n.d(t,"EventDataType",(function(){return r}));const r={DOWNLOAD_AS:"downloadAs",NOTIFICATION_MESSAGE:"notificationMessage",QUERY:"query",COUNT_QUERY:"countQuery",COUNT_QUERY_RESPONSE:"countQueryResponse",REQUEST_ABORTED:"requestAborted",QUERY_EXECUTED:"queryExecuted",SAVE_QUERY_OPENED:"saveQueryOpened"}},128:function(e,t,n){"use strict";n.r(t),n.d(t,"RouteConstants",(function(){return r}));const r={savedQueryName:"savedQueryName",savedQueryOwner:"owner",query:"query",name:"name",owner:"owner"}},129:function(e,t,n){"use strict";n.r(t),n.d(t,"QueryType",(function(){return r}));const r={SELECT:"SELECT",CONSTRUCT:"CONSTRUCT",ASK:"ASK",DESCRIBE:"DESCRIBE",INSERT:"INSERT",DELETE:"DELETE",LOAD:"LOAD",CLEAR:"CLEAR",CREATE:"CREATE",DROP:"DROP",COPY:"COPY",MOVE:"MOVE",ADD:"ADD"}},130:function(e,t,n){"use strict";n.r(t),n.d(t,"VIEW_SPARQL_EDITOR",(function(){return r}));const r="graphdb-workbench-sparql-editor"},141:function(e,t,n){"use strict";n.r(t),n.d(t,"TabQueryModel",(function(){return r}));class r{constructor(e,t,n,r=!0){this.queryName=e,this.query=t,this.owner=n,this.isPublic=r}}},149:function(e,t,n){"use strict";n.r(t),n.d(t,"buildQueryModel",(function(){return o})),n.d(t,"savedQueriesResponseMapper",(function(){return a})),n.d(t,"savedQueryResponseMapper",(function(){return s})),n.d(t,"queryPayloadFromEvent",(function(){return i}));var r=n(141);const o=(e,t,n,o)=>new r.TabQueryModel(t,e,n,o),a=e=>e&&e.data?e.data.map?e.data.map(e=>o(e.body,e.name,e.owner,e.shared)):[o(e.data.body,e.data.name,e.data.owner,e.data.shared)]:[],s=e=>{const t=a(e);return t.length?t[0]:null},i=e=>({name:e.detail.queryName,body:e.detail.query,shared:e.detail.isPublic})},183:function(e,t,n){"use strict";n.r(t),n.d(t,"ConnectorCommand",(function(){return r}));const r={CREATE:"create",REPAIR:"repair",DROP:"drop"}},190:function(e,t,n){"use strict";n.r(t),n.d(t,"BeforeUpdateQueryResult",(function(){return r})),n.d(t,"BeforeUpdateQueryResultStatus",(function(){return o}));class r{constructor(e,t,n,r){this.status=e,this.mesage=r,this.messageLabelKey=t,this.parameters=n}}const o={ERROR:"error",SUCCESS:"success"}},193:function(e,t,n){"use strict";n.r(t),n.d(t,"CancelAbortingQuery",(function(){return r}));class r extends Error{}},311:function(e,t,n){"use strict";n.r(t);var r=n(149),o=n(128),a=(n(99),n(207),n(19)),s=n(129),i=n(183),u=n(190),c=n(119),d=n(0),l=n(100),p=n(130),g=n(193),y=n(16);n(22);function m(e,t,n,m,E,f,C,R,S,h,v,A,b,q,Q,w,T,O){this.repository="";let U=C.getActiveRepository(),D=C.isActiveRepoOntopType();t.yasguiConfig=void 0,t.savedQueryConfig=void 0,t.prefixes={},t.inferUserSetting=!0,t.sameAsUserSetting=!0;const P=new Map;let _=!1;t.updateConfig=e=>{t.yasguiConfig={endpoint:L,componentId:p.VIEW_SPARQL_EDITOR,prefixes:t.prefixes,infer:D||t.inferUserSetting,sameAs:D||t.sameAsUserSetting,yasrToolbarPlugins:[F],beforeUpdateQuery:W(),outputHandlers:new Map([[c.EventDataType.QUERY_EXECUTED,N],[c.EventDataType.REQUEST_ABORTED,M]]),clearState:void 0!==e&&e}},t.getActiveRepositoryNoError=()=>U;const L=e=>{const t=(e=>{const t=e.getTab();if(t)return t.getYasqe()})(e);if(t)return C.resolveSparqlEndpoint(t.getQueryMode())},N=e=>{const t=P.get(e.tabId);t&&(t.dismiss(),P.delete(e.tabId))},M=e=>{if(e&&y.QueryMode.UPDATE!==e.queryMode){const t=e.getRepository(),n=e.getQueryTrackAlias();t&&n&&Q.deleteQuery(n,t)}},x=e=>{const t=e[o.RouteConstants.savedQueryName],n=e[o.RouteConstants.savedQueryOwner];v.getSavedQuery(t,n).then(e=>{const t=Object(r.savedQueryResponseMapper)(e);I(t).then($).finally(Y)}).catch(e=>{S.error(h.instant("query.editor.missing.saved.query.data.error",{savedQueryName:t,error:getError(e)}))})},B=e=>{const t=e[o.RouteConstants.name],n=e[o.RouteConstants.query],a=e[o.RouteConstants.owner],s=Object(r.buildQueryModel)(n,t,a,!0);I(s).then($).finally(Y)},I=e=>a.YasguiComponentDirectiveUtil.getOntotextYasguiElementAsync("#query-editor").then(t=>t.openTab(e)).then(e=>a.YasguiComponentDirectiveUtil.highlightTabName(e)),Y=()=>{_=!0,m.search({}),m.replace()},$=()=>Object(l.toBoolean)(m.search().execute)?a.YasguiComponentDirectiveUtil.getOntotextYasguiElementAsync("#query-editor").then(k).then(j):Promise.resolve(),k=e=>e.getQueryMode().then(t=>({yasguiComponent:e,queryMode:t})),j=({yasguiComponent:e,queryMode:t})=>"update"!==t?e.query():new Promise(t=>{const n=h.instant("confirm.execute"),r=Object(d.decodeHTML)(h.instant("query.editor.automatically.execute.update.warning"));q.openConfirmation(n,r,()=>t(e.query()),()=>t())}),F={createElement:e=>{const t=document.createElement("span");t.classList.add("explore-visual-graph-button-name");const n=document.createElement("button");return n.classList.add("explore-visual-graph-button"),n.classList.add("icon-data"),n.onclick=function(){const t={query:e.yasqe.getValue(),sameAs:e.yasqe.getSameAs(),inference:e.yasqe.getInfer()};m.path("graphs-visualizations").search(t)},n.appendChild(t),n},updateElement:(e,t)=>{if(e.classList.add("hidden"),!t.hasResults())return;const n=t.yasqe.getQueryType();s.QueryType.CONSTRUCT!==n&&s.QueryType.DESCRIBE!==n||e.classList.remove("hidden"),e.querySelector(".explore-visual-graph-button-name").innerText=h.instant("query.editor.visual.btn")},getOrder:()=>2},V=(e,t)=>({key:e,value:t}),H=e=>[V("name",e.data.name)],K=(e,n,r)=>{const o=t.$new(!0);o.beingBuiltConnector={percentDone:0,status:{processedEntities:0,estimatedEntities:0,indexedEntities:0,entitiesPerSecond:0},actionName:e,eta:"-",inline:!1,iri:n,name:r,doneCallback:function(){a.dismiss("cancel")}},o.getHumanReadableSeconds=t.getHumanReadableSeconds;const a=R.open({templateUrl:"pages/connectorProgress.html",controller:"CreateProgressCtrl",size:"lg",backdrop:"static",scope:o});return a},W=()=>(e,t)=>A.checkConnector(e).then(e=>e.data.command?e.data.hasSupport?i.ConnectorCommand.CREATE===e.data.command?((e,t)=>{const n=K(h.instant("externalsync.creating"),e.data.iri,e.data.name);return P.set(t,n),new u.BeforeUpdateQueryResult(u.BeforeUpdateQueryResultStatus.SUCCESS,"created.connector",H(e))})(e,t):i.ConnectorCommand.REPAIR===e.data.command?((e,t)=>{const n=K(h.instant("externalsync.repairing"),e.data.iri,e.data.name);return P.set(t,n),new u.BeforeUpdateQueryResult(u.BeforeUpdateQueryResultStatus.SUCCESS,"query.editor.repaired.connector",H(e))})(e,t):i.ConnectorCommand.DROP===e.data.command?(e=>new u.BeforeUpdateQueryResult(u.BeforeUpdateQueryResultStatus.SUCCESS,"externalsync.delete.success.msg",H(e)))(e):void 0:(e=>{const t=[V("connectorName",e.data.connectorName),V("pluginName",e.data.pluginName)];return new u.BeforeUpdateQueryResult(u.BeforeUpdateQueryResultStatus.ERROR,"query.editor.inactive.plugin.warning.msg",t)})(e):new u.BeforeUpdateQueryResult(u.BeforeUpdateQueryResultStatus.SUCCESS)).catch(e=>{console.log("Checking connector error: ",e)}),z=e=>{const n=document.querySelectorAll('script[src*="https://www.gstatic.com/"]');if(n.length>0){const e=E.getLanguage();let t="module.js";if("en"!==e&&(t=`module__${e}.js`),!Array.prototype.some.call(n,e=>e.src.includes(t)))return void location.reload()}Promise.all([f.getPrincipal(),C.getPrefixes(U)]).then(([n,r])=>{t.prefixes=r,(e=>{t.inferUserSetting=e.appSettings.DEFAULT_INFERENCE,t.sameAsUserSetting=e.appSettings.DEFAULT_SAMEAS})(n),((e=!1)=>{t.updateConfig(e);const n=m.search();n.hasOwnProperty(o.RouteConstants.savedQueryName)?x(n):n.hasOwnProperty(o.RouteConstants.query)?B(n):b.isActive()&&I()})(e)})},G=[],J=e=>{const t=a.YasguiComponentDirectiveUtil.getOntotextYasguiElement("#query-editor");t&&t.abortAllRequests().then(()=>{})};window.addEventListener("beforeunload",J);const X=e=>new Promise((t,n)=>{if(!e||e.queriesCount<1&&e.updatesCount<1)return void t();const r=h.instant("common.confirm"),o=Object(d.decodeHTML)((e=>{let t="view.sparql-editor.leave_page.run_queries.confirmation.";!e||e.queriesCount<1?t+="none_queries_":1===e.queriesCount?t+="one_query_":t+="queries_",e.updatesCount&&0!==e.updatesCount?1===e.updatesCount?t+="one_update":t+="updates":t+="non_updates",t+=".message";const n={queriesCount:e.queriesCount,updatesCount:e.updatesCount};return h.instant(t,n)})(e));q.openSimpleModal({title:r,message:o,warning:!0}).result.then((function(){t()}),(function(){n(new g.CancelAbortingQuery)}))});let Z=void 0;G.push(e.$on("$locationChangeStart",e=>{if(_)return void(_=!1);const t=a.YasguiComponentDirectiveUtil.getOntotextYasguiElement("#query-editor");if(!t||Z)return;e.preventDefault();const n=m.path(),r=m.search();t.getOngoingRequestsInfo().then(e=>X(e)).then(()=>t.abortAllRequests()).then(()=>{Z=!0,m.path(n).search(r)}).catch(e=>{if(!(e instanceof g.CancelAbortingQuery))throw e})}));const ee=()=>{T.set(O.SPARQL_LAST_REPO,U)};G.push(t.$on("language-changed",(function(){location.reload()}))),G.push(w.subscribe("before-language-change",(function(e){return new Promise(t=>{q.openSimpleModal({title:h.instant("query.editor.language.change.warning.title"),message:h.instant("query.editor.reload.page.warning"),warning:!0}).result.then((function(){t(e)}),(function(){e.cancel=!0,t(e)}))})}))),G.push(t.$on("$destroy",()=>{ee(),G.forEach(e=>e()),window.removeEventListener("beforeunload",J)})),G.push(t.$watch(t.getActiveRepositoryObject,e=>{e&&(U=C.getActiveRepository(),D=C.isActiveRepoOntopType(e),T.get(O.SPARQL_LAST_REPO)!==U?(z(!0),ee()):z(!1))}))}angular.module("graphdb.framework.sparql-editor.controllers",["ui.bootstrap","graphdb.framework.rest.connectors.service","graphdb.framework.externalsync.controllers","graphdb.framework.utils.event-emitter-service","graphdb.framework.utils.localstorageadapter"]).controller("SparqlEditorCtrl",m),m.$inject=["$rootScope","$scope","$q","$location","$languageService","$jwtAuth","$repositories","$uibModal","toastr","$translate","SparqlRestService","ConnectorsRestService","GuidesService","ModalService","MonitoringRestService","EventEmitterService","LocalStorageAdapter","LSKeys"]}}]);