(window.webpackJsonp=window.webpackJsonp||[]).push([[51,97,198,199,294],{102:function(e,t,n){"use strict";n.r(t),n.d(t,"ConnectorTypesListModel",(function(){return s})),n.d(t,"ConnectorTypeModel",(function(){return r})),n.d(t,"ConnectorListModel",(function(){return o})),n.d(t,"ConnectorModel",(function(){return c})),n.d(t,"ConnectorSettingsModel",(function(){return i}));class s{constructor(e={}){this._connectors=e.connectors||[]}getConnectorByName(e){return this._connectors.find(t=>t.name===e)}get connectors(){return this._connectors}set connectors(e){this._connectors=e}}class r{constructor(e){this._name=e.name,this._prefix=e.prefix}get name(){return this._name}set name(e){this._name=e}get prefix(){return this._prefix}set prefix(e){this._prefix=e}}class o{constructor(e=[]){this._connectors=e.connectors}get connectors(){return this._connectors}set connectors(e){this._connectors=e}}class c{constructor(e){this._name=e.name,this._settings=new i(e)}get settings(){return this._settings}set settings(e){this._settings=e}get name(){return this._name}set name(e){this._name=e}}class i{constructor(e){this._settings=e.values||{}}get settings(){return this._settings}set settings(e){this._settings=e}}},104:function(e,t,n){"use strict";n.r(t);n(99);var s=n(109),r=n(92);function o(e){const t=(t,n)=>e.getConnectors(t,n).then(e=>Object(s.connectorTypesListMapper)(e.data)),n=(t,n,r)=>e.hasConnector(encodeURIComponent(t),n,r).then(e=>Object(s.connectorsMapper)(e.data));return{getConnectorTypes:t,getConnectorsByType:n,getConnectorPrefixByName:(e,n,s)=>t(n,s).then(t=>{const n=t.getConnectorByName(e);return n?n.prefix:null}),getConnectorsByTypeAsSelectMenuOptions:(e,t,s)=>n(e,t,s).then(e=>e.connectors.map(e=>new r.SelectMenuOptionsModel({value:e.name,label:e.name})))}}angular.module("graphdb.framework.core.services.connectors",["graphdb.framework.rest.connectors.service"]).factory("ConnectorsService",o),o.$inject=["ConnectorsRestService"]},109:function(e,t,n){"use strict";n.r(t),n.d(t,"connectorTypesListMapper",(function(){return r})),n.d(t,"connectorsMapper",(function(){return o}));var s=n(102);const r=e=>{const t=new s.ConnectorTypesListModel;return e?(t.connectors=Object.keys(e).map(t=>new s.ConnectorTypeModel({name:t,prefix:e[t]})),t):t},o=e=>{const t=new s.ConnectorListModel;return e?(t.connectors=e.map(e=>new s.ConnectorModel(e)),t):t}},92:function(e,t,n){"use strict";n.r(t),n.d(t,"SelectMenuOptionsModel",(function(){return s})),n.d(t,"TextFieldModel",(function(){return r})),n.d(t,"NumericRangeModel",(function(){return o}));class s{constructor({label:e,value:t,selected:n=!1,data:s={}}){this._label=e,this._value=t,this._selected=n,this._data=s}get label(){return this._label}set label(e){this._label=e}get value(){return this._value}set value(e){this._value=e}get selected(){return this._selected}set selected(e){this._selected=e}get data(){return this._data}set data(e){this._data=e}}class r{constructor(e){this._value=e.value,this._minLength=e.minLength,this._maxLength=e.maxLength}get value(){return this._value}set value(e){this._value=e}get maxLength(){return this._maxLength}set maxLength(e){this._maxLength=e}get minLength(){return this._minLength}set minLength(e){this._minLength=e}}class o{constructor(e){this._value=e.value,this._minValue=e.minValue,this._maxValue=e.maxValue,this._step=e.step}get value(){return this._value}set value(e){this._value=e}get minValue(){return this._minValue}set minValue(e){this._minValue=e}get maxValue(){return this._maxValue}set maxValue(e){this._maxValue=e}get step(){return this._step}set step(e){this._step=e}}},99:function(e,t){angular.module("graphdb.framework.rest.connectors.service",[]).factory("ConnectorsRestService",n),n.$inject=["$http"];function n(e){return{getConnectors:function(t,n){if(t)return e.get("rest/connectors",{headers:{"X-GraphDB-Repository":t,"X-GraphDB-Repository-Location":n}});return e.get("rest/connectors")},initConnector:function(t){return e.get("rest/connectors/options?prefix="+t)},hasConnector:function(t,n,s){if(n)return e.get("rest/connectors/existing?prefix="+t,{headers:{"X-GraphDB-Repository":n,"X-GraphDB-Repository-Location":s}});return e.get("rest/connectors/existing?prefix="+t)},checkConnector:function(t){return e.post("rest/connectors/check",t,{headers:{"Content-Type":"text/plain"}})}}}}}]);