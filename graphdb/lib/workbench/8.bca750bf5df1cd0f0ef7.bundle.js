(window.webpackJsonp=window.webpackJsonp||[]).push([[8,56,71,145,149,150,321,323],{138:function(e,t,n){"use strict";n.r(t),n.d(t,"markdownCodeCopyPlugin",(function(){return a}));const o={buttonStyle:"position: absolute; top: 0; right: 0;",buttonClass:""};function r(e,t){return t=_.merge({},o,t),(...n)=>{const[o,r]=n,a=o[r],i=o[r].content.replaceAll('"',"&quot;").replaceAll("'","&apos;"),s=e(...n);return"fence"===a.type&&s.trim()?`<div style="position: relative">\n                        ${s}\n                        <copy-to-clipboard\n                            style="${t.buttonStyle}"\n                            class="${t.buttonClass}"\n                            tooltip-text="ttyg.chat_panel.btn.copy_sparql.tooltip"\n                            text-to-copy="${i}">\n                        </copy-to-clipboard>\n                    </div>`:s}}const a=(e,t)=>{e.renderer.rules.code_block=r(e.renderer.rules.code_block,t),e.renderer.rules.fence=r(e.renderer.rules.fence,t)}},139:function(e,t,n){"use strict";n.r(t),n.d(t,"markdownOpenInSparqlEditorPlugin",(function(){return a}));const o={buttonStyle:"position: absolute; top: 0; right: 0;",buttonClass:""};function r(e,t){return t=_.merge({},o,t),(...n)=>{const[o,r]=n,a=o[r],i=o[r].content.replaceAll('"',"&quot;").replaceAll("'","&apos;"),s=e(...n);return"fence"===a.type&&"sparql"===a.info&&s.trim()?`<div style="position: relative">\n                        ${s}\n                        <open-in-sparql-editor\n                            style="${t.buttonStyle}"\n                            class="${t.buttonClass}"\n                            execute-query="${t.executeQuery}"\n                            repository-id="${t.repositoryId}"\n                            query="${i}">\n                        </open-in-sparql-editor>\n                    </div>`:s}}const a=(e,t)=>{e.renderer.rules.code_block=r(e.renderer.rules.code_block,t),e.renderer.rules.fence=r(e.renderer.rules.fence,t)}},146:function(e,t,n){"use strict";n.r(t),n.d(t,"getHumanReadableTimestamp",(function(){return o}));const o=(e,t,n,o={})=>{if(!n)return"";const r=new Date(n),a=new Date,i=new Date(a.getFullYear(),a.getMonth(),a.getDate()),s=new Date(i);s.setDate(i.getDate()-1);const c=new Date(r.getFullYear(),r.getMonth(),r.getDate()),l=o.timeFormat?t("date")(r,o.timeFormat):"";if(c.getTime()===i.getTime())return e.instant("common.dates.today")+l;if(c.getTime()===s.getTime())return e.instant("common.dates.yesterday")+l;{const e=o.dateFormat||"yyyy-MM-dd";return t("date")(r,e)+l}}},160:function(e,t,n){"use strict";n.r(t);var o=n(607),r=n(138),a=n(139);const i={buttonStyle:"position: absolute; top: 0; right: 0; margin-right: 24px"};function s(e){const t=Object(o.a)().use(r.markdownCodeCopyPlugin).use(a.markdownOpenInSparqlEditorPlugin,i);return{renderMarkdown:(n,s)=>{try{return e.trustAsHtml((e=>e?Object(o.a)().use(r.markdownCodeCopyPlugin,e).use(a.markdownOpenInSparqlEditorPlugin,_.merge({},i,e)):t)(s).render(n))}catch(t){return console.error("Error rendering markdown:",t),e.trustAsHtml(n)}}}}angular.module("graphdb.framework.core.services.markdown-service",[]).service("MarkdownService",s),s.$inject=["$sce"]},209:function(e,t,n){"use strict";n.r(t);n(230),n(231);var o=n(87),r=n(131),a=n(146);function i(e,t,n,i,s){return{restrict:"E",templateUrl:"js/angular/ttyg/templates/chat-item-detail.html",scope:{chatItemDetail:"=",showActions:"=",asking:"=",disabled:"=",onRegenerateQuestion:"&",onAskHowDeliveredAnswer:"&"},link:(c,l,d)=>{c.ExplainQueryType=r.ExplainQueryType,c.repositoryId=void 0,c.markdownContentOptions=void 0,c.agentNameByIdMap={},c.explainResponseModel={},c.loadingExplainResponse={},c.regenerateQuestion=()=>{c.onRegenerateQuestion({chatItem:c.chatItemDetail})},c.explainResponse=o=>{n.hasExplainResponse(o)?n.toggleExplainResponse(o):(c.loadingExplainResponse[o]=!0,i.explainResponse(c.chatItemDetail,o).then(e=>{n.addExplainResponseCache(e)}).catch(()=>{e.error(t.instant("ttyg.chat_panel.messages.explain_response_failure"))}).finally(()=>c.loadingExplainResponse[o]=!1))},c.onAskHowAnswerWasDerived=()=>{c.onAskHowDeliveredAnswer()},c.onOpenInSparqlEditor=e=>{c.chatItemDetail.agentId&&n.emit(o.TTYGEventName.GO_TO_SPARQL_EDITOR,{query:e,repositoryId:c.repositoryId})},c.showRawQuery=e=>{const t=e.rawQuery.replace(/\s+/g,""),n=e.query.replace(/\s+/g,"");return t&&t!==n},c.getRepositoryId=e=>{const t=n.getAgent(c.chatItemDetail.agentId);return t?t.repositoryId:""},c.getHumanReadableQuestionTimestamp=e=>Object(a.getHumanReadableTimestamp)(t,s,e);const p=()=>{c.chatItemDetail.answers.forEach(e=>{c.explainResponseModel[e.id]=n.getExplainResponse(e.id)})},E=[];E.push(n.onExplainResponseCacheUpdated(()=>{p()})),E.push(n.onAgentsListChanged(()=>{c.agentNameByIdMap=n.getAgents().agentNameByIdMap})),c.$on("$destroy",()=>{E.forEach(e=>e())}),c.repositoryId=c.getRepositoryId(),c.markdownContentOptions={repositoryId:c.repositoryId},p()}}}angular.module("graphdb.framework.ttyg.directives.chat-item-detail",["graphdb.framework.core.directives.open-in-sparql-editor","graphdb.framework.core.directives.markdown-content"]).directive("chatItemDetail",i),i.$inject=["toastr","$translate","TTYGContextService","TTYGService","$filter"]},230:function(e,t,n){"use strict";n.r(t);n(160);function o(e,t){return{template:'<div class="markdown-content" ng-bind-html="markdownContent"></div>',restrict:"E",scope:{content:"@",options:"="},link:function(n,o){n.markdownContent=void 0;const r=()=>{n.$evalAsync(()=>{const t=o.find(".markdown-content");e(angular.element(t).contents())(n)})};n.markdownContent=t.renderMarkdown(n.content,n.options),r()}}}angular.module("graphdb.framework.core.directives.markdown-content",["graphdb.framework.core.services.markdown-service"]).directive("markdownContent",o),o.$inject=["$compile","MarkdownService"]},231:function(e,t,n){"use strict";n.r(t);var o=n(0);function r(e,t,n,r){return{template:'\n            <style>\n                .open-in-sparql-editor-btn {\n                    line-height: 0.75;\n                }\n                .open-in-sparql-editor-btn .fa:nth-child(2) {\n                    margin-left: -0.2em;\n                    margin-right: -0.2em;\n                    font-size: 0.9em;\n                }\n            </style>\n            <button class="btn btn-link btn-sm open-in-sparql-editor-btn" gdb-tooltip="{{\'ttyg.chat_panel.btn.open_in_sparql_editor.tooltip\' | translate}}" ng-click="onGoToSparqlEditorView()">\n                <i class="fa fa-bracket-curly"></i><i class="fa fa-ellipsis"></i><i class="fa fa-bracket-curly-right"></i>\n            </button>\n        ',restrict:"E",scope:{query:"@",repositoryId:"@",executeQuery:"@"},link:function(a,i){a.tooltipText="ttyg.chat_panel.btn.open_in_sparql_editor.tooltip";const s="true"===a.executeQuery;a.onGoToSparqlEditorView=()=>{const r=e.getActiveRepository();r&&r===a.repositoryId?c(a.query):n.openConfirmationModal({title:t.instant("common.confirm"),message:Object(o.decodeHTML)(t.instant("ttyg.chat_panel.dialog.confirm_repository_change.body",{repositoryId:a.repositoryId})),confirmButtonKey:"ttyg.chat_panel.btn.proceed.label"},()=>{e.setRepository(e.getRepository(a.repositoryId)),c(a.query)})};const c=e=>{r.open(`/sparql?query=${encodeURIComponent(e)}&execute=${s}`,"_blank")}}}}angular.module("graphdb.framework.core.directives.open-in-sparql-editor",[]).directive("openInSparqlEditor",r),r.$inject=["$repositories","$translate","ModalService","$window"]},87:function(e,t,n){"use strict";n.r(t),n.d(t,"TTYGEventName",(function(){return a}));var o=n(18);function r(e){let t=void 0,n=void 0,r=void 0,i=void 0,s={},c=void 0,l=!1;const d=()=>Object(o.cloneDeep)(t),p=()=>Object(o.cloneDeep)(n),E=e=>{n=Object(o.cloneDeep)(e),_(a.CHAT_LIST_UPDATED,p())},u=()=>Object(o.cloneDeep)(r),g=()=>Object(o.cloneDeep)(i),A=()=>Object(o.cloneDeep)(s),C=e=>!!s[e],T=()=>l,_=(t,n)=>{e.emitSync(t,Object(o.cloneDeep)(n))},m=(t,n)=>e.subscribeSync(t,e=>n(e));return{resetContext:()=>{t=void 0,n=void 0,r=void 0,i=void 0,s={},c=void 0,l=!1},emit:_,subscribe:m,getChats:p,updateChats:E,addChat:e=>{n.appendChat(e),E(n)},replaceChat:(e,t)=>{n.replaceChat(e,t),E(n)},onChatsListChanged:e=>(n&&angular.isFunction(e)&&e(p()),m(a.CHAT_LIST_UPDATED,t=>e(t))),getSelectedChat:u,selectChat:e=>{r&&r.id===e.id||(r=Object(o.cloneDeep)(e),_(a.SELECT_CHAT,u()))},deselectChat:()=>{r=void 0,_(a.SELECT_CHAT,u())},deleteChat:e=>{n.deleteChat(e),E(n)},onSelectedChatChanged:e=>(angular.isFunction(e)&&e(u()),m(a.SELECT_CHAT,t=>e(t))),updateSelectedChat:e=>{r&&r.id&&e&&r.id!==e.id||(r=Object(o.cloneDeep)(e),_(a.SELECTED_CHAT_UPDATED,u()))},onSelectedChatUpdated:e=>(r&&angular.isFunction(e)&&e(u()),m(a.SELECTED_CHAT_UPDATED,t=>e(t))),onLastMessageReceived:e=>(r&&angular.isFunction(e)&&e(u()),m(a.LAST_MESSAGE_RECEIVED,t=>e(t))),updateAgents:e=>{t=Object(o.cloneDeep)(e),_(a.AGENT_LIST_UPDATED,d())},onAgentsListChanged:e=>(t&&angular.isFunction(e)&&e(d()),m(a.AGENT_LIST_UPDATED,t=>e(t))),getAgents:d,getAgent:e=>{if(t)return Object(o.cloneDeep)(t.getAgent(e))},selectAgent:e=>{i=Object(o.cloneDeep)(e),_(a.AGENT_SELECTED,g())},getSelectedAgent:g,onSelectedAgentChanged:e=>(i&&angular.isFunction(e)&&e(g()),m(a.AGENT_SELECTED,t=>e(t))),getDefaultAgent:()=>Object(o.cloneDeep)(c),setDefaultAgent:e=>{c=e},setCanModifyAgent:e=>{l=Object(o.cloneDeep)(e),_(a.CAN_MODIFY_AGENT_UPDATED,T())},getCanModifyAgent:T,onCanUpdateAgentUpdated:e=>(angular.isFunction(e)&&e(T()),m(a.CAN_MODIFY_AGENT_UPDATED,t=>e(t))),hasExplainResponse:C,toggleExplainResponse:e=>{C(e)&&(s[e].expanded=!s[e].expanded,_(a.EXPLAIN_RESPONSE_CACHE_UPDATED,A()))},getExplainResponse:e=>Object(o.cloneDeep)(s[e]),addExplainResponseCache:e=>{s[e.answerId]=Object(o.cloneDeep)(e),_(a.EXPLAIN_RESPONSE_CACHE_UPDATED,A())},onExplainResponseCacheUpdated:e=>(angular.isFunction(e)&&e(A()),m(a.EXPLAIN_RESPONSE_CACHE_UPDATED,t=>e(t)))}}angular.module("graphdb.framework.ttyg.services.ttygcontext",[]).factory("TTYGContextService",r),r.$inject=["EventEmitterService","TTYGService"];const a={CREATE_CHAT:"createChat",CREATE_CHAT_SUCCESSFUL:"chatCreated",CREATE_CHAT_FAILURE:"chatCreationFailed",RENAME_CHAT:"renameChat",RENAME_CHAT_SUCCESSFUL:"chatRenamed",RENAME_CHAT_FAILURE:"chatRenamedFailure",SELECT_CHAT:"selectChat",SELECTED_CHAT_UPDATED:"selectChatUpdated",LAST_MESSAGE_RECEIVED:"lastMessageReceived",DELETING_CHAT:"deletingChat",DELETE_CHAT:"deleteChat",DELETE_CHAT_SUCCESSFUL:"chatDeleted",DELETE_CHAT_FAILURE:"chatDeletedFailure",CHAT_EXPORT:"chatExport",CHAT_EXPORT_SUCCESSFUL:"chatExportSuccess",CHAT_EXPORT_FAILURE:"chatExportFailure",CHAT_LIST_UPDATED:"chatListUpdated",ASK_QUESTION:"askQuestion",ASK_QUESTION_FAILURE:"askQuestionFailure",CONTINUE_CHAT_RUN:"continueChatRun",LOAD_CHATS:"loadChats",LOAD_CHAT_SUCCESSFUL:"loadChatSuccess",LOAD_CHAT_FAILURE:"loadChatFailure",AGENT_LIST_UPDATED:"agentListUpdated",OPEN_AGENT_SETTINGS:"openAgentSettings",EDIT_AGENT:"editAgent",CLONE_AGENT:"cloneAgent",DELETE_AGENT:"deleteAgent",AGENT_DELETED:"agentDeleted",DELETING_AGENT:"deletingAgent",AGENT_SELECTED:"agentSelected",GO_TO_CREATE_SIMILARITY_VIEW:"goToCreateSimilarityView",GO_TO_CONNECTORS_VIEW:"goToConnectorsView",EXPLAIN_RESPONSE:"explainResponse",EXPLAIN_RESPONSE_CACHE_UPDATED:"explainResponseCacheUpdated",GO_TO_SPARQL_EDITOR:"openQueryInSparqlEditor",CAN_MODIFY_AGENT_UPDATED:"canModifyAgentUpdated"}}}]);