export = GetStatementsPayload;
/**
 * Payload object holding all request parameters applicable for the statements
 * endpoint.
 * <code>new GetStatementsPayload().setSubject('<http://ns>')
 *  .setInference(true).get()</code> returns a constructed payload <code>
 * { subject: '<http://ns>', inference: true }</code>
 *
 * By default <code>responseType</code> is set to
 * <code>application/rdf+json</code>.
 *
 * @class
 * @author Mihail Radkov
 * @author Svilen Velikov
 */
declare class GetStatementsPayload extends StatementPayload {
    /**
     * @param {boolean} [inference] defines if inferred statements should be
     *      included in the result of GET requests.
     * @return {GetStatementsPayload}
     */
    setInference(inference?: boolean): GetStatementsPayload;
    /**
     * @return {boolean} inference
     */
    getInference(): boolean;
    /**
     * Sets responseType parameter.
     * @param {RDFMimeType} [responseType]
     * @return {GetStatementsPayload}
     */
    setResponseType(responseType?: RDFMimeType): GetStatementsPayload;
    /**
     * @return {string} responseType
     */
    getResponseType(): string;
}
import StatementPayload = require("../repository/statement-payload");
import RDFMimeType = require("../http/rdf-mime-type");
