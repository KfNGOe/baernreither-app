export = RepositoryClientConfig;
/**
 * Configuration wrapper used for initialization of {@link BaseRepositoryClient}
 * implementations.
 *
 * @class
 * @extends ClientConfig
 * @author Mihail Radkov
 * @author Svilen Velikov
 * @author Teodossi Dossev
 */
declare class RepositoryClientConfig extends ClientConfig {
    /**
     * Sets the repository endpoint URLs.
     *
     * @param {string[]} endpoints the endpoint URLs
     *
     * @return {this} current config for method chaining
     */
    setEndpoints(endpoints: string[]): this;
    endpoints: any[] | string[];
    /**
     * Inserts a repository endpoint URL to the rest of the endpoints.
     *
     * @param {string} endpoint repository endpoint URL
     *
     * @return {this} current config for method chaining
     */
    addEndpoint(endpoint: string): this;
    /**
     * Gets the repository endpoint URLs.
     *
     * @return {string[]}
     */
    getEndpoints(): string[];
    /**
     * Sets the default RDF MIME type.
     *
     * @param {string} defaultRDFMimeType
     *
     * @return {this} current config for method chaining
     */
    setDefaultRDFMimeType(defaultRDFMimeType: string): this;
    defaultRDFMimeType: string;
    /**
     * Returns the default RDF MIME type.
     *
     * @return {string}
     */
    getDefaultRDFMimeType(): string;
    /**
     * Sets the default read timeout for HTTP requests.
     *
     * @param {number} readTimeout the timeout in milliseconds
     *
     * @return {this} current config for method chaining
     */
    setReadTimeout(readTimeout: number): this;
    readTimeout: number;
    /**
     * Returns the default read timeout for HTTP requests.
     *
     * @return {number}
     */
    getReadTimeout(): number;
    /**
     * Sets the default write timeout for HTTP requests.
     *
     * @param {number} writeTimeout the timeout in milliseconds
     *
     * @return {this} current config for method chaining
     */
    setWriteTimeout(writeTimeout: number): this;
    writeTimeout: number;
    /**
     * Returns the default write timeout for HTTP requests.
     *
     * @return {number}
     */
    getWriteTimeout(): number;
}
import ClientConfig = require("../http/client-config");
