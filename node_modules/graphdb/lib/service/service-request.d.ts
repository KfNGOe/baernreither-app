export = ServiceRequest;
/**
 * Wrapper class for service request.
 *
 * Contains the request builder and the executor function that will perform
 * the request and produce the results.
 *
 * This wrapper allows to modify the request builder before executing it,
 * preserving any chained promises to the executor.
 *
 * @author Mihail Radkov
 */
declare class ServiceRequest {
    /**
     * Instantiates the request with the supplied builder and executor.
     *
     * @param {HttpRequestBuilder} httpRequestBuilder builder carrying
     * the request data and params
     * @param {Function} requestExecutor executor for HTTP requests
     */
    constructor(httpRequestBuilder: HttpRequestBuilder, requestExecutor: Function);
    httpRequestBuilder: HttpRequestBuilder;
    requestExecutor: Function;
    /**
     * Returns the request builder.
     *
     * @return {HttpRequestBuilder}
     */
    getHttpRequestBuilder(): HttpRequestBuilder;
    /**
     * Triggers service request execution.
     *
     * @return {Promise}
     */
    execute(): Promise<any>;
}
