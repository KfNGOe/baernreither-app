<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://www.w3.org/ns/shacl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:ns0="http://www.w3.org/ns/shacl#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#">
    <xs:import namespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#" schemaLocation="rdf.xsd"/>
    <xs:import namespace="http://www.w3.org/2000/01/rdf-schema#" schemaLocation="rdfs.xsd"/>
    <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
    <xs:element name="declare">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="rdf:Description"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="prefix" type="xs:NCName"/>
    <xs:element name="namespace" type="xs:anyURI"/>
    <xs:element name="alternativePath">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="rdf:Description"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="class">
        <xs:complexType>
            <xs:attribute ref="rdf:resource" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="closed">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:boolean">
                    <xs:attribute ref="rdf:datatype" use="required"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="datatype">
        <xs:complexType>
            <xs:attribute ref="rdf:resource" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="hasValue">
        <xs:complexType>
            <xs:attribute ref="rdf:resource" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="in">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="rdf:Description"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="maxCount">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:integer">
                    <xs:attribute ref="rdf:datatype" use="required"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="minCount">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:integer">
                    <xs:attribute ref="rdf:datatype" use="required"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="not">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="rdf:Description"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="path">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" ref="rdf:Description"/>
            </xs:sequence>
            <xs:attribute ref="rdf:resource"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="zeroOrMorePath">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" ref="rdf:Description"/>
            </xs:sequence>
            <xs:attribute ref="rdf:resource"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="oneOrMorePath">
        <xs:complexType>
            <xs:attribute ref="rdf:resource" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="NodeShape">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" ref="ns0:node"/>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="ns0:property"/>
                    <xs:element ref="ns0:xone"/>
                    <xs:element ref="rdfs:comment"/>
                    <xs:element ref="rdfs:label"/>
                    <xs:element ref="rdfs:seeAlso"/>
                    <xs:element ref="ns0:targetClass"/>
                    <xs:element ref="ns0:targetObjectsOf"/>
                    <xs:element ref="ns0:targetSubjectsOf"/>
                </xs:choice>
                <xs:choice minOccurs="0">
                    <xs:element ref="ns0:nodeKind"/>
                    <xs:element ref="ns0:or"/>
                </xs:choice>
            </xs:sequence>
            <xs:attribute ref="rdf:about" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="targetClass">
        <xs:complexType>
            <xs:attribute ref="rdf:resource" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="targetObjectsOf">
        <xs:complexType>
            <xs:attribute ref="rdf:resource" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="targetSubjectsOf">
        <xs:complexType>
            <xs:attribute ref="rdf:resource" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="node">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" ref="ns0:NodeShape"/>
                <xs:element minOccurs="0" ref="rdf:Description"/>
            </xs:sequence>
            <xs:attribute ref="rdf:resource"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="or">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="rdf:Description"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="nodeKind">
        <xs:complexType>
            <xs:attribute ref="rdf:resource" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="property">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="rdf:Description"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="xone">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="rdf:Description"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
</xs:schema>
