{"version":3,"sources":["webpack:///./src/js/lib/d3-tip/d3-tip-patch.js","webpack:///./src/js/lib/common/d3-utils.js","webpack:///./src/js/angular/repositories/repository.constants.js","webpack:///./src/js/angular/graphexplore/controllers/graphs-visualizations.controller.js"],"names":["direction","offset","html","node","initNode","svg","point","target","customPosition","tip","vis","el","tagName","toLowerCase","ownerSVGElement","createSVGPoint","document","body","appendChild","show","args","Array","prototype","slice","call","arguments","length","SVGElement","pop","coords","content","apply","this","poffset","dir","nodel","getNodeEl","i","directions","scrollTop","documentElement","scrollLeft","customPos","style","opacity","classed","direction_callbacks","get","top","left","hide","attr","n","v","d3","selection","functor","destroy","remove","map","bbox","getScreenBBox","y","offsetHeight","x","offsetWidth","s","e","w","nw","ne","sw","se","keys","select","createElement","position","targetel","event","getScreenCTM","parentNode","matrix","tbbox","getBBox","width","height","matrixTransform","D3","Text","calcFontSizeRaw","text","radius","minimumSize","isMultiline","textSize","substring","match","Math","round","calcFontSize","getTextWithElipsisIfNeeded","str","threshold","Transition","fadeIn","sel","duration","transition","fadeOut","Click","delayDblClick","dispatch","rebind","down","wait","on","mouse","Date","d","a","b","sqrt","pow","window","clearTimeout","dblclick","setTimeout","click","STATIC_RULESETS","id","name","REPOSITORY_TYPES","graphdbRepo","free","eeWorker","eeMaster","ontop","fedx","FILENAME_PATTERN","RegExp","NUMBER_PATTERN","GraphsVisualizationsCtrl","$scope","$rootScope","$repositories","$licenseService","toastr","$timeout","$http","ClassInstanceDetailsService","AutocompleteRestService","$q","$location","$jwtAuth","UiScrollService","ModalService","$modal","$window","LocalStorageAdapter","LSKeys","SavedGraphsRestService","GraphConfigRestService","RDF4JRepositoriesRestService","$translate","GuidesService","languageChanged","propertiesObj","propertiesQueryObj","items","propertiesNotFiltered","searchVisible","nodeSelected","queryResultsMode","embedded","search","openedNodeInfoPanel","undefined","invalidLimit","INVALID_LINKS_MSG","instant","INVALID_LINKS_TOOLTIP","$on","propertiesSearchPlaceholder","onopen","onclose","angular","noop","query","uri","config","saved","noGoHome","datasource","current","type2color","colorIndex","panAndZoom","behavior","zoom","scaleExtent","transformValues","tipElement","openedLink","getSettings","isActive","defaultSettings","saveSettings","copyToClipboard","openCopyToClipboardModal","renderSettings","settings","languagesMap","_","languages","preferredTypesMap","preferredTypes","rejectedTypesMap","rejectedTypes","preferredPredicatesMap","preferredPredicates","rejectedPredicatesMap","rejectedPredicates","key","index","count","success","initLazyList","$watch","each","item","revision","adapterContainer","adapter","remain","propertiesFilterFunc","indexOf","resetState","configLoaded","lastSavedGraphName","lastSavedGraphId","shared","numberOfPinnedNodes","pushHistory","searchParams","state","goToHome","url","shouldShowSettings","defaultGraphConfig","shouldDisableSameAs","sameAsCheckbox","$","prop","isDefined","reload","toggleMoreInfo","ev","element","currentTarget","parent","next","toggle","children","toggleClass","linksLimit","includeInferred","sameAsState","showLinksText","preferredTypesOnly","preferredPredicatesOnly","includeSchema","copy","when","getPrincipal","then","principal","settingsFromPrincipal","appSettings","localStorageSettings","GRAPHS_VIZ","unique","set","initSettings","resetSettings","validateLinksLimit","changeLimit","delta","test","showSettings","showInfoPanel","showFilter","showNodeInfo","showPredicates","reExpandNode","rootNodeIri","$broadcast","loadGraphForQuery","queryString","sameAsParam","inferredParam","sendSameAs","sendInferred","loading","method","headers","data","response","initGraphFromResponse","error","getError","removeSpecialChars","string","replace","convertTripleToLinkId","triple","tripleLike","tripleParts","split","join","convertLinkDataToLinkId","link","source","iri","getNodeX","isTriple","getElementById","__data__","getNodeY","createTriple","value","trim","createArrowMarkerUniqueID","Graph","nodes","links","tripleNodes","Map","tripleLinksCopy","addNode","push","computeConnectedness","counts","seenLinks","i1","i2","seenKey","min","max","connectedness","addAndMatchLinks","newLinks","isTripleSource","getTripleNode","find","o","isTripleTarget","matchedLink","predicates","linkId","graph","has","matchLinksToNodes","delete","filter","countLinks","findLinksForNode","l","linksTypes","linksForNode","types","uniq","flatten","linksPredicates","removeTriples","triplesToRemove","targetTriples","size","forEach","reject","sourceSplit","lSource","lTarget","targetSplit","isRejected","removeNode","removeNodeLeafLinks","targetLinks","addTriple","weight","copyState","nodesCopy","labels","rdfRank","fixed","triplesCopy","JSON","stringify","from","entries","scale","translate","restoreState","parse","draw","updateSettings","t","sameAs","inference","startMode","loadGraphConfig","selectAll","getGraphConfigs","graphCallback","graphConfigs","loadConfigForId","configId","successCallback","getConfig","findConfigById","grep","easyGraphSearch","openUri","startIRI","startGraphQuery","loadGraphForConfig","startQueryIncludeInferred","startQuerySameAs","deleteConfig","openSimpleModal","title","message","configName","warning","result","deleteGraphConfig","refreshSavedGraphs","goToGraphConfig","onpopstate","savedGraph","loadSavedGraph","initGraphFromQueryParam","inputValue","params","rootNode","expandNode","catch","err","getSavedGraph","msg","loadGraphFromQueryParam","initForRepository","newRepo","getActiveRepository","hasInitedRepository","getNamespacesPromise","getNamespaces","nss","results","bindings","namespace","prefix","namespaces","sortBy","checkAutocompleteStatus","isLicenseValid","getAutocompletePromise","replaceIRIWithPrefix","namespacePrefix","findLast","addedTag","tag","uriParts","uriPart","localName","isUndefined","expandedUri","getNamespaceUriForPrefix","expandPrefix","pageslideExpanded","validateTag","category","wildcardOK","wildcardPos","getTagClass","tagText","endsWith","empty","color1","linear","domain","range","interpolate","interpolateHslLong","color2","getColor","type","force","layout","gravity","append","showNodeTipAndIconsTimer","removeIconsTimer","loader","setLoadingState","getLoadingState","init","resetRootNode","container","stopPropagation","removeMenuIfVisible","stop","getBoundingClientRect","bottom","createTipText","p","getShortPredicate","numOfPredLeft","numberOfPredLeft","textToShow","tipPredicateElement","tipPredicates","textWidth","ctx","getContext","font","measureText","calculateWidth","hideTipForNode","cancel","tipTimer","charge","linkDistance","span","splitedLink","predicateText","addClass","textLength","getPredicateTextLength","enter","predicate","getPredicate","tipPredicateTimer","thisPredicateTipElement","showPredicateToolTip","revertElementsStyleToDefault","tripleNode","clickedNode","button","nodeCopy","pred","applyElementsStyleChanges","foundNodeIndex","findIndex","getTripleNodeIndex","isPartOfTriple","partOfTriple","nodeIndex","openPredicates","linkActions","mouseEventTimer","upEventLast","virtualClickEventTimer","moveEventCount","downEventHandler","timeStamp","preventDefault","expandEventHandler","info","closeInfoPanel","upEventHandler","showPinAnimation","startSize","endSize","startOpacity","endOpacity","animate","pin","innerD","drag","origin","sourceEvent","fixedBeforeDrag","isBeingDragged","beginDragging","px","py","pinWasFixed","resume","menuEvents","closeIcon","expandIcon","focusIcon","copyURIIcon","removeIcons","alpha","initIcons","updateAlphaInScope","expandNodeIcons","thisTipElement","showTipForNode","hideNode","shiftKey","updateTipForNode","nodeLabels","insert","fontSize","label","textContent","endlessLoopGuard","scrollHeight","clientHeight","scrollWidth","clientWidth","updateNodeLabels","geom","quadtree","sourceX","targetX","sourceY","targetY","linkedNodes","p1","p2","atan2","PI","angleDeg","abs","findAngleBetweenNodes","sourceId","targetId","twoWayLinkID","textNode","createTextNode","lastChild","start","d3alpha","getPositionAndAngle","angle","cos","sin","collapseIcon","actionsTip","expandedState","right","isExpanded","getAttribute","animateMenu","delay","ease","ctrlKey","metaKey","initGraph","renderGraphFromResponse","isStartNode","linksFound","newLink","existingLink","linksCopy","tripleLinksIt","values","nodesFromLinks","array","distinctBy","union","existingNodes","Boolean","tripleNodesIt","newNodes","some","promises","newNodesData","newNode","res","all","newNodeData","theta","expandIri","nodeTypes","nodeIri","resourceType","encodedIri","encodeURIComponent","rdfsLabel","rdfsComment","comment","expanded","dataNodeKeysQuery","mapKeys","nodeImage","imageVal","updatePredicatesColor","getElementsByClassName","linkLink","stroke","strokeWidth","markers","marker","markerLink","setAttribute","className","color","preds","predLink","fill","oppLinkIRI","oppTriplePred","currEl","fontWeight","shortIRI","toggleSidePanel","clickLink","predData","clickedEl","every","linkPred","splitPredicate","isLoadingLocation","hasActiveLocation","rotate","isLeft","noHistory","saveOrUpdateGraph","graphToSave","saveGraphModal","renameSavedGraph","graphToRename","editSavedGraphHttp","editSavedGraph","mode","graphExists","open","templateUrl","controller","resolve","restart","addNewSavedGraph","status","saveGraphHttp","getSavedGraphs","savedGraphs","graphToLoad","owner","copyToClipboardSavedGraph","location","protocol","host","pathname","deleteSavedGraph","graphName","deleteSavedGraphHttp","openIRI","togglePinAllNodes","nodeName","keyCode","getLiteralFromPropValue","SaveGraphModalCtrl","$modalInstance","okButtonText","ok","form","$valid","close","saveNew","dismiss","module","$tooltipProvider","options","appendToBody","$inject"],"mappings":"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","file":"27.83b24ef9ec0fd6964d92.bundle.js","sourcesContent":["// d3.tip\n// Copyright (c) 2013 Justin Palmer\n//\n// Tooltips for d3.js SVG visualizations\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module with d3 as a dependency.\n        define([], factory)\n    } else if (typeof module === 'object' && module.exports) {\n        // CommonJS\n        module.exports = function(d3) {\n            d3.tip = factory(d3)\n            return d3.tip\n        }\n    } else {\n        // Browser global.\n        root.d3.tip = factory(root.d3)\n    }\n}(this, function () {\n    // Public - contructs a new tooltip\n    //\n    // Returns a tip\n    return function() {\n        var direction = d3_tip_direction,\n            offset    = d3_tip_offset,\n            html      = d3_tip_html,\n            node      = initNode(),\n            svg       = null,\n            point     = null,\n            target    = null,\n            customPosition = null\n\n        function tip(vis) {\n            svg = getSVGNode(vis)\n            point = svg.createSVGPoint()\n            document.body.appendChild(node)\n        }\n\n        // Public - show the tooltip on the screen\n        //\n        // Returns a tip\n        tip.show = function() {\n            var args = Array.prototype.slice.call(arguments)\n            if(args[args.length - 1] instanceof SVGElement) target = args.pop()\n\n            var content = html.apply(this, args),\n                poffset = offset.apply(this, args),\n                dir     = direction.apply(this, args),\n                nodel   = getNodeEl(),\n                i       = directions.length,\n                coords,\n                scrollTop  = document.documentElement.scrollTop || document.body.scrollTop,\n                scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft,\n                customPos = customPosition.apply(this, args)\n\n            nodel.html(content)\n                .style({ opacity: 1, 'pointer-events': 'all' })\n\n            while(i--) nodel.classed(directions[i], false)\n            coords = direction_callbacks.get(dir).apply(this)\n\n            if (customPos) {\n                nodel.style(customPos)\n            } else {\n                nodel.classed(dir, true).style({\n                    top: (coords.top +  poffset[0]) + scrollTop + 'px',\n                    left: (coords.left + poffset[1]) + scrollLeft + 'px'\n                })\n            }\n\n            return tip\n        }\n\n        // Public - hide the tooltip\n        //\n        // Returns a tip\n        tip.hide = function() {\n            var nodel = getNodeEl()\n            nodel.style({ opacity: 0, 'pointer-events': 'none' })\n            return tip\n        }\n\n        // Public: Proxy attr calls to the d3 tip container.  Sets or gets attribute value.\n        //\n        // n - name of the attribute\n        // v - value of the attribute\n        //\n        // Returns tip or attribute value\n        tip.attr = function(n, v) {\n            if (arguments.length < 2 && typeof n === 'string') {\n                return getNodeEl().attr(n)\n            } else {\n                var args =  Array.prototype.slice.call(arguments)\n                d3.selection.prototype.attr.apply(getNodeEl(), args)\n            }\n\n            return tip\n        }\n\n        // Public: Proxy style calls to the d3 tip container.  Sets or gets a style value.\n        //\n        // n - name of the property\n        // v - value of the property\n        //\n        // Returns tip or style property value\n        tip.style = function(n, v) {\n            if (arguments.length < 2 && typeof n === 'string') {\n                return getNodeEl().style(n)\n            } else {\n                var args =  Array.prototype.slice.call(arguments)\n                d3.selection.prototype.style.apply(getNodeEl(), args)\n            }\n\n            return tip\n        }\n\n        // Public: Set or get the direction of the tooltip\n        //\n        // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n        //     sw(southwest), ne(northeast) or se(southeast)\n        //\n        // Returns tip or direction\n        tip.direction = function(v) {\n            if (!arguments.length) return direction\n            direction = v == null ? v : d3.functor(v)\n\n            return tip\n        }\n\n        // Public: Sets or gets the offset of the tip\n        //\n        // v - Array of [x, y] offset\n        //\n        // Returns offset or\n        tip.offset = function(v) {\n            if (!arguments.length) return offset\n            offset = v == null ? v : d3.functor(v)\n\n            return tip\n        }\n\n        // Public: sets or gets the html value of the tooltip\n        //\n        // v - String value of the tip\n        //\n        // Returns html value or tip\n        tip.html = function(v) {\n            if (!arguments.length) return html\n            html = v == null ? v : d3.functor(v)\n\n            return tip\n        }\n\n        tip.customPosition = function(v) {\n            if (!arguments.length) return customPosition\n            customPosition = v == null ? v : d3.functor(v)\n\n            return tip\n        }\n\n        // Public: destroys the tooltip and removes it from the DOM\n        //\n        // Returns a tip\n        tip.destroy = function() {\n            if(node) {\n                getNodeEl().remove();\n                node = null;\n            }\n            return tip;\n        }\n\n        function d3_tip_direction() { return 'n' }\n        function d3_tip_offset() { return [0, 0] }\n        function d3_tip_html() { return ' ' }\n\n        var direction_callbacks = d3.map({\n                n:  direction_n,\n                s:  direction_s,\n                e:  direction_e,\n                w:  direction_w,\n                nw: direction_nw,\n                ne: direction_ne,\n                sw: direction_sw,\n                se: direction_se\n            }),\n\n            directions = direction_callbacks.keys()\n\n        function direction_n() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.n.y - node.offsetHeight,\n                left: bbox.n.x - node.offsetWidth / 2\n            }\n        }\n\n        function direction_s() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.s.y,\n                left: bbox.s.x - node.offsetWidth / 2\n            }\n        }\n\n        function direction_e() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.e.y - node.offsetHeight / 2,\n                left: bbox.e.x\n            }\n        }\n\n        function direction_w() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.w.y - node.offsetHeight / 2,\n                left: bbox.w.x - node.offsetWidth\n            }\n        }\n\n        function direction_nw() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.nw.y - node.offsetHeight,\n                left: bbox.nw.x - node.offsetWidth\n            }\n        }\n\n        function direction_ne() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.ne.y - node.offsetHeight,\n                left: bbox.ne.x\n            }\n        }\n\n        function direction_sw() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.sw.y,\n                left: bbox.sw.x - node.offsetWidth\n            }\n        }\n\n        function direction_se() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.se.y,\n                left: bbox.e.x\n            }\n        }\n\n        function initNode() {\n            var node = d3.select(document.createElement('div'))\n            node.style({\n                position: 'absolute',\n                top: 0,\n                opacity: 0,\n                'pointer-events': 'none',\n                'box-sizing': 'border-box'\n            })\n\n            return node.node()\n        }\n\n        function getSVGNode(el) {\n            el = el.node()\n            if(el.tagName.toLowerCase() === 'svg')\n                return el\n\n            return el.ownerSVGElement\n        }\n\n        function getNodeEl() {\n            if(node === null) {\n                node = initNode();\n                // re-add node to DOM\n                document.body.appendChild(node);\n            };\n            return d3.select(node);\n        }\n\n        // Private - gets the screen coordinates of a shape\n        //\n        // Given a shape on the screen, will return an SVGPoint for the directions\n        // n(north), s(south), e(east), w(west), ne(northeast), se(southeast), nw(northwest),\n        // sw(southwest).\n        //\n        //    +-+-+\n        //    |   |\n        //    +   +\n        //    |   |\n        //    +-+-+\n        //\n        // Returns an Object {n, s, e, w, nw, sw, ne, se}\n        function getScreenBBox() {\n            var targetel   = target || d3.event.target;\n\n            while ('undefined' === typeof targetel.getScreenCTM && 'undefined' === targetel.parentNode) {\n                targetel = targetel.parentNode;\n            }\n\n            var bbox       = {},\n                matrix     = targetel.getScreenCTM(),\n                tbbox      = targetel.getBBox(),\n                width      = tbbox.width,\n                height     = tbbox.height,\n                x          = tbbox.x,\n                y          = tbbox.y\n\n            point.x = x\n            point.y = y\n            bbox.nw = point.matrixTransform(matrix)\n            point.x += width\n            bbox.ne = point.matrixTransform(matrix)\n            point.y += height\n            bbox.se = point.matrixTransform(matrix)\n            point.x -= width\n            bbox.sw = point.matrixTransform(matrix)\n            point.y -= height / 2\n            bbox.w  = point.matrixTransform(matrix)\n            point.x += width\n            bbox.e = point.matrixTransform(matrix)\n            point.x -= width / 2\n            point.y -= height / 2\n            bbox.n = point.matrixTransform(matrix)\n            point.y += height\n            bbox.s = point.matrixTransform(matrix)\n\n            return bbox\n        }\n\n        return tip\n    };\n\n}));","var D3 = D3 || {};\n\nD3.Text = function () {\n    function calcFontSizeRaw(text, radius, minimumSize, isMultiline) {\n        minimumSize = minimumSize || 10;\n\n        var textSize = radius / 3;\n        if (typeof text === \"string\") {\n            var len = text.substring(0, radius / 3).length + 1.5;\n            textSize *= 10 / len;\n            textSize += 1;\n            // experimental alternative method:\n            // var textSize = 3.3 * radius / text.length;\n\n            // Tweak for Indian scripts and CJK ones\n            if (text.match(/[\\u0900-\\u0DFF\\u1100-\\u11FF\\u2E80-\\u2EFF\\u3000-\\u9FFF]/)) {\n                textSize *= 0.6;\n            }\n\n            if (textSize < minimumSize) {\n                textSize = minimumSize;\n            }\n\n            /* Disabled for the time being, better without this\n            if (isMultiline) {\n                var numWords = text.split(/\\s+/).length;\n                if (numWords > 1) {\n                    if (numWords > 4) {\n                        numWords = 4;\n                    }\n                    textSize += textSize * (4 - numWords) * 0.1;\n                }\n            }\n            */\n\n            return Math.round(textSize);\n        }\n\n        if (textSize < minimumSize) {\n            textSize = minimumSize;\n        }\n\n        return Math.round(textSize);\n    }\n\n    function calcFontSize(text, radius, minimumSize, isMultiline) {\n        return calcFontSizeRaw(text, radius, minimumSize, isMultiline) + 'px';\n    }\n\n    function getTextWithElipsisIfNeeded(str, threshold) {\n        if (typeof str === \"string\") {\n            if (str.length > threshold) {\n                return str.substring(0, threshold - 3) + \"...\";\n            }\n        }\n        return str;\n    }\n\n    return {\n        calcFontSizeRaw: calcFontSizeRaw,\n        calcFontSize: calcFontSize,\n        getTextWithElipsisIfNeeded: getTextWithElipsisIfNeeded\n    };\n}();\n\nD3.Transition = function () {\n    function fadeIn(sel, duration) {\n        sel.style(\"opacity\", 0.0)\n            .transition()\n            .duration(duration)\n            .style(\"opacity\", 1.0);\n    }\n\n    function fadeOut(sel, duration) {\n        sel.style(\"opacity\", 1.0)\n            .transition()\n            .duration(duration)\n            .style(\"opacity\", 0.0);\n    }\n\n    return {\n        fadeIn: fadeIn,\n        fadeOut: fadeOut\n    };\n}();\n\nD3.Click = function () {\n    function delayDblClick() {\n        var event = d3.dispatch('click', 'dblclick');\n\n        function cc(selection) {\n            var down,\n                tolerance = 5,\n                last,\n                wait = null;\n\n            // euclidean distance\n            function dist(a, b) {\n                return Math.sqrt(Math.pow(a[0] - b[0], 2), Math.pow(a[1] - b[1], 2));\n            }\n\n            selection.on('mousedown', function () {\n                down = d3.mouse(document.body);\n                last = +new Date();\n            });\n            selection.on('mouseup', function (d) {\n                if (dist(down, d3.mouse(document.body)) > tolerance) {\n                    return;\n                } else {\n                    if (wait) {\n                        window.clearTimeout(wait);\n                        wait = null;\n                        event.dblclick(d);\n                    } else {\n                        wait = window.setTimeout((function (e) {\n                            return function () {\n                                event.click(d);\n                                wait = null;\n                            };\n                        })(d3.event), 250);\n                    }\n                }\n            });\n        }\n\n        return d3.rebind(cc, event, 'on');\n    }\n\n    return {\n        delayDblClick: delayDblClick\n    };\n}();\n\nexport default D3;\n","export const STATIC_RULESETS = [\n    {id: 'empty', name: 'No inference'},\n    {id: 'rdfs-optimized', name: 'RDFS (Optimized)'},\n    {id: 'rdfs', name: 'RDFS'},\n    {id: 'rdfsplus-optimized', name: 'RDFS-Plus (Optimized)'},\n    {id: 'owl-horst-optimized', name: 'OWL-Horst (Optimized)'},\n    {id: 'owl-horst', name: 'OWL-Horst'},\n    {id: 'owl2-ql-optimized', name: 'OWL2-QL (Optimized)'},\n    {id: 'owl2-ql', name: 'OWL2-QL'},\n    {id: 'owl-max-optimized', name: 'OWL-Max (Optimized)'},\n    {id: 'owl-max', name: 'OWL-Max'},\n    {id: 'owl2-rl-optimized', name: 'OWL2-RL (Optimized)'},\n    {id: 'owl2-rl', name: 'OWL2-RL'},\n\n];\n\nexport const REPOSITORY_TYPES = {graphdbRepo: 'graphdb', free: 'free', eeWorker: 'worker', eeMaster: 'master', ontop: 'ontop', se: 'se', fedx: 'fedx'};\nexport const FILENAME_PATTERN = new RegExp('^[a-zA-Z0-9-_]+$');\nexport const NUMBER_PATTERN = new RegExp('^[0-9]+$');\n","import 'angular/core/services';\nimport D3 from 'lib/common/d3-utils.js';\nimport d3tip from 'lib/d3-tip/d3-tip-patch';\nimport 'angular/utils/local-storage-adapter';\nimport {NUMBER_PATTERN} from \"../../repositories/repository.constants\";\n\nconst modules = [\n    'ui.scroll.jqlite',\n    'ui.scroll',\n    'toastr',\n    'ui.bootstrap',\n    'ngTagsInput',\n    'graphdb.framework.utils.localstorageadapter'\n];\n\nangular\n    .module('graphdb.framework.graphexplore.controllers.graphviz', modules)\n    .controller('GraphsVisualizationsCtrl', GraphsVisualizationsCtrl)\n    .controller('SaveGraphModalCtrl', SaveGraphModalCtrl)\n    .config(['$tooltipProvider', function ($tooltipProvider) {\n        $tooltipProvider.options({appendToBody: true});\n    }]);\n\nGraphsVisualizationsCtrl.$inject = [\"$scope\", \"$rootScope\", \"$repositories\", \"$licenseService\", \"toastr\", \"$timeout\", \"$http\", \"ClassInstanceDetailsService\", \"AutocompleteRestService\", \"$q\", \"$location\", \"$jwtAuth\", \"UiScrollService\", \"ModalService\", \"$modal\", \"$window\", \"LocalStorageAdapter\", \"LSKeys\", \"SavedGraphsRestService\", \"GraphConfigRestService\", \"RDF4JRepositoriesRestService\", \"$translate\", \"GuidesService\"];\n\nfunction GraphsVisualizationsCtrl($scope, $rootScope, $repositories, $licenseService, toastr, $timeout, $http, ClassInstanceDetailsService, AutocompleteRestService, $q, $location, $jwtAuth, UiScrollService, ModalService, $modal, $window, LocalStorageAdapter, LSKeys, SavedGraphsRestService, GraphConfigRestService, RDF4JRepositoriesRestService, $translate, GuidesService) {\n\n    $scope.languageChanged = false;\n    $scope.propertiesObj = {};\n    $scope.propertiesQueryObj = {};\n\n    $scope.propertiesObj.items = [];\n    $scope.propertiesNotFiltered = [];\n    $scope.searchVisible = false;\n    $scope.nodeSelected = false;\n    $scope.queryResultsMode = false;\n    $scope.embedded = $location.search().embedded;\n    $scope.openedNodeInfoPanel = undefined;\n\n    $scope.invalidLimit = false;\n    $scope.INVALID_LINKS_MSG = $translate.instant('sidepanel.invalid.limit.links.msg');\n    $scope.INVALID_LINKS_TOOLTIP = $translate.instant('sidepanel.invalid.limit.links.tooltip');\n\n    $rootScope.$on('$translateChangeSuccess', function () {\n        $scope.INVALID_LINKS_MSG = $translate.instant('sidepanel.invalid.limit.links.msg');\n        $scope.INVALID_LINKS_TOOLTIP = $translate.instant('sidepanel.invalid.limit.links.tooltip');\n        $scope.propertiesSearchPlaceholder = $translate.instant(\"visual.search.instance.placeholder\");\n    });\n\n    // Handle pageslide directive callbacks which incidentally appeared to be present in the angular's\n    // scope, so we need to define our's and pass them to pageslide, otherwise it throws an error.\n    $scope.onopen = $scope.onclose = () => angular.noop();\n\n    // embedded and other params when the controller is initialized\n    if ($scope.embedded && ($location.search().query ||\n            $location.search().uri ||\n            $location.search().config ||\n            $location.search().saved)) {\n\n        $scope.noGoHome = true;\n    }\n\n    // creating datasource for class properties data\n    const datasource = {};\n    let position = 0;\n    let current = 0;\n    let type2color = {};\n    let colorIndex = 0;\n    const nodeLabelMinFontSize = 16; // pixels\n    // define zoom and drag behavior; keep this out of draw() to preserve state when nodes are added/removed\n    const panAndZoom = d3.behavior.zoom()\n        .scaleExtent([0.5, 10]);\n    let transformValues;\n    // build svg element\n    const width = 1000;\n    const height = 1000;\n    let tipElement;\n    let openedLink;\n\n    $rootScope.key = \"\";\n\n    datasource.get = function (index, count, success) {\n        return UiScrollService.initLazyList(index, count, success, position, $scope.propertiesObj.items);\n    };\n\n    $rootScope.$watch(function () {\n        return $rootScope.key;\n    }, function () {\n        position = 0;\n        _.each($scope.propertiesObj.items, function (item) {\n            if ($rootScope.key > item) {\n                position++;\n            }\n        });\n        current++;\n    });\n\n    datasource.revision = function () {\n        return current;\n    };\n\n    $scope.datasource = datasource;\n\n    // adapter implementation for ui-scroll directive\n    $scope.adapterContainer = {adapter: {remain: true}};\n\n    $scope.propertiesQueryObj.query = '';\n    $scope.propertiesSearchPlaceholder = $translate.instant(\"visual.search.instance.placeholder\");\n    $scope.propertiesFilterFunc = propertiesFilterFunc;\n\n    $scope.resetState = function () {\n        $scope.searchVisible = false;\n        $scope.nodeSelected = false;\n        $scope.configLoaded = null;\n        $scope.queryResultsMode = false;\n        $scope.lastSavedGraphName = null;\n        $scope.lastSavedGraphId = null;\n        $scope.shared = false;\n        $scope.numberOfPinnedNodes = 0;\n\n        // Reset type colours\n        type2color = {};\n        colorIndex = 0;\n    };\n\n    $scope.pushHistory = function (searchParams, state) {\n        if ($scope.embedded) {\n            searchParams.embedded = true;\n        }\n        $location.search(searchParams);\n        $location.state(state);\n    };\n\n    $scope.goToHome = function () {\n        $scope.resetState();\n        $location.url(\"graphs-visualizations\");\n    };\n\n    $scope.shouldShowSettings = function () {\n        return $scope.configLoaded && $scope.configLoaded.id === $scope.defaultGraphConfig.id;\n    };\n\n    $scope.shouldDisableSameAs = function () {\n        const sameAsCheckbox = $('#sameAsCheck');\n        if ($scope.settings && !$scope.settings['includeInferred'] && sameAsCheckbox.prop('checked')) {\n            sameAsCheckbox.prop(\"checked\", false);\n            $scope.settings['sameAsState'] = false;\n        }\n\n        return $scope.settings && !$scope.settings['includeInferred'];\n    };\n\n    function propertiesFilterFunc(item) {\n        return item.key\n            .toLowerCase()\n            .indexOf($scope.propertiesQueryObj.query.toLowerCase()) >= 0;\n    }\n\n    $scope.$watch('propertiesObj.items', function () {\n        if (angular.isDefined($scope.propertiesObj.items) && $scope.propertiesObj.items.length > 0) {\n            $timeout(function () {\n                $scope.adapterContainer.adapter.reload();\n            }, 500);\n        }\n    });\n\n    $scope.toggleMoreInfo = function (ev) {\n        angular.element(ev.currentTarget).parent().next().toggle(200);\n        angular.element(ev.currentTarget).children('span').toggleClass(\"icon-caret-down\").toggleClass(\"icon-caret-up\");\n    };\n\n    function getSettings() {\n        // When a guide is active we really want the default settings to make sure the user gets\n        // the same as the author of the guide intended\n        return GuidesService.isActive() ? $scope.defaultSettings : $scope.saveSettings;\n    }\n\n    function updatePredicateLabels() {\n        if (!getSettings()['showLinksText']) {\n            d3.selectAll(\"svg .link-wrapper text\")\n                .style(\"display\", \"none\");\n        } else {\n            d3.selectAll(\"svg .link-wrapper text\")\n                .style(\"display\", \"block\");\n        }\n    }\n\n    function updateNodeLabels(nodeLabels) {\n        nodeLabels.each(function (d) {\n            d.fontSize = D3.Text.calcFontSizeRaw(d.labels[0].label, d.size, nodeLabelMinFontSize, true);\n            // TODO: get language and set it on the label html tag\n        })\n            .attr(\"height\", function (d) {\n                return d.fontSize * 3;\n            })\n            // if this was kosher we would use xhtml:body here but if we do that angular (or the browser)\n            // goes crazy and resizes/messes up other unrelated elements. div seems to work too.\n            .append(\"xhtml:div\")\n            .attr(\"class\", \"node-label-body\")\n            .style(\"font-size\", function (d) {\n                return d.fontSize + 'px';\n            })\n            .append('xhtml:div')\n            .text(function (d) {\n                return d.labels[0].label;\n            });\n\n        // Our own implementation of what browsers should really do but they either can't or don't do properly.\n        // This code will look at each node's label element and check if the text fits. This is achieved by\n        // checking the DOM properties scrollHeight/-Width and clientHeight/-Width. Generally if the scroll ones\n        // are bigger than the client ones the content doesn't fit.\n        $timeout(function () {\n            $('.node-label-body div').each(function (i, e) {\n                // Initial text is minus one character as we'll be adding a one-character suffix if we need to truncate\n                let text = e.textContent.substring(0, e.textContent.length - 1);\n                const suffixToInsert = '…';\n                let endlessLoopGuard = 0;\n\n                // Loop until the text fits\n                while (endlessLoopGuard < 200 && (e.scrollHeight > e.clientHeight || e.scrollWidth > e.clientWidth)) {\n                    // Take previous text minus one character\n                    text = text.substring(0, text.length - 1);\n\n                    // Set the new text + suffix as textContent\n                    e.textContent = text + suffixToInsert;\n\n                    endlessLoopGuard++;\n                }\n            });\n        }, 50);\n    }\n\n    $scope.copyToClipboard = copyToClipboard;\n\n    function copyToClipboard(uri) {\n        ModalService.openCopyToClipboardModal(uri);\n    }\n\n    $scope.defaultSettings = {\n        linksLimit: 20,\n        includeInferred: true,\n        sameAsState: true,\n        languages: ['en'],\n        showLinksText: true,\n        preferredTypes: [],\n        rejectedTypes: [],\n        preferredPredicates: [],\n        rejectedPredicates: [\"http://dbpedia.org/property/logo\",\n                             \"http://dbpedia.org/property/hasPhotoCollection\",\n                             \"http://dbpedia.org/property/website\",\n                             \"http://dbpedia.org/property/homepage\",\n                             \"http://dbpedia.org/ontology/thumbnail\",\n                             \"http://xmlns.com/foaf/0.1/depiction\",\n                             \"http://xmlns.com/foaf/0.1/homepage\",\n                             \"http://xmlns.com/foaf/0.1/mbox\",\n                             \"http://dbpedia.org/ontology/wikiPage*\",\n                             \"http://dbpedia.org/property/wikiPage*\",\n                             \"http://factforge.net/*\"],\n        preferredTypesOnly: false,\n        preferredPredicatesOnly: false,\n        includeSchema: true\n    };\n    // Static defaults before we do the actual dynamic default settings in initSettings\n    $scope.saveSettings = angular.copy($scope.defaultSettings);\n\n    function initSettings(principal) {\n        const settingsFromPrincipal = principal.appSettings;\n\n        // New style settings from principal\n        $scope.defaultSettings.includeInferred = settingsFromPrincipal['DEFAULT_INFERENCE'];\n        $scope.defaultSettings.sameAsState = settingsFromPrincipal['DEFAULT_INFERENCE'] && settingsFromPrincipal['DEFAULT_SAMEAS'];\n        $scope.defaultSettings.includeSchema = settingsFromPrincipal['DEFAULT_VIS_GRAPH_SCHEMA'];\n\n        const localStorageSettings = LocalStorageAdapter.get(LSKeys.GRAPHS_VIZ);\n        if (localStorageSettings && typeof localStorageSettings === 'object') {\n            // Patch existing settings\n            try {\n                $scope.saveSettings = localStorageSettings;\n                if ($scope.saveSettings['includeSchema'] === undefined) {\n                    // Add the new defaults when migrating from an old GDB\n                    $scope.saveSettings['includeSchema'] = $scope.defaultSettings['includeSchema'];\n                    $scope.saveSettings['rejectedPredicates'] = [...$scope.saveSettings['rejectedPredicates'], ...$scope.defaultSettings['rejectedPredicates']].unique();\n                }\n            } catch (e) {\n                $scope.saveSettings = angular.copy($scope.defaultSettings);\n                LocalStorageAdapter.set(LSKeys.GRAPHS_VIZ, $scope.saveSettings);\n            }\n        } else {\n            $scope.saveSettings = angular.copy($scope.defaultSettings);\n        }\n    }\n\n    // Using $q.when to proper set values in view\n    $q.when($jwtAuth.getPrincipal())\n        .then((principal) => initSettings(principal));\n\n    function renderSettings() {\n        $scope.settings.languagesMap = _.map($scope.settings.languages, function (v) {\n            return {'text': v};\n        });\n\n        $scope.settings.preferredTypesMap = _.map($scope.settings.preferredTypes, function (v) {\n            return {'text': v};\n        });\n\n        $scope.settings.rejectedTypesMap = _.map($scope.settings.rejectedTypes, function (v) {\n            return {'text': v};\n        });\n\n        $scope.settings.preferredPredicatesMap = _.map($scope.settings.preferredPredicates, function (v) {\n            return {'text': v};\n        });\n\n        $scope.settings.rejectedPredicatesMap = _.map($scope.settings.rejectedPredicates, function (v) {\n            return {'text': v};\n        });\n    }\n\n    $scope.resetSettings = function () {\n        $scope.settings = angular.copy($scope.defaultSettings);\n        $scope.validateLinksLimit();\n        renderSettings();\n    };\n\n    $scope.changeLimit = function (delta) {\n        let linksLimit = $scope.settings.linksLimit + delta;\n        if (linksLimit < 1) {\n            linksLimit = 1;\n        }\n        if (linksLimit > 1000) {\n            linksLimit = 1000;\n        }\n        $scope.settings.linksLimit = linksLimit;\n    };\n\n    $scope.validateLinksLimit = function () {\n        $scope.invalidLimit = !NUMBER_PATTERN.test($scope.settings.linksLimit);\n    }\n\n    $scope.showSettings = function () {\n        $scope.showInfoPanel = true;\n        $scope.showFilter = true;\n        $scope.showNodeInfo = false;\n        $scope.showPredicates = false;\n        if (!$scope.saveSettings) {\n            $scope.settings = angular.copy($scope.defaultSettings);\n        } else {\n            $scope.settings = angular.copy($scope.saveSettings);\n        }\n        renderSettings();\n    };\n\n    $scope.reExpandNode = function () {\n        if ($scope.rootNodeIri) {\n            $scope.$broadcast(\"onRootNodeChange\", $scope.rootNodeIri);\n        }\n    };\n\n    const loadGraphForQuery = function (queryString, sameAsParam, inferredParam) {\n        const settings = getSettings();\n        const sendSameAs = (sameAsParam === undefined) ? (settings['sameAsState']) : sameAsParam === true;\n        const sendInferred = (inferredParam === undefined) ? (settings['includeInferred']) : inferredParam === true;\n        $scope.loading = true;\n        $http({\n            url: 'rest/explore-graph/graph',\n            method: 'POST',\n            headers: {\n                'Content-Type' : 'application/json'\n            },\n            data: {\n                query: queryString,\n                linksLimit: settings['linksLimit'],\n                languages: !$scope.shouldShowSettings() ? [] : settings['languages'],\n                includeInferred: sendInferred,\n                sameAsState: sendSameAs\n            }\n        }).then(function (response) {\n            // Node draw will turn off loader\n            initGraphFromResponse(response);\n        }, function (response) {\n            $scope.loading = false;\n            toastr.error(getError(response.data), $translate.instant('graphexplore.error.cannot.load.graph'));\n        });\n    };\n\n    $scope.updateSettings = function () {\n        if ($scope.invalidLimit) {\n            toastr.error($scope.INVALID_LINKS_TOOLTIP, $scope.INVALID_LINKS_MSG);\n            return;\n        }\n        $scope.saveSettings = $scope.settings;\n        $scope.saveSettings.languages = _.map($scope.saveSettings['languagesMap'], function (s) {\n            return s['text'];\n        });\n\n        $scope.saveSettings.preferredTypes = _.map($scope.saveSettings['preferredTypesMap'], function (t) {\n            return t['text'];\n        });\n        $scope.saveSettings.rejectedTypes = _.map($scope.saveSettings['rejectedTypesMap'], function (t) {\n            return t['text'];\n        });\n\n        $scope.saveSettings.preferredPredicates = _.map($scope.saveSettings['preferredPredicatesMap'], function (t) {\n            return t['text'];\n        });\n        $scope.saveSettings.rejectedPredicates = _.map($scope.saveSettings['rejectedPredicatesMap'], function (t) {\n            return t['text'];\n        });\n\n        // TODO\n        // reexpand root node\n        if ($scope.rootNodeIri) {\n            $scope.reExpandNode($scope.rootNodeIri);\n        } else if ($scope.queryResultsMode && $location.search().query) {\n            loadGraphForQuery($location.search().query,\n                $location.search().sameAs,\n                $location.search().inference);\n        } else if ($scope.configLoaded.startMode === 'query') {\n            $scope.loadGraphConfig($scope.configLoaded);\n        }\n\n        updatePredicateLabels();\n\n        $scope.showInfoPanel = false;\n        $scope.showFilter = false;\n\n        LocalStorageAdapter.set(LSKeys.GRAPHS_VIZ, $scope.saveSettings);\n    };\n\n    $scope.showInfoPanel = false;\n\n    /**\n     *  Removes brackets and serial commas from IRIs\n     *  when used to create ids for links and markers,\n     *  because elements with ids that contain such\n     *  are not valid XHTML and cause a host problems\n     *  when trying to style individual elements\n     * @param string\n     * @returns {*}\n     */\n    function removeSpecialChars(string) {\n        return string.replace(/[()']/g, \"\");\n    }\n\n    /**\n     *  Converts triple to link id or generates unique id (needed for arrows)\n     * @param triple\n     * @param tripleLike\n     * @returns {string}\n     */\n    function convertTripleToLinkId(triple, tripleLike) {\n        let tripleParts = triple.split(' ');\n        if (tripleLike) {\n            return [tripleParts[0], tripleParts[1], tripleParts[2]].join('>');\n        }\n        return [tripleParts[0], tripleParts[2]].join('>');\n    }\n\n    function convertLinkDataToLinkId(link) {\n        return [link.source.iri, link.target.iri].join('>');\n    }\n\n    /**\n     *  If source or target of a link is a triple returns a x\n     *  for the link, otherwise returns this of the node.\n     *  Because tick is called before links are created we return node's x,\n     *  which afterwards will be overridden\n     * @param node\n     * @returns {number|number|*}\n     */\n    function getNodeX(node) {\n        if (node.isTriple) {\n            let el = document.getElementById(removeSpecialChars(convertTripleToLinkId(node.iri)));\n            if (el && typeof el.__data__.x !== \"undefined\") {\n                return el.__data__.x;\n            }\n        }\n        return node.x;\n    }\n\n    /**\n     *  If source or target of a link is a triple returns a y\n     *  for the link, otherwise returns this of the node.\n     *  Because tick is called before links are created we return node's y,\n     *  which afterwards will be overridden\n     * @param node\n     * @returns {number|number|*}\n     */\n    function getNodeY(node) {\n        if (node.isTriple) {\n            let el = document.getElementById(removeSpecialChars(convertTripleToLinkId(node.iri)));\n            if (el && typeof el.__data__.y !== \"undefined\") {\n                return el.__data__.y;\n            }\n        }\n        return node.y;\n    }\n\n    function createTriple(value) {\n        let tripleParts = value.trim().split(' ');\n        return `<<<${tripleParts[0]}> <${tripleParts[1]}> <${tripleParts[2]}>>>`;\n    }\n\n    /**\n     *  Creates unique arrow-marker id will allow change color and refX for particular one\n     * @param d\n     * @returns {string}\n     */\n    function createArrowMarkerUniqueID(d) {\n        let source = d.source.isTriple ? convertTripleToLinkId(d.source.iri, true) : d.source.iri;\n        let target = d.target.isTriple ? convertTripleToLinkId(d.target.iri, true) : d.target.iri;\n        return removeSpecialChars(`${source}>${target}>marker`);\n    }\n\n    /**\n     *  Filters nodes array on a given field\n     * @param iri\n     * @param array\n     * @returns {*}\n     */\n    function distinctBy(iri, array) {\n        let keys = array.map(function (value) { return value[iri]; });\n        return array.filter(function (value, index) { return keys.indexOf(value[iri]) === index; });\n    }\n\n    function Graph() {\n        this.nodes = [];\n        this.links = [];\n        this.tripleNodes = new Map();\n        this.tripleLinksCopy = new Map();\n\n        this.addNode = function (node, x, y) {\n            node.x = x;\n            node.y = y;\n            this.nodes.push(node);\n            return node;\n        };\n\n        // computes a \"connectedness\" metric on each link, which is then used to hint for longer links.\n        // this results in improved clustering and appearance.\n        this.computeConnectedness = function () {\n            // count the the number of times a given node is connected to other nodes\n            // (only for nodes connected to more than one node)\n            const counts = {};\n            const seenLinks = {};\n            _.each(this.links, function (link) {\n                const i1 = link.source.iri;\n                const i2 = link.target.iri;\n                const seenKey = _.min([i1, i2]) + \"|\" + _.max([i1, i2]);\n                if (!seenLinks[seenKey]) {\n                    seenLinks[seenKey] = 1;\n                    counts[i1] = (counts[i1] || 0) + 1;\n                    counts[i2] = (counts[i2] || 0) + 1;\n                }\n            });\n\n            // computes the connectedness of each link based on the number of times its nodes were connected\n            // (only for links to/from nodes connected to more than one node)\n            _.each(this.links, function (link) {\n                if (counts[link.source.iri] > 1 && counts[link.target.iri] > 1) {\n                    link.connectedness = Math.min(5, Math.max(counts[link.source.iri], counts[link.target.iri]) - 1);\n                } else {\n                    link.connectedness = 0;\n                }\n            });\n        };\n\n        this.addAndMatchLinks = function (newLinks) {\n            const nodes = this.nodes;\n            Array.prototype.push.apply(this.links, matchLinksToNodes(newLinks, nodes));\n            for (let key of graph.tripleLinksCopy.keys()) {\n                if (graph.tripleLinksCopy.get(key).length === 1) {\n                    graph.tripleLinksCopy.delete(key);\n                }\n            }\n            this.links = this.links.filter(link => link !== null);\n            this.computeConnectedness();\n        };\n\n        const countLinks = function (d, links) {\n            return findLinksForNode(d, links).length;\n        };\n\n        this.countLinks = countLinks;\n\n        function findLinksForNode(d, links) {\n            return _.filter(links, function (l) {\n                return l.source.iri === d.iri || l.target.iri === d.iri;\n            });\n        }\n\n        function linksTypes(d, links) {\n            const linksForNode = findLinksForNode(d, links);\n            const types = _.map(linksForNode, function (l) {\n                return (l.source.iri === d.iri ) ? l.target.types : l.source.types;\n            });\n            return _.uniq(_.flatten(types));\n        }\n\n        function linksPredicates(d, links) {\n            const linksForNode = findLinksForNode(d, links);\n            const predicates = _.map(linksForNode, function (l) {\n                return l.predicates;\n            });\n            return _.uniq(_.flatten(predicates));\n        }\n\n        this.linksTypes = linksTypes;\n\n        this.linksPredicates = linksPredicates;\n\n        /**\n         *  Removes generated triple links and related nodes\n         * @param triplesToRemove\n         */\n        this.removeTriples = function (triplesToRemove) {\n            let targetTriples = [];\n            if (this.tripleNodes.size > 0) {\n                triplesToRemove.forEach((source) => {\n                    if (this.tripleNodes.has(source)) {\n                        this.tripleNodes.delete(source);\n                        this.links = _.reject(this.links, function (l) {\n                            let sourceSplit = source.split('>');\n                            let lSource = convertTripleToLinkId(l.source.iri);\n                            let lTarget = convertTripleToLinkId(l.target.iri);\n                            // Handle triple targets\n                            if (lSource === source && graph.tripleNodes.delete(lTarget)) {\n                                let targetSplit = lTarget.split('>');\n                                targetTriples.push({\n                                    source: targetSplit[0],\n                                    target: targetSplit[1]\n                                });\n                            }\n                            let isRejected = lSource === source || lTarget === source || (l.source.iri === sourceSplit[0] && l.target.iri === sourceSplit[1]);\n                            if (isRejected) {\n                                graph.tripleLinksCopy.delete(`${lSource}>${lTarget}`);\n                                graph.tripleLinksCopy.delete(`${lTarget}>${lSource}`);\n                            }\n                            return isRejected;\n                        });\n                    }\n                });\n            }\n\n            // This step is needed for removing artificially created links representing triples\n            targetTriples.forEach((target) => {\n                this.links = _.reject(this.links, function (l) {\n                    return l.source.iri === target.source && l.target.iri === target.target;\n                });\n            });\n        }\n\n        this.removeNode = function (d) {\n            let triplesToRemove = [];\n            this.links = _.reject(this.links, function (l) {\n                let isRejected = l.source.iri === d.iri || l.target.iri === d.iri;\n                if (isRejected) {\n                    if (l.target.isTriple) {\n                        triplesToRemove.push(convertTripleToLinkId(l.target.iri));\n                    }\n                    if (!l.source.isTriple && !l.target.isTriple) {\n                        triplesToRemove.push([l.source.iri, l.target.iri].join('>'))\n                    }\n                }\n                return isRejected;\n            });\n\n            this.removeTriples(triplesToRemove);\n\n            const links = this.links;\n            this.nodes = _.reject(this.nodes, function (n) {\n                return countLinks(n, links) === 0;\n            });\n            if (this.nodes.length === 0) {\n                $scope.nodeSelected = false;\n            }\n\n            this.computeConnectedness();\n        };\n\n        this.removeNodeLeafLinks = function (d) {\n            let triplesToRemove = [];\n            let links = this.links;\n            this.links = _.reject(this.links, function (l) {\n                let isRejected = (l.source.iri === d.iri && countLinks(l.target, links) === 1 && !l.target.isTriple) ||\n                                   (l.target.iri === d.iri && countLinks(l.source, links) === 1 && !l.source.isTriple);\n                if (!isRejected) {\n                    let targetLinks;\n                    if (l.source.iri === d.iri && countLinks(l.target, links) === 2 && !l.target.isTriple) {\n                        targetLinks = findLinksForNode(l.target, links);\n                    } else if (l.target.iri === d.iri && countLinks(l.source, links) === 2 && !l.source.isTriple) {\n                        targetLinks = findLinksForNode(l.source, links);\n                    }\n                    if (!targetLinks) {\n                        return false;\n                    }\n                    // the node to which (or from which) d has link to has only two links, check if the second one is to d also\n                    isRejected = (targetLinks[0].source.iri === d.iri || targetLinks[0].target.iri) &&\n                        (targetLinks[1].source.iri === d.iri || targetLinks[1].target.iri);\n                }\n                if (isRejected) {\n                    if (l.target.isTriple) {\n                        triplesToRemove.push(convertTripleToLinkId(l.target.iri));\n                    }\n                    if (!l.source.isTriple && !l.target.isTriple) {\n                        triplesToRemove.push([l.source.iri, l.target.iri].join('>'))\n                    }\n                }\n                return isRejected;\n            });\n\n            this.removeTriples(triplesToRemove);\n\n            links = this.links;\n            this.nodes = _.reject(this.nodes, function (n) {\n                return countLinks(n, links) === 0 && n.iri !== d.iri;\n            });\n\n            this.computeConnectedness();\n        };\n\n        this.addTriple = function (triple, x, y) {\n            triple.x = x;\n            triple.y = y;\n            triple.weight = 0;\n            let key = convertTripleToLinkId(triple.iri);\n            if (!this.tripleNodes.has(key)) {\n                triple.weight = 10;\n                this.tripleNodes.set(key, [triple]);\n            } else {\n                let value = this.tripleNodes.get(key);\n                value.push(triple);\n                this.tripleNodes.set(key, value);\n            }\n        }\n\n        function matchLinksToNodes(newLinks, nodes) {\n            return _.map(newLinks, function (link) {\n                let source;\n                let target;\n                if (link.isTripleSource) {\n                    source = getTripleNode(link.source);\n                } else {\n                    source = _.find(nodes, function (o) {\n                        return o.iri === link.source;\n                    })\n                }\n                if (link.isTripleTarget) {\n                    target = getTripleNode(link.target);\n                } else {\n                    target = _.find(nodes, function (o) {\n                        return o.iri === link.target;\n                    })\n                }\n                let matchedLink = {\n                    \"source\": source,\n                    \"target\": target,\n                    \"predicates\": link.predicates\n                };\n                // make copy of links with triples in them\n                if (link.isTripleSource || link.isTripleTarget) {\n                    let sourceId = matchedLink.source.isTriple ? convertTripleToLinkId(matchedLink.source.iri) : matchedLink.source.iri;\n                    let targetId = matchedLink.target.isTriple ? convertTripleToLinkId(matchedLink.target.iri) : matchedLink.target.iri;\n                    let linkId = `${sourceId}>${targetId}`;\n                    if (graph.tripleLinksCopy.has(linkId)) {\n                        let value = graph.tripleLinksCopy.get(linkId);\n                        value[0].predicates.push(...matchedLink.predicates);\n                        value.push(matchedLink);\n                        graph.tripleLinksCopy.set(linkId, value);\n                        return null;\n                    } else {\n                        graph.tripleLinksCopy.set(linkId, [matchedLink]);\n                    }\n                }\n                return matchedLink;\n            });\n        }\n\n        this.copyState = function () {\n            const nodesCopy = _.map(this.nodes, function (node) {\n                return {\n                    iri: node.iri,\n                    isTriple: node.isTriple,\n                    size: node.size,\n                    labels: angular.copy(node.labels),\n                    types: angular.copy(node.types),\n                    rdfRank: node.rdfRank,\n                    x: node.x,\n                    y: node.y,\n                    fixed: node.fixed\n                };\n            });\n\n            const triplesCopy = JSON.stringify(Array.from(this.tripleNodes.entries()));\n            const tripleLinksCopy = JSON.stringify(Array.from(this.tripleLinksCopy.entries()));\n\n            const linksCopy = _.map(this.links, function (link) {\n                return {\n                    source: link.source.iri,\n                    isTripleSource: link.source.isTriple,\n                    target: link.target.iri,\n                    isTripleTarget: link.target.isTriple,\n                    predicates: link.predicates\n                };\n            });\n\n            return {\n                nodes: nodesCopy,\n                links: linksCopy,\n                tripleNodes: triplesCopy,\n                tripleLinksCopy: tripleLinksCopy,\n                colorIndex: colorIndex,\n                type2color: type2color,\n                scale: panAndZoom.scale(),\n                translate: panAndZoom.translate()\n            };\n        };\n\n        this.restoreState = function (state) {\n            $scope.nodeSelected = true;\n            $scope.searchVisible = false;\n\n            this.nodes = angular.copy(state.nodes);\n            // check if triples exists is needed for old configs\n            this.tripleNodes = state.tripleNodes ? new Map(JSON.parse(state.tripleNodes)) : new Map();\n            this.links = [];\n            this.addAndMatchLinks(state.links);\n            this.tripleLinksCopy = state.tripleLinksCopy ? new Map(JSON.parse(state.tripleLinksCopy)) : new Map();\n\n            _.each(this.nodes, function (d) {\n                if (d.fixed) {\n                    $scope.numberOfPinnedNodes++;\n                }\n            });\n\n            if (angular.isDefined(state.colorIndex) && angular.isDefined(state.type2color)) {\n                colorIndex = state.colorIndex;\n                type2color = angular.copy(state.type2color);\n            }\n\n            if (angular.isDefined(state.translate) && angular.isDefined(state.scale)) {\n                transformValues = \"translate(\" + state.translate[0] + \", \" + state.translate[1] + \") scale(\" + state.scale + \")\";\n                panAndZoom.translate(state.translate);\n                panAndZoom.scale(state.scale);\n            }\n\n            draw();\n        };\n    }\n\n    let graph = new Graph();\n\n    $scope.defaultGraphConfig = {\n        id: 'default',\n        name: 'Easy graph',\n        startMode: 'search'\n    };\n\n    // Graph Config\n    $scope.getGraphConfigs = function (graphCallback) {\n        GraphConfigRestService.getGraphConfigs()\n            .success(function (data) {\n                $scope.graphConfigs = data;\n                if (graphCallback) {\n                    graphCallback();\n                }\n            }).error(function (data) {\n            toastr.error(getError(data), $translate.instant('graphexplore.error.graph.configs.short.msg'));\n        });\n    };\n\n    $scope.loadConfigForId = function (configId, successCallback) {\n        if (configId === $scope.defaultGraphConfig.id) {\n            $scope.loadGraphConfig($scope.defaultGraphConfig);\n        } else {\n            GraphConfigRestService.getConfig(configId)\n                .success(function (data) {\n                    $scope.loadGraphConfig(data);\n                    successCallback();\n                })\n                .error(function (data) {\n                    toastr.error(getError(data), $translate.instant('graphexplore.error.could.not.load.config', {configId: configId}));\n                });\n        }\n    };\n\n    $scope.findConfigById = function (configId) {\n        if (configId === $scope.defaultGraphConfig.id) {\n            return $scope.defaultGraphConfig;\n        }\n        return $.grep($scope.graphConfigs, function (e) {\n            return e.id === configId;\n        })[0];\n    };\n\n    $scope.easyGraphSearch = function (iri) {\n        $scope.configLoaded = $scope.defaultGraphConfig;\n        $scope.openUri(iri);\n    };\n\n    $scope.loadGraphConfig = function (config) {\n        $scope.configLoaded = config;\n        if (config.startMode === 'search') {\n            $scope.searchVisible = true;\n        } else if (config.startMode === 'node' && config.startIRI) {\n            $timeout(function () {\n                $scope.openUri(config.startIRI, true);\n            }, 0);\n        } else if (config.startMode === 'query' && config.startGraphQuery) {\n            $scope.loading = true;\n            GraphConfigRestService.loadGraphForConfig(config, config.startQueryIncludeInferred, getSettings()['linksLimit'], config.startQuerySameAs)\n                .then(function (response) {\n                    // Node drawing will turn off loader\n                    initGraphFromResponse(response);\n                }, function (data) {\n                    $scope.loading = false;\n                    toastr.error(getError(data), $translate.instant('graphexplore.error.graph.load'));\n                });\n        }\n    };\n\n    $scope.deleteConfig = function (config) {\n        ModalService.openSimpleModal({\n            title: $translate.instant('common.confirm'),\n            message: $translate.instant('graphexplore.delete.graph', {configName: config.name}),\n            warning: true\n        }).result\n            .then(function () {\n                GraphConfigRestService.deleteGraphConfig(config)\n                    .success(function () {\n                        $scope.getGraphConfigs();\n                        $scope.refreshSavedGraphs();\n                    }).error(function (data) {\n                    toastr.error(getError(data), $translate.instant('graphexplore.error.cannot.delete.config'));\n                });\n            });\n    };\n\n    $scope.goToGraphConfig = function (config) {\n        $scope.pushHistory({config: config.id}, {config: config});\n        $scope.resetState();\n        $scope.loadGraphConfig(config);\n    };\n\n    $window.onpopstate = function (event) {\n        $scope.resetState();\n\n        if (event.state) {\n            if (event.state.config) {\n                $scope.loadGraphConfig(event.state.config);\n                if (event.state.uri) {\n                    $scope.openUri(event.state.uri, true);\n                }\n            } else if (event.state.savedGraph) {\n                $scope.loadSavedGraph(event.state.savedGraph, true);\n            }\n        }\n    };\n\n    const initGraphFromQueryParam = function () {\n        // view sparql\n        if ($location.search().query) {\n            $scope.searchVisible = false;\n            $scope.queryResultsMode = true;\n            loadGraphForQuery($location.search().query,\n                $location.search().sameAs,\n                $location.search().inference);\n        } else {\n            // broadcasted event from view resource directive to take input value\n            $scope.$on('onRootNodeChange', function (e, inputValue) {\n                $scope.loading = true;\n                const settings = getSettings();\n                if (angular.isDefined(inputValue)) {\n                    $scope.rootNodeIri = inputValue;\n                    $http({\n                        url: 'rest/explore-graph/node',\n                        method: 'GET',\n                        params: {\n                            iri: inputValue,\n                            config: $scope.configLoaded ? $scope.configLoaded.id : $scope.defaultGraphConfig.id,\n                            languages: !$scope.shouldShowSettings() ? [] : settings['languages'],\n                            includeInferred: settings['includeInferred'],\n                            sameAsState: settings['sameAsState']\n                        }\n                    }).then(function (response) {\n                        $scope.nodeSelected = true;\n                        $scope.searchVisible = false;\n                        if (response.data.types === null) {\n                            response.data.types = \"greyColor\";\n                        }\n                        graph = new Graph();\n                        const rootNode = graph.addNode(response.data, width / 2, height / 2);\n\n                        transformValues = \"translate(0, -70) scale(1)\";\n                        panAndZoom.translate([0, -70]);\n                        panAndZoom.scale(1);\n\n                        expandNode(rootNode, true);\n                    }).catch(function (err) {\n                        $scope.loading = false;\n                        toastr.error(getError(err), $translate.instant('graphexplore.error.could.not.load.graph'));\n                    });\n                }\n            });\n        }\n\n        if ($location.search().uri) {\n            $scope.openUri($location.search().uri, true);\n        }\n\n        if ($location.search().saved) {\n            SavedGraphsRestService.getSavedGraph($location.search().saved)\n                .success(function (data) {\n                    $scope.loadSavedGraph(data);\n                })\n                .error(function (data) {\n                    const msg = getError(data);\n                    toastr.error(msg, $translate.instant('graphexplore.error.could.not.open'));\n                });\n        }\n    };\n\n    const loadGraphFromQueryParam = function () {\n        // view graph config\n        if ($location.search().config) {\n            $scope.loadConfigForId($location.search().config, initGraphFromQueryParam);\n        } else if ($location.search().query || $location.search().uri) {\n            $scope.loadGraphConfig($scope.defaultGraphConfig);\n            initGraphFromQueryParam();\n        } else {\n            initGraphFromQueryParam();\n        }\n    };\n\n    $scope.replaceIRIWithPrefix = function (iri) {\n        const namespaces = $scope.namespaces;\n        const namespacePrefix = _.findLast(namespaces, function (o) {\n            return iri.indexOf(o.uri) === 0;\n        });\n        return namespacePrefix ? (namespacePrefix.prefix + \":\" + iri.substring(namespacePrefix.uri.length)) : iri;\n    };\n\n    function expandPrefix(str, namespaces) {\n        const ABS_URI_REGEX = /^<?(http|urn).*>?/;\n        if (!ABS_URI_REGEX.test(str)) {\n            const uriParts = str.split(':');\n            const uriPart = uriParts[0];\n            const localName = uriParts[1];\n            if (!angular.isUndefined(localName)) {\n                const expandedUri = ClassInstanceDetailsService.getNamespaceUriForPrefix(namespaces, uriPart);\n                if (expandedUri) {\n                    return expandedUri + localName;\n                }\n            }\n        }\n        return str;\n    }\n\n    $scope.addedTag = function (tag) {\n        if (tag.text.indexOf(':') < 0) {\n            toastr.warning($translate.instant('graphexplore.absolute.prefixed.iri'));\n            return null;\n        }\n        tag.text = expandPrefix(tag.text, $scope.namespaces);\n        $scope.pageslideExpanded = true;\n        return tag;\n    };\n\n    $scope.validateTag = function (tag, category, wildcardOK) {\n        if (tag.text.indexOf(':') < 0) {\n            if (wildcardOK) {\n                toastr.warning($translate.instant('graphexplore.absolute.prefixed.iri.option'), category);\n            } else {\n                toastr.warning($translate.instant('graphexplore.absolute.prefixed.iri'), category);\n            }\n            return false;\n        }\n        const wildcardPos = tag.text.indexOf('*');\n        if (wildcardPos >= 0) {\n            if (!wildcardOK) {\n                toastr.warning($translate.instant('graphexplore.wildcards.not.allowed'), category);\n                return false;\n            } else if (wildcardPos < tag.text.length - 1) {\n                toastr.warning($translate.instant('graphexplore.wildcards.last.char'), category);\n                return false;\n            }\n        }\n        return true;\n    };\n\n    $scope.getTagClass = function (tagText) {\n        if (tagText.endsWith('*')) {\n            return 'tag-item-wildcard';\n        }\n        return null;\n    };\n\n    $scope.getActiveRepository = function () {\n        return $repositories.getActiveRepository();\n    };\n\n    $scope.isLicenseValid = function() {\n        return $licenseService.isLicenseValid();\n    }\n\n    // Flag to avoid calling repo init logic twice\n    $scope.hasInitedRepository = false;\n\n    // This method may be called twice - once by us explicitly and once by the repositoryInit event.\n    // In some race conditions getActiveRepository() will be already set when we enter it the first\n    // time but then we'll be called again by the event, so we need the above flag to avoid double\n    // initialization and weirdness.\n    function initForRepository(newRepo) {\n        if (!$repositories.getActiveRepository() || $scope.hasInitedRepository && !newRepo) {\n            return;\n        }\n\n        $scope.hasInitedRepository = true;\n\n        if (!newRepo) {\n            // Process params only if this isn't a repo that was just selected from the dropdown menu\n            $scope.getGraphConfigs(loadGraphFromQueryParam);\n        }\n\n        // Inits namespaces for repo\n        $scope.getNamespacesPromise = RDF4JRepositoriesRestService.getNamespaces($scope.getActiveRepository())\n            .success(function (data) {\n                const nss = _.map(data.results.bindings, function (o) {\n                    return {\"uri\": o.namespace.value, \"prefix\": o.prefix.value};\n                });\n                $scope.namespaces = _.sortBy(nss, function (n) {\n                    return n.uri.length;\n                });\n\n                checkAutocompleteStatus();\n            }).error(function (data) {\n                toastr.error(getError(data), $translate.instant('graphexplore.error.view.will.not.work'));\n            });\n    }\n\n    function checkAutocompleteStatus() {\n        if ($licenseService.isLicenseValid()) {\n            $scope.getAutocompletePromise = AutocompleteRestService.checkAutocompleteStatus();\n        }\n    }\n\n    $scope.$on('autocompleteStatus', function() {\n        checkAutocompleteStatus();\n    });\n\n    $scope.$on('repositoryIsSet', function (event, args) {\n        // New repo set from dropdown, clear init state\n        if (args.newRepo) {\n            $scope.hasInitedRepository = false;\n        }\n\n        initForRepository(args.newRepo);\n\n        // New repo set from dropdown, clear state and go to home page\n        if (args.newRepo) {\n            $scope.resetState();\n            // Quick-n-dirty way to get rid of the existing vis\n            $('.graph-visualization svg').empty();\n\n            // When we come from the sparql view and then change the repo though the dropdown,\n            // should goToHome and reinit the view, for the search to view on the home page\n            if ($location.search().query) {\n                $scope.goToHome();\n                initGraphFromQueryParam();\n            }\n\n        }\n    });\n\n    initForRepository();\n\n    const multiClickDelay = 500; // max delay between clicks for multiple click events\n\n    const nodeLabelRectScaleX = 1.75;\n\n    const color1 = d3.scale.linear()\n        .domain([0, 9])\n        .range([\"hsl(0, 100%, 75%)\", \"hsl(360, 90%, 82%)\"])\n        .interpolate(d3.interpolateHslLong);\n\n    const color2 = d3.scale.linear()\n        .domain([0, 9])\n        .range([\"hsl(180, 50%, 75%)\", \"hsl(540, 40%, 82%)\"])\n        .interpolate(d3.interpolateHslLong);\n\n    $scope.getColor = function (type) {\n        if (angular.isUndefined(type2color[type])) {\n            type2color[type] = colorIndex;\n            colorIndex++;\n        }\n\n        const index = type2color[type];\n        if (index > 39) {\n            return \"#c2c2c2\";\n        } else if (index % 2 === 0) {\n            return color1(index / 2);\n        } else {\n            return color2(index / 2);\n        }\n    };\n\n    const force = d3.layout.force()\n        .gravity(0.07)\n        .size([width, height]);\n\n    const svg = d3.select(\".main-container .graph-visualization\").append(\"svg\")\n        .attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\n        .attr(\"preserveAspectRatio\", \"xMidYMid meet\");\n\n    let showNodeTipAndIconsTimer = 0;\n    let removeIconsTimer = 0;\n\n    const loader = new Loader();\n\n    function draw(resetRootNode) {\n        // remove all group elements and rec to rebuild the graph when the user clicks on it\n        d3.selectAll(\"svg g\").remove();\n        d3.selectAll(\"svg rect\").remove();\n        d3.selectAll('.d3-tip').remove();\n        d3.selectAll('.menu-events').remove();\n\n        // zoom and drag event\n        panAndZoom.on(\"zoom\", panAndZoomed);\n\n        // building rectangular so we can bind zoom and drag effects\n        svg.append(\"rect\")\n            .attr(\"width\", width * 10)\n            .attr(\"height\", height * 10)\n            .attr(\"x\", -(width * 10 - width) / 2)\n            .attr(\"y\", -(height * 10 - height) / 2)\n            .style(\"fill\", \"none\")\n            .style(\"pointer-events\", \"all\")\n            .call(panAndZoom)\n            .on(\"click\", function () {\n                d3.event.stopPropagation();\n                removeMenuIfVisible();\n                // Clicking outside the graph stops the layout\n                force.stop();\n            });\n\n\n        const container = svg.append(\"g\").attr(\"class\", \"nodes-container\")\n            .attr(\"transform\", function () {\n                if (angular.isDefined(transformValues) && !resetRootNode) {\n                    return transformValues;\n                }\n                return '';\n            });\n\n        const tip = d3tip()\n            .attr('class', 'd3-tip')\n            .customPosition(function () {\n                const bbox = tipElement.getBoundingClientRect();\n                return {\n                    top: (bbox.bottom + 10) + 'px',\n                    left: (bbox.left - 30) + 'px'\n                };\n            })\n            .html(function (d) {\n                let html = '';\n\n                if (d.fixed) {\n                    // add pin icon if pinned down\n                    html += '<i class=\"icon-pin\"></i>&nbsp;&nbsp;';\n                }\n\n                if (d.types.length > 0) {\n                    // mid-dot delimited types\n                    html += _.join(_.map(d.types, function (t) {\n                        return $scope.replaceIRIWithPrefix(t);\n                    }), ' \\u00B7 ');\n                } else {\n                    html += '<i>No types</i>';\n                }\n\n                return html;\n            });\n\n        const numberOfPredLeft = function (d) {\n            return d.predicates.length - 10;\n        };\n\n        // This will create text that will appear in d3tip\n        const createTipText = function (d) {\n            let html = '';\n            html += _.join(_.map(d.predicates, function (p, index) {\n                if (index === 0) {\n                    return getShortPredicate(p);\n                    // If we have less than or ten predicates should show them with middle dot separated\n                } else if (index < 10) {\n                    return ' \\u00B7 ' + getShortPredicate(p);\n                    // On eleventh predicate just append how many more predicates left to show to the user\n                } else if (index === 10) {\n                    const numOfPredLeft = numberOfPredLeft(d);\n                    // Show how many predicates left\n                    const textToShow = numOfPredLeft > 1 ? numOfPredLeft + ' predicates'\n                        : numOfPredLeft + ' predicate';\n                    return ' \\u00B7 ' + $translate.instant('graphexplore.tip.text', {textToShow: textToShow});\n                }\n            }), '');\n\n            return html;\n        };\n\n        const calculateWidth = function (d) {\n            const text = createTipText(d);\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext(\"2d\");\n            ctx.font = \"13px Arial\";\n\n            if (d.predicates.length < 10) {\n                return ctx.measureText(text).width;\n            } else {\n                return ctx.measureText(text).width / 2;\n            }\n        };\n\n        let tipPredicateElement;\n        let tipPredicateTimer;\n\n        const tipPredicates = d3tip()\n            .attr('class', 'd3-tip')\n            .customPosition(function (d) {\n                const bbox = tipPredicateElement.getBoundingClientRect();\n                const textWidth = calculateWidth(d);\n                return {\n                    top: (bbox.top - 30) + 'px',\n                    left: (bbox.left - 30) + 'px',\n                    width: textWidth + 'px'\n                };\n            })\n            .html(function (d) {\n                return createTipText(d);\n            });\n\n        let tipTimer;\n        // Shows the tooltip for a node but with a slight delay\n        const showTipForNode = function (d, event) {\n            $timeout.cancel(tipTimer);\n            const thisTipElement = tipElement = event.target;\n            $timeout(function () {\n                if (tipElement === thisTipElement) {\n                    tip.show(d, tipElement);\n                }\n            }, 300);\n        };\n\n        // Hides the tooltip for the node and resets some variables\n        const hideTipForNode = function () {\n            $timeout.cancel(tipTimer);\n            $timeout.cancel(showNodeTipAndIconsTimer);\n            tipElement = null;\n            tip.hide();\n            removeIconsTimer = $timeout(function () {\n                removeMenuIfVisible();\n            }, 500);\n        };\n\n        // Updates the text in the tooltip if already visible\n        const updateTipForNode = function (d) {\n            if (tipElement) {\n                tip.show(d, tipElement);\n            }\n        };\n\n        svg.call(tip);\n\n        // Shows like tooltip list of predicates but with a slight delay\n        const showPredicateToolTip = function (d) {\n            $timeout.cancel(tipPredicateTimer);\n            const thisPredicateTipElement = tipPredicateElement = d3.event.target;\n            $timeout(function () {\n                if (tipPredicateElement === thisPredicateTipElement && d.predicates.length > 1) {\n                    tipPredicates.show(d, tipPredicateElement);\n                }\n            }, 300);\n        };\n\n        // Hides the tooltip with predicates and resets some variables\n        const hidePredicateToolTip = function () {\n            $timeout.cancel(tipPredicateTimer);\n            tipPredicateElement = null;\n            tipPredicates.hide();\n        };\n\n        svg.call(tipPredicates);\n\n        let link = svg.selectAll(\".link\");\n        let node = svg.selectAll(\".node\");\n\n        force.nodes(graph.nodes).charge(-3000);\n\n        force.links(graph.links).linkDistance(function (l) {\n            if (l.source.isTriple || l.target.isTriple) {\n                return 0;\n            }\n            // link distance depends on length of text with an added bonus for strongly connected nodes,\n            // i.e. they will be pushed further from each other so that their common nodes can cluster up\n            return getPredicateTextLength(l) + 30 * l.connectedness;\n        });\n\n        // arrow markers\n        container.append(\"defs\").selectAll(\"marker\")\n            .data(force.links())\n            .enter().append(\"marker\")\n            .attr(\"class\", \"arrow-marker\")\n            .attr(\"id\", function (d) {\n                return createArrowMarkerUniqueID(d);\n            })\n            .attr(\"viewBox\", \"0 -5 10 10\")\n            .attr(\"refX\", function (d) {\n                // The positioning of the arrow for triple target nodes differ from normal ones\n                return d.target.isTriple ? 11 : d.target.size + 11;\n            })\n            .attr(\"refY\", 0)\n            .attr(\"markerWidth\", 10)\n            .attr(\"markerHeight\", 10)\n            .attr(\"orient\", \"auto\")\n            .append(\"path\")\n            .attr(\"d\", \"M0,-5L10,0L0,5 L10,0 L0, -5\");\n\n        // add the links, nodes, predicates and node labels\n        link = container.selectAll(\".link\")\n            .data(graph.links)\n            .enter().append(\"g\")\n            .attr(\"class\", \"link-wrapper\")\n            .attr(\"id\", function (d) {\n                return removeSpecialChars(convertLinkDataToLinkId(d));\n            })\n            .append(\"line\")\n            .attr(\"class\", \"link\")\n            .style(\"stroke-width\", 1)\n            .style(\"fill\", \"transparent\")\n            .style(\"marker-end\", function (d) {\n                let targetArrowId = createArrowMarkerUniqueID(d);\n                return `url(#${targetArrowId})`;\n            });\n\n        const predicate = container.selectAll(\".link-wrapper\")\n            .append(\"text\")\n            .text(function (d) {\n                return getPredicate(d);\n            })\n            .attr(\"class\", function (d) {\n                if (d.predicates.length > 1 || graph.tripleNodes.has(convertLinkDataToLinkId(d))) {\n                    return \"predicates\";\n                }\n                return \"predicate\";\n            })\n            .attr(\"dy\", \"-0.5em\")\n            .style(\"text-anchor\", \"middle\")\n            .style(\"display\", getSettings()['showLinksText'] ? \"\" : \"none\")\n            .on(\"mouseover\", function (d) {\n                d3.event.stopPropagation();\n                showPredicateToolTip(d);\n            })\n            .on('mouseout', hidePredicateToolTip)\n            .on(\"click\", function (d) {\n                d3.event.stopPropagation();\n                linkActions(d);\n            });\n\n        // node events and variables\n        let mouseEventTimer;\n        let upEventLast = 0;\n        let virtualClickEventTimer = 0;\n        let moveEventCount = 0;\n\n        // tracks mousedown and touchstart events in order to count single or double click\n        // (checked in upEventHandler)\n        const downEventHandler = function () {\n            if (d3.event.button && d3.event.button !== 0) {\n                return;\n            }\n\n            hideTipForNode();\n            $timeout.cancel(mouseEventTimer);\n            $scope.showPredicates = false;\n            if (d3.event.timeStamp - upEventLast < multiClickDelay) {\n                virtualClickEventTimer++;\n            } else {\n                virtualClickEventTimer = 1;\n            }\n\n            upEventLast = d3.event.timeStamp;\n\n            d3.event.preventDefault();\n        };\n\n        // builds upon downEventHandler and adds additional functionality for touch devices\n        const touchStartEventHandler = function (d) {\n            downEventHandler();\n\n            // for touch devices we track touch and hold for 1s in order to remove a node\n            moveEventCount = 0;\n            mouseEventTimer = $timeout(function () {\n                if (moveEventCount < 5) {\n                    // remove the node only if not many move events were fired,\n                    // this avoids conflict with dragging nodes\n                    hideNode(d);\n                }\n                mouseEventTimer = null;\n                virtualClickEventTimer = 0;\n            }, 1000);\n        };\n\n        // tracks the number of move events (checked in the touchend event handler)\n        const moveEventHandler = function () {\n            moveEventCount++;\n        };\n\n        const showNodeTipAndIcons = function (d) {\n            if (!d.isBeingDragged) {\n                const event = d3.event;\n                $timeout.cancel(removeIconsTimer);\n                showNodeTipAndIconsTimer = $timeout(() => {\n                    if (expandNodeIcons(d, this)) {\n                        showTipForNode(d, event);\n                    }\n                }, 400);\n            }\n        };\n\n        const expandEventHandler = function (d, i, parentNode) {\n            const shownLinks = graph.countLinks(d, graph.links);\n            if (shownLinks <= getSettings()['linksLimit']) {\n                expandNode(d, false, parentNode ? parentNode : this.parentNode);\n            } else {\n                toastr.info($translate.instant('graphexplore.increase.limit'), $translate.instant('graphexplore.node.at.max'));\n            }\n            $scope.closeInfoPanel();\n        };\n\n        const upEventHandler = function (d) {\n            if (d3.event.button && d3.event.button !== 0) {\n                return;\n            }\n\n            $timeout.cancel(mouseEventTimer);\n\n            const event = d3.event;\n            const element = this;\n            if (!GuidesService.isActive()) {\n                if (d3.event.timeStamp - upEventLast < multiClickDelay) {\n                    if (virtualClickEventTimer === 1) {\n                        mouseEventTimer = $timeout(function () {\n                            clickedNode(d, element, event);\n                        }, 40 + multiClickDelay - (d3.event.timeStamp - upEventLast));\n                    } else if (virtualClickEventTimer === 2) {\n                        // expand node\n                        expandEventHandler(d, 0, element.parentNode);\n                    }\n                }\n            }\n\n            d3.event.preventDefault();\n        };\n\n        // Shows growing or shrinking pin animation\n        function showPinAnimation(d, type) {\n            let startSize;\n            let endSize;\n            let startOpacity;\n            let endOpacity;\n            let animate = true;\n\n            if (type === 'down') {\n                startSize = d.size * 2;\n                endSize = d.size / 3;\n                startOpacity = 0.8;\n                endOpacity = 0.3;\n            } else if (type === 'down-fixed') {\n                startSize = d.size * 2;\n                endSize = d.size;\n                startOpacity = 0.8;\n                endOpacity = 0.66;\n            } else if (type === 'up') {\n                startSize = d.size / 3;\n                endSize = d.size * 2;\n                startOpacity = 0.3;\n                endOpacity = 0.8;\n            } else if (type === 'fixed') {\n                startSize = d.size;\n                startOpacity = 0.66;\n                animate = false;\n            } else {\n                return; // unknown\n            }\n\n            let pin = container.selectAll('.node-wrapper')\n                .filter(function (innerD) {\n                    return innerD === d;\n                })\n                .append('text')\n                .text('\\ue90f') // pin icon\n                .classed('icon-any pinned', true)\n                .style('font-size', startSize + 'px')\n                .attr('x', function (d) {\n                    return d.x;\n                })\n                .attr('y', function (d) {\n                    return d.y;\n                })\n                .attr('opacity', startOpacity);\n\n            if (type === 'fixed' || type === 'down-fixed') {\n                d.pin = pin;\n            }\n\n            if (animate) {\n                pin = pin.transition()\n                    .duration(1000)\n                    .style('font-size', function () {\n                        return endSize + 'px';\n                    })\n                    .attr('opacity', endOpacity);\n\n                if (type !== 'down-fixed') {\n                    pin.remove();\n                }\n            }\n        }\n\n        function removePin() {\n            d3.select('.pinned').remove();\n        }\n\n        // Unfixes nodes that were dragged previously\n        const rightClickHandler = function (d) {\n            if (d3.event.shiftKey) {\n                // Do nothing with shift key, use to access context menu\n                return;\n            }\n\n            d3.event.preventDefault();\n\n            removeMenuIfVisible();\n            $scope.closeInfoPanel();\n\n            if (d.fixed) {\n                // unpin\n                $scope.numberOfPinnedNodes--;\n                d.fixed = false;\n                showPinAnimation(d, 'up');\n                force.resume();\n            } else {\n                // pin down\n                $scope.numberOfPinnedNodes++;\n                d.fixed = true;\n                showPinAnimation(d, 'down');\n            }\n            // update pin in tooltip\n            updateTipForNode(d);\n        };\n\n        const drag = d3.behavior.drag()\n            .origin(function (d) {\n                return d;\n            })\n            .on(\"dragstart\", dragstarted)\n            .on(\"drag\", dragged)\n            .on(\"dragend\", dragended);\n\n\n        function dragstarted(d) {\n            if (GuidesService.isActive()) {\n                // disable dragging if a guide is active.\n                return;\n            }\n            if (d3.event.sourceEvent.button === 0) {\n                d.fixedBeforeDrag = d.fixed;\n                d.isBeingDragged = true;\n                d.beginDragging = true;\n                removeMenuIfVisible();\n                d3.event.sourceEvent.stopPropagation();\n                d3.select(this).classed(\"dragging\", true);\n            }\n        }\n\n        function dragged(d) {\n            if (d.isBeingDragged) {\n                // reset click counter to avoid conflicts between clicks and drags\n                virtualClickEventTimer = 0;\n\n                d.px = d3.event.x;\n                d.py = d3.event.y;\n                if (!d.fixed) {\n                    $scope.numberOfPinnedNodes++;\n                    d.fixed = true;\n                    showPinAnimation(d, 'down-fixed');\n                } else if (d.beginDragging) {\n                    showPinAnimation(d, 'fixed');\n                }\n                d.pinWasFixed = true;\n                d.beginDragging = null;\n\n                force.resume();\n            }\n        }\n\n        function dragended(d) {\n            if (d.isBeingDragged) {\n                if (d.pinWasFixed) {\n                    d.pinWasFixed = null;\n                    removePin();\n                }\n                d.isBeingDragged = false;\n                d3.select(this).classed(\"dragging\", false);\n            }\n        }\n\n        node = container.selectAll(\".node\")\n            .data(graph.nodes)\n            .enter().append(\"g\")\n            .attr(\"class\", \"node-wrapper\")\n            .attr(\"id\", function (d) {\n                return d.iri;\n            })\n            .append(\"circle\")\n            .attr(\"class\", \"node\")\n            .attr(\"r\", function (d) {\n                return d.size;\n            })\n            .style(\"fill\", function (d) {\n                if (d.types === \"greyColor\") {\n                    return \"c2c2c2\";\n                }\n                return $scope.getColor(d.types[0]);\n            })\n            .call(drag)\n            .on('mouseover', showNodeTipAndIcons)\n            .on('mouseout', hideTipForNode)\n            .on(\"mousedown\", downEventHandler)\n            .on(\"touchstart\", touchStartEventHandler)\n            // no need to track move for mouse\n            .on(\"touchmove\", moveEventHandler)\n            .on(\"mouseup\", upEventHandler)\n            .on(\"touchend\", upEventHandler)\n            .on(\"contextmenu\", rightClickHandler)\n            // custom event used when user is following a guide\n            .on(\"gdb-expand-node\", expandEventHandler)\n            // custom event used when user is following a guide\n            .on(\"gdb-show-node-info\", showNodeInfo);\n\n        const nodeLabels = container.selectAll(\".node-wrapper\").append(\"foreignObject\")\n            .style(\"pointer-events\", \"none\")\n            .attr(\"width\", function (d) {\n                return d.size * 2 * nodeLabelRectScaleX;\n            });\n        // height will be computed by updateNodeLabels\n\n        container.insert(\"g\").attr(\"class\", \"menu-events\");\n\n        updateNodeLabels(nodeLabels);\n\n        force.on(\"tick\", function () {\n            // recalculate nodes positions and repel them if they collide\n            let q = d3.geom.quadtree(graph.nodes);\n            let i = 0;\n            const n = graph.nodes.length;\n            // FIXME while (++i < n) q.visit(collide(graph.nodes[i]));\n\n            // recalculate links attributes\n            link.attr(\"x1\", function (d) {\n                return getNodeX(d.source);\n            }).attr(\"y1\", function (d) {\n                return getNodeY(d.source);\n            }).attr(\"x2\", function (d) {\n                return getNodeX(d.target);\n            }).attr(\"y2\", function (d) {\n                return getNodeY(d.target);\n            });\n\n            // recalculate predicates attributes\n            predicate.attr(\"x\", function (d) {\n                let sourceX = getNodeX(d.source);\n                let targetX = getNodeX(d.target);\n                return d.x = (sourceX + targetX) * 0.5;\n            }).attr(\"y\", function (d) {\n                let sourceY = getNodeY(d.source);\n                let targetY = getNodeY(d.target);\n                return d.y = (sourceY + targetY) * 0.5;\n            }).attr(\"transform\", function (d) {\n                const angle = findAngleBetweenNodes(d, d.direction);\n                return \"rotate(\" + angle + \", \" + d.x + \", \" + d.y + \")\";\n            });\n\n            // recalculate nodes attributes\n            node.attr(\"cx\", function (d) {\n                return d.x;\n            }).attr(\"cy\", function (d) {\n                return d.y;\n            });\n\n            // update node loader position\n            container.select(\".node-loader\").attr(\"x\", function (d) {\n                return d.x - d.size + 3; //square svg is not perfectly centered and need +3 units on x ordinate to fit in circle\n            }).attr(\"y\", function (d) {\n                return d.y - d.size;\n            });\n\n            container.select(\".loader-container\").attr(\"cx\", function (d) {\n                return d.x;\n            }).attr(\"cy\", function (d) {\n                return d.y;\n            });\n\n            nodeLabels.attr(\"x\", function (d) {\n                return d.x - (d.size * nodeLabelRectScaleX);\n            }).attr(\"y\", function (d) {\n                // the height of the nodeLabel box is 3 times the fontSize computed by updateNodeLabels\n                // and we want to offset it so that its middle matches the centre of the circle, hence divided by 2\n                return d.y - 3 * d.fontSize / 2;\n            });\n\n            // Update position of shrinking pin animation (if any)\n            d3.select('.pinned').attr(\"x\", function (d) {\n                return d.x;\n            }).attr(\"y\", function (d) {\n                return d.y;\n            });\n\n            updateAlphaInScope();\n        });\n\n        function panAndZoomed() {\n            if (GuidesService.isActive()) {\n                // disable zooming if a guide is active.\n                return;\n            }\n            transformValues = \"translate(\" + d3.event.translate + \") scale(\" + d3.event.scale + \")\";\n            container.attr(\"transform\", transformValues);\n        }\n\n        if (angular.isDefined(loader)) {\n            loader.setLoadingState(false);\n        }\n\n        if ($scope.loading) {\n            $scope.loading = false;\n        }\n\n        d3.selectAll('.link-wrapper').each(function () {\n            const source = $(this).attr(\"id\").split(\">\")[0];\n            const target = $(this).attr(\"id\").split(\">\")[1];\n            d3.selectAll('.link').each(function (link) {\n                let sourceId = removeSpecialChars(link.source.iri);\n                let targetId = removeSpecialChars(link.target.iri);\n                if (sourceId === target && targetId === source) {\n                    let twoWayLinkID = sourceId;\n                    twoWayLinkID += \">\";\n                    twoWayLinkID += targetId;\n                    const textNode = document.createTextNode('  \\u27F6');\n                    document.getElementById(twoWayLinkID).lastChild.appendChild(textNode);\n                    link.direction = \"double\";\n                }\n            });\n        });\n\n        d3.selectAll('.d3-actions-tip').remove();\n\n        force.start();\n    }\n\n\n    function updateAlphaInScope() {\n        // other code can use the value of d3alpha to determine when the force layout has settled\n        $rootScope.d3alpha = force.alpha();\n    }\n\n    /* FIXME\n    // check for collision of the nodes\n    function collide(node, bigger) {\n        return function (quad, x1, y1, x2, y2) {\n            if (quad.point && (quad.point !== node)) {\n                var x = node.x - quad.point.x,\n                    y = node.y - quad.point.y,\n                    l = Math.sqrt(x * x + y * y),\n                    r = node.size + quad.point.size;\n                if (l < r) {\n                    l = (l - r) / l * .5;\n                    node.x -= x *= l;\n                    node.y -= y *= l;\n                    quad.point.x += x;\n                    quad.point.y += y;\n                }\n            }\n            return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n        };\n    }\n    */\n\n    draw();\n\n    // find angle between pair of nodes so we can position predicates\n    function findAngleBetweenNodes(linkedNodes, direction) {\n        const p1 = {\n            x: getNodeX(linkedNodes.source),\n            y: getNodeY(linkedNodes.source)\n        };\n\n        const p2 = {\n            x: getNodeX(linkedNodes.target),\n            y: getNodeY(linkedNodes.target)\n        };\n        if (direction) {\n            return Math.atan2(p2.y - p1.y, p2.x - p1.x) * 180 / Math.PI;\n        } else {\n            const angleDeg = Math.atan2(p2.y - p1.y, p2.x - p1.x) * 180 / Math.PI;\n            if (angleDeg <= 90 && angleDeg >= -90) {\n                return angleDeg;\n            }\n            return (angleDeg > 0 ? -1 : 1) * (180 - Math.abs(angleDeg));\n        }\n    }\n\n    const menuEvents = new MenuEvents();\n\n    // expanding and collapsing of the nodes\n    function clickedNode(d, element, event) {\n        $scope.showInfoPanel = false;\n        $scope.showPredicates = false;\n        $scope.showNodeInfo = false;\n\n        // shift + ctrl/cmd + click focuses node\n        if (event.shiftKey && (event.ctrlKey || event.metaKey)) {\n            $rootScope.$broadcast(\"onRootNodeChange\", d.iri);\n            return false;\n        }\n\n        // ctrl/cmd + click hides the node\n        if (event.ctrlKey || event.metaKey) {\n            hideNode(d);\n            return false;\n        }\n\n        // If value of openedNodeInfoPanel is different than \"undefined\"\n        // we evaluate if clicked node value is the same and close it\n        if (typeof $scope.openedNodeInfoPanel !== \"undefined\" && $scope.openedNodeInfoPanel === d) {\n            $scope.pageslideExpanded = false;\n            $scope.openedNodeInfoPanel = undefined;\n            return false;\n        }\n\n        showNodeInfo(d);\n        return true;\n    }\n\n    function expandNodeIcons(d, element) {\n        if ($scope.showInfoPanel) {\n            return false;\n        }\n\n        if (menuEvents.closeIcon || menuEvents.expandIcon || menuEvents.focusIcon || menuEvents.copyURIIcon) {\n            menuEvents.removeIcons();\n        }\n\n        // If nodes are still rearranging result of force.alpha() is more than 0.02\n        // and we don't want to show node's icons on mouse over and stop rearrangement.\n        // The chosen value 0.02 is somewhat magic and works well with 0.02 in awaitAlphaDropD3()\n        // in the guides code.\n        if (force.alpha() < 0.02) {\n            menuEvents.initIcons(d, element.parentNode);\n            force.stop();\n            updateAlphaInScope();\n\n            return true;\n        }\n\n        return false;\n    }\n\n    function hideNode(d) {\n        graph.removeNode(d);\n        draw();\n    }\n\n    function collapseNode(d) {\n        d.isExpanded = false;\n        graph.removeNodeLeafLinks(d);\n        draw();\n    }\n\n    function initGraph(response) {\n        $scope.nodeSelected = true;\n        if (response.data.types === null) {\n            response.data.types = \"greyColor\";\n        }\n        graph = new Graph();\n        transformValues = \"translate(0, -70) scale(1)\";\n        panAndZoom.translate([0, -70]);\n        panAndZoom.scale(1);\n    }\n\n    function initGraphFromResponse(response) {\n        initGraph(response);\n        renderGraphFromResponse(response);\n    }\n\n    function renderGraphFromResponse(response, d, isStartNode) {\n        let linksFound = response.data;\n        // filter existing links\n        linksFound = _.filter(linksFound, function (newLink) {\n            return _.findIndex(graph.links,\n                function (existingLink) {\n                    return newLink.source === existingLink.source.iri && newLink.target === existingLink.target.iri;\n                }) === -1;\n        });\n        let linksCopy = [];\n        const tripleLinksIt = graph.tripleLinksCopy.values();\n        for (let i = 0; i < graph.tripleLinksCopy.size; i++) {\n            let linkCopy = tripleLinksIt.next().value;\n            linkCopy.forEach(link => {\n                linksCopy.push(link);\n            });\n        }\n        // filter existing shadow links\n        linksFound = _.filter(linksFound, function (newLink) {\n            return _.findIndex(linksCopy,\n                function (existingLink) {\n                    return newLink.source === existingLink.source.iri && newLink.target === existingLink.target.iri;\n                }) === -1;\n        });\n        // filter reflexive links until we find a way to render them  GDB-1853\n        linksFound = _.filter(linksFound, function (newLink) {\n            return newLink.source !== newLink.target;\n        });\n        const nodesFromLinks = distinctBy('iri',_.union(_.flatten(_.map(response.data, function (link) {\n            return [\n                { iri: link.source,\n                  isTriple: link.isTripleSource },\n                {\n                  iri: link.target,\n                  isTriple: link.isTripleTarget }];\n        }))));\n        const existingNodes = _.map(graph.nodes, function (n) {\n            return {\n                iri: n.iri,\n                isTriple: Boolean(n.isTriple)\n            };\n        });\n        const tripleNodesIt = graph.tripleNodes.values();\n        for (let i = 0; i < graph.tripleNodes.size; i++) {\n            let nodes = tripleNodesIt.next().value;\n            nodes.forEach(node => {\n                existingNodes.push({\n                    iri: node.iri,\n                    isTriple: node.isTriple\n                });\n            });\n        }\n        const newNodes = _.reject(nodesFromLinks, function (n) {\n            return _.some(existingNodes, n);\n        });\n\n        if (newNodes.length === 0) {\n            if (isStartNode) {\n                toastr.info($translate.instant('graphexplore.error.node.connections'));\n            } else if (linksFound.length === 0) {\n                toastr.info($translate.instant('graphexplore.error.node.connections'));\n            }\n\n            graph.addAndMatchLinks(linksFound);\n            draw();\n        } else {\n            const promises = [];\n            const newNodesData = [];\n\n            const settings = getSettings();\n\n            _.forEach(newNodes, function (newNode, index) {\n                promises.push($http({\n                    url: 'rest/explore-graph/node',\n                    method: 'GET',\n                    params: {\n                        iri: newNode.isTriple ? createTriple(newNode.iri) : newNode.iri,\n                        config: $scope.configLoaded.id,\n                        languages: !$scope.shouldShowSettings() ? [] : settings['languages'],\n                        includeInferred: settings['includeInferred'],\n                        sameAsState: settings['sameAsState']\n                    }\n                }).then(function (res) {\n                    // Save the data for later\n                    newNodesData[index] = res.data;\n                }));\n            });\n\n            // Waits for all of the collected promises and then:\n            // - adds each new node\n            // - redraws the graph\n            $q.all(promises).then(function () {\n                _.forEach(newNodesData, function (newNodeData, index) {\n                    // Calculate initial positions for the new nodes based on spreading them evenly\n                    // on a circle around the node we came from.\n                    const theta = 2 * Math.PI * index / newNodesData.length;\n                    const x = (d ? d.x : 0) + Math.cos(theta) * height / 3;\n                    const y = (d ? d.y : 0) + Math.sin(theta) * height / 3;\n                    if (newNodeData.isTriple) {\n                        graph.addTriple(newNodeData, x, y);\n                    } else {\n                        graph.addNode(newNodeData, x, y);\n                    }\n                });\n\n                graph.addAndMatchLinks(linksFound);\n                if (d) {\n                    d.isExpanded = true;\n                }\n                draw();\n            });\n        }\n    }\n\n    function expandNode(d, isStartNode, parentNode) {\n        if (loader.getLoadingState()) {\n            return;\n        }\n        loader.init(d, parentNode);\n\n        const settings = getSettings();\n        const expandIri = d.iri;\n        $http({\n            url: 'rest/explore-graph/links',\n            method: 'GET',\n            params: {\n                iri: expandIri, linksLimit: settings['linksLimit'],\n                includeInferred: settings['includeInferred'],\n                config: $scope.configLoaded.id,\n                preferredTypes: !$scope.shouldShowSettings() ? [] : settings['preferredTypes'],\n                rejectedTypes: !$scope.shouldShowSettings() ? [] : settings['rejectedTypes'],\n                preferredPredicates: !$scope.shouldShowSettings() ? [] : settings['preferredPredicates'],\n                rejectedPredicates: !$scope.shouldShowSettings() ? [] : settings['rejectedPredicates'],\n                preferredTypesOnly: !$scope.shouldShowSettings() ? [] : settings['preferredTypesOnly'],\n                preferredPredicatesOnly: !$scope.shouldShowSettings() ? [] : settings['preferredPredicatesOnly'],\n                languages: !$scope.shouldShowSettings() ? [] : settings['languages'],\n                sameAsState: settings['sameAsState'],\n                includeSchema: settings['includeSchema']\n            }\n        }).then(function (response) {\n            renderGraphFromResponse(response, d, isStartNode);\n        }, function (response) {\n            const msg = getError(response.data);\n            toastr.error(msg, $translate.instant('graphexplore.error.exploring.node'));\n            $scope.loading = false;\n            loader.setLoadingState(false);\n        });\n    }\n\n    function removeMenuIfVisible() {\n        if (angular.isDefined(menuEvents) && menuEvents.expandedState) {\n            menuEvents.removeIcons();\n        }\n    }\n\n    function MenuEvents() {\n        this.closeIcon = undefined;\n        this.expandIcon = undefined;\n        this.collapseIcon = undefined;\n        this.focusIcon = undefined;\n        this.copyURIIcon = undefined;\n        this.actionsTip = undefined;\n\n        this.removeIcons = function () {\n            this.closeIcon.remove(\"g\");\n            if (this.expandIcon) {\n                this.expandIcon.remove(\"g\");\n            }\n\n            if (this.collapseIcon) {\n                this.collapseIcon.remove(\"g\");\n            }\n\n            this.focusIcon.remove(\"g\");\n            this.copyURIIcon.remove(\"g\");\n            this.closeIcon = undefined;\n            this.expandIcon = undefined;\n            this.collapseIcon = undefined;\n            this.focusIcon = undefined;\n            this.copyURIIcon = undefined;\n\n            this.expandedState = false;\n        };\n\n        this.expandedState = false;\n\n        function getPositionAndAngle(angle, d) {\n            const x = d.x - 14 + (d.size + 15) * Math.cos(angle * Math.PI / 180 - Math.PI / 2);\n            const y = d.y - 14 + (d.size + 15) * Math.sin(angle * Math.PI / 180 - Math.PI / 2);\n            return \"translate(\" + x + \",\" + y + \")\";\n        }\n\n        this.initIcons = function (node, parentNode) {\n            // init action tips on hover of the icons\n            const actionsTip = d3tip()\n                .attr('class', 'd3-tip d3-actions-tip')\n                .customPosition(function () {\n                    const bbox = d3.event.target.getBoundingClientRect();\n                    return {\n                        top: (bbox.top - 20) + 'px',\n                        left: (bbox.right + 10) + 'px'\n                    };\n                })\n                .html(function (name) {\n                    return name;\n                });\n            svg.call(actionsTip);\n            const angle = 20;\n            if (node.isExpanded) {\n                this.collapseIcon = d3.select('.menu-events').append(\"g\")\n                    .attr(\"class\", \"collapse-icon\")\n                    .attr(\"name\", \"collapse\")\n                    .attr(\"transform\", function () {\n                        return getPositionAndAngle(angle, node);\n                    });\n                this.collapseIcon.append(\"circle\")\n                    .attr(\"cx\", 14)\n                    .attr(\"cy\", 14)\n                    .attr(\"r\", 13)\n                    .style(\"fill\", \"#eee\");\n                this.collapseIcon.append(\"path\")\n                    .attr(\"d\", \"M22.67,12a.59.59,0,0,1-.53.65l-6.88.72H15.2a.59.59,0,0,1-.59-.65l.72-6.88A.58.58,0,0,1,16,5.33a.59.59,0,0,1,.53.65L16,11.11,21.3,5.79a.64.64,0,0,1,.91.91L16.89,12,22,11.49A.59.59,0,0,1,22.67,12ZM12.59,14.75l-6.75.85a.59.59,0,0,0-.51.66.58.58,0,0,0,.66.51l4.95-.62-5.2,5.2a.64.64,0,1,0,.91.91l5.2-5.2L11.23,22a.59.59,0,0,0,.51.66h.07a.59.59,0,0,0,.59-.52l.85-6.75a.59.59,0,0,0-.17-.49A.58.58,0,0,0,12.59,14.75Z\")\n                    .style(\"fill\", \"var(--onto-orange)\");\n\n                this.collapseIcon.on(\"click\", function () {\n                    collapseNode(node);\n                }).on('mouseover', function () {\n                    actionsTip.show(this.getAttribute(\"name\"));\n                    $timeout.cancel(showNodeTipAndIconsTimer);\n                    $timeout.cancel(removeIconsTimer);\n                }).on('mouseout', function () {\n                    actionsTip.hide();\n                    removeIconsTimer = $timeout(function () {\n                        removeMenuIfVisible();\n                    }, 500);\n                });\n            } else {\n                this.expandIcon = d3.select('.menu-events').append(\"g\")\n                    .attr(\"class\", \"expand-icon\")\n                    .attr(\"name\", \"expand\")\n                    .attr(\"transform\", function () {\n                        return getPositionAndAngle(angle, node);\n                    });\n                this.expandIcon.append(\"circle\")\n                    .attr(\"cx\", 14)\n                    .attr(\"cy\", 14)\n                    .attr(\"r\", 13)\n                    .style(\"fill\", \"#eee\");\n                this.expandIcon.append(\"path\")\n                    .attr(\"d\", \"M22.37,6.28l-.72,6.88a.59.59,0,0,1-.59.53H21a.59.59,0,0,1-.53-.65L21,7.9l-5.32,5.32a.64.64,0,0,1-.91-.91L20.1,7,15,7.53a.59.59,0,0,1-.12-1.18l6.88-.72a.59.59,0,0,1,.65.65ZM12.89,20.34,7.95,21l5.2-5.2a.64.64,0,0,0-.91-.91L7,20.05l.62-4.95A.59.59,0,0,0,6.48,15l-.85,6.75a.59.59,0,0,0,.59.67h.07L13,21.52a.59.59,0,1,0-.15-1.18Z\")\n                    .style(\"fill\", \"var(--onto-orange)\");\n\n                this.expandIcon.on(\"click\", function () {\n                    expandNode(node, false, parentNode);\n                }).on('mouseover', function () {\n                    actionsTip.show(this.getAttribute(\"name\"));\n                    $timeout.cancel(removeIconsTimer);\n                    $timeout.cancel(showNodeTipAndIconsTimer);\n                }).on('mouseout', function () {\n                    actionsTip.hide();\n                    removeIconsTimer = $timeout(function () {\n                        removeMenuIfVisible();\n                    }, 500);\n                });\n            }\n\n\n            this.focusIcon = d3.select('.menu-events').append(\"g\")\n                .attr(\"class\", \"focus-icon\")\n                .attr(\"name\", \"focus\")\n                .attr(\"transform\", function () {\n                    return getPositionAndAngle(angle, node);\n                });\n            this.focusIcon.append(\"circle\")\n                .attr(\"cx\", 14)\n                .attr(\"cy\", 14)\n                .attr(\"r\", 13)\n                .style(\"fill\", \"#eee\");\n            this.focusIcon.append(\"path\")\n                .attr(\"d\", \"M14.2,23.81a9.8,9.8,0,1,1,6.93-2.87h0A9.74,9.74,0,0,1,14.2,23.81Zm0-18.17a8.37,8.37,0,1,0,5.92,14.29h0A8.37,8.37,0,0,0,14.2,5.64Zm1.42,6.95a2,2,0,1,0,0,2.85A2,2,0,0,0,15.62,12.59Z\")\n                .style(\"fill\", \"var(--onto-orange)\");\n\n            this.focusIcon.on(\"click\", function () {\n                $rootScope.$broadcast(\"onRootNodeChange\", node.iri);\n            }).on('mouseover', function () {\n                actionsTip.show(this.getAttribute(\"name\"));\n                $timeout.cancel(removeIconsTimer);\n                $timeout.cancel(showNodeTipAndIconsTimer);\n            }).on('mouseout', function () {\n                actionsTip.hide();\n                removeIconsTimer = $timeout(function () {\n                    removeMenuIfVisible();\n                }, 500);\n            });\n\n            this.copyURIIcon = d3.select('.menu-events').append(\"g\")\n                .attr(\"class\", \"icon-link\")\n                .attr(\"name\", \"link\")\n                .attr(\"transform\", function () {\n                    return getPositionAndAngle(angle, node);\n                });\n            this.copyURIIcon.append(\"circle\")\n                .attr(\"cx\", 14)\n                .attr(\"cy\", 14)\n                .attr(\"r\", 13)\n                .style(\"fill\", \"#eee\");\n            this.copyURIIcon.append(\"path\")\n                .attr(\"d\", \"M 13.457031 10.164062 C 13.648438 10.164062 13.820312 10.242188 13.941406 10.363281 L 15.492188 11.859375 C 15.984375 12.332031 16.292969 12.992188 16.292969 13.714844 C 16.292969 14.441406 15.984375 15.097656 15.492188 15.574219 L 10.394531 20.496094 C 9.902344 20.972656 9.222656 21.265625 8.472656 21.265625 C 7.71875 21.265625 7.039062 20.972656 6.546875 20.496094 L 4.996094 19 C 4.507812 18.523438 4.203125 17.867188 4.203125 17.144531 C 4.203125 16.421875 4.507812 15.765625 4.996094 15.289062 L 7.542969 12.824219 C 7.667969 12.707031 7.84375 12.628906 8.035156 12.628906 C 8.417969 12.628906 8.726562 12.929688 8.726562 13.300781 C 8.726562 13.484375 8.648438 13.652344 8.523438 13.773438 L 5.976562 16.234375 C 5.738281 16.46875 5.589844 16.792969 5.589844 17.148438 C 5.589844 17.503906 5.738281 17.824219 5.976562 18.058594 L 7.527344 19.566406 C 7.773438 19.792969 8.105469 19.929688 8.472656 19.929688 C 8.835938 19.929688 9.167969 19.792969 9.414062 19.566406 L 14.511719 14.644531 C 14.753906 14.410156 14.90625 14.089844 14.90625 13.730469 C 14.90625 13.375 14.753906 13.054688 14.511719 12.820312 L 12.964844 11.324219 C 12.839844 11.203125 12.761719 11.039062 12.761719 10.855469 C 12.761719 10.488281 13.070312 10.1875 13.449219 10.1875 Z M 17.082031 3.976562 C 17.082031 3.976562 17.085938 3.976562 17.085938 3.976562 C 17.824219 3.976562 18.492188 4.261719 18.980469 4.722656 L 20.535156 6.203125 C 21.042969 6.679688 21.355469 7.34375 21.355469 8.082031 C 21.355469 8.792969 21.058594 9.441406 20.582031 9.914062 L 18.0625 12.402344 C 17.9375 12.527344 17.761719 12.605469 17.566406 12.605469 C 17.183594 12.605469 16.875 12.304688 16.875 11.9375 C 16.875 11.753906 16.949219 11.589844 17.070312 11.46875 L 19.605469 8.984375 C 19.847656 8.75 19.996094 8.429688 19.996094 8.070312 C 19.996094 7.714844 19.847656 7.394531 19.605469 7.160156 L 18.019531 5.667969 C 17.773438 5.445312 17.4375 5.304688 17.070312 5.300781 C 16.703125 5.304688 16.367188 5.453125 16.128906 5.691406 L 11.085938 10.667969 C 10.84375 10.898438 10.695312 11.222656 10.695312 11.578125 C 10.695312 11.933594 10.84375 12.257812 11.085938 12.488281 L 12.675781 13.980469 C 12.804688 14.101562 12.882812 14.273438 12.882812 14.457031 C 12.882812 14.828125 12.574219 15.128906 12.191406 15.128906 C 12.003906 15.128906 11.832031 15.054688 11.707031 14.9375 L 10.140625 13.457031 C 9.636719 12.980469 9.324219 12.316406 9.324219 11.582031 C 9.324219 10.863281 9.621094 10.214844 10.101562 9.742188 L 15.140625 4.765625 C 15.625 4.285156 16.304688 3.980469 17.054688 3.976562 Z M 17.082031 3.976562\")\n                .style(\"fill\", \"var(--onto-orange)\");\n\n            this.copyURIIcon.on(\"click\", function () {\n                copyToClipboard(node.iri);\n                removeMenuIfVisible();\n                actionsTip.hide();\n            }).on('mouseover', function () {\n                actionsTip.show(\"<div style='text-align: center;'><b>Copy to ClipBoard</b><br>\" + node.iri + \"</div>\");\n                $timeout.cancel(removeIconsTimer);\n                $timeout.cancel(showNodeTipAndIconsTimer);\n            }).on('mouseout', function () {\n                actionsTip.hide();\n                removeIconsTimer = $timeout(function () {\n                    removeMenuIfVisible();\n                }, 500);\n            });\n\n            this.closeIcon = d3.select('.menu-events').append(\"g\")\n                .attr(\"class\", \"close-icon\")\n                .attr(\"name\", \"remove\")\n                .attr(\"transform\", function () {\n                    return getPositionAndAngle(angle, node);\n                });\n            this.closeIcon.append(\"circle\")\n                .attr(\"cx\", 14)\n                .attr(\"cy\", 14)\n                .attr(\"r\", 13)\n                .style(\"fill\", \"#eee\");\n            this.closeIcon.append(\"path\")\n                .attr(\"d\", \"M14.94,14l5.87-5.87a.66.66,0,1,0-.94-.94L14,13.06,8.13,7.19a.66.66,0,0,0-.94.94L13.06,14,7.19,19.87a.66.66,0,1,0,.94.94L14,14.94l5.87,5.87a.66.66,0,1,0,.94-.94Z\")\n                .style(\"fill\", \"var(--onto-orange)\");\n\n            this.closeIcon.on(\"click\", function () {\n                hideNode(node);\n            }).on('mouseover', function () {\n                actionsTip.show(this.getAttribute(\"name\"));\n                $timeout.cancel(removeIconsTimer);\n                $timeout.cancel(showNodeTipAndIconsTimer);\n            }).on('mouseout', function () {\n                actionsTip.hide();\n                removeIconsTimer = $timeout(function () {\n                    removeMenuIfVisible();\n                }, 500);\n            });\n\n            this.animateMenu(node);\n        };\n\n        this.animateMenu = function (node) {\n            const animationDuration = 100;\n            const easeEffects = [\"linear\", \"quad\", \"cubic\", \"sin\", \"exp\", \"circle\", \"elastic\", \"back\", \"bounce\"]; // https://github.com/d3/d3-3.x-api-reference/blob/master/Transitions.md#easing\n            const easeEffect = easeEffects[3];\n            let delay = 0;\n            const dellayAddition = 35;\n            let angle = 20; // angle of the first icon 0 is at 12 o'clock\n\n            if (this.expandIcon) {\n                this.expandIcon\n                    .transition()\n                    .duration(animationDuration)\n                    .style(\"opacity\", 1)\n                    .ease(easeEffect)\n                    .attr(\"transform\", function () {\n                        return getPositionAndAngle(angle, node);\n                    })\n                    .delay(delay += dellayAddition);\n            }\n\n            if (this.collapseIcon) {\n                this.collapseIcon\n                    .transition()\n                    .duration(animationDuration)\n                    .style(\"opacity\", 1)\n                    .ease(easeEffect)\n                    .attr(\"transform\", function () {\n                        return getPositionAndAngle(angle, node);\n                    })\n                    .delay(delay += dellayAddition);\n            }\n\n            this.copyURIIcon\n                .transition()\n                .duration(animationDuration)\n                .style(\"opacity\", 1)\n                .ease(easeEffect)\n                .attr(\"transform\", function () {\n                    angle += 30;\n                    return getPositionAndAngle(angle, node);\n                })\n                .delay(delay += dellayAddition);\n\n            this.focusIcon\n                .transition()\n                .duration(animationDuration)\n                .style(\"opacity\", 1)\n                .ease(easeEffect)\n                .attr(\"transform\", function () {\n                    angle += 30;\n                    return getPositionAndAngle(angle, node);\n                })\n                .delay(delay += dellayAddition);\n\n\n            this.closeIcon\n                .transition()\n                .duration(animationDuration)\n                .style(\"opacity\", 1)\n                .ease(easeEffect)\n                .attr(\"transform\", function () {\n                    angle += 30;\n                    return getPositionAndAngle(angle, node);\n                })\n                .delay(delay += dellayAddition);\n\n            this.expandedState = true;\n        };\n    }\n\n    function Loader() {\n        this.state = false;\n\n        this.setLoadingState = function (state) {\n            this.state = state;\n        };\n\n        this.getLoadingState = function () {\n            return this.state;\n        };\n\n        this.init = function (node, parentNode) {\n            d3.select(parentNode).append(\"circle\")\n                .attr(\"cx\", function () {\n                    return node.x;\n                })\n                .attr(\"cy\", function () {\n                    return node.y;\n                })\n                .attr(\"class\", \"loader-container\")\n                .attr(\"r\", function () {\n                    return node.size;\n                })\n                .style(\"fill\", \"fff\")\n                .style(\"opacity\", \"0.7\");\n\n            d3.select(parentNode).append(\"image\")\n                .attr(\"xlink:href\", \"js/angular/templates/loader/ot-loader.svg?v=2.2.1\")\n                .attr(\"x\", function () {\n                    return node.x - node.size + 5;\n                })\n                .attr(\"y\", function () {\n                    return node.y - node.size;\n                })\n                .attr(\"width\", function () {\n                    return node.size * 2;\n                })\n                .attr(\"height\", function () {\n                    return node.size * 2;\n                })\n                .attr(\"class\", \"node-loader\");\n        };\n    }\n\n    function showNodeInfo(d) {\n        force.stop();\n        // Assign value of node, which info panel has been opened\n        $scope.openedNodeInfoPanel = d;\n        $scope.showNodeInfo = true;\n        $scope.showFilter = false;\n        $scope.showPredicates = false;\n        $scope.nodeLabels = d.labels;\n        $scope.nodeTypes = d.types;\n        $scope.rdfRank = d.rdfRank;\n        $scope.nodeIri = d.iri;\n        $scope.resourceType = d.isTriple ? 'triple' : 'uri';\n        $scope.encodedIri = d.isTriple ? encodeURIComponent(createTriple(d.iri)) : encodeURIComponent(d.iri);\n        $scope.showInfoPanel = true;\n\n        $scope.rdfsLabel = d.labels[0].label;\n        $scope.rdfsComment = d.comment;\n        $scope.expanded = false;\n\n        $scope.propertiesQueryObj.query = '';\n        $scope.dataNodeKeysQuery = '';\n        const settings = getSettings();\n        $http.get('rest/explore-graph/properties', {\n            params: {\n                iri: d.isTriple ? createTriple(d.iri) : d.iri,\n                config: $scope.configLoaded.id,\n                languages: !$scope.shouldShowSettings() ? [] : settings['languages'],\n                includeInferred: settings['includeInferred'],\n                sameAsState: settings['sameAsState'],\n                rejectedPredicates: !$scope.shouldShowSettings() ? [] : settings['rejectedPredicates']\n            }\n        }).then(function (response) {\n            $scope.data = _.mapKeys(response.data, function (value, key) {\n                return $scope.replaceIRIWithPrefix(key);\n            });\n            $scope.propertiesObj.items = [];\n\n            _.forEach($scope.data, function (value, key) {\n                $scope.propertiesObj.items.push({key: key, value: value});\n            });\n            $scope.nodeImage = undefined;\n\n            $scope.propertiesNotFiltered = $scope.propertiesObj.items;\n\n            const imageVal = _.find($scope.propertiesObj.items, function (o) {\n                return o.key === 'image';\n            });\n            if (imageVal) {\n                $scope.nodeImage = imageVal['value'][0].v;\n            }\n            $scope.propertiesObj.items = _.reject($scope.propertiesObj.items, function (o) {\n                return o.key === 'image';\n            });\n            $scope.propertiesNotFiltered = $scope.propertiesObj.items;\n        }, function (response) {\n            toastr.warning(getError(response.data), \"Error\");\n        });\n    }\n\n    $scope.toggleSidePanel = function () {\n        $scope.pageslideExpanded = !$scope.pageslideExpanded;\n    };\n\n    $scope.closeInfoPanel = function () {\n        $scope.pageslideExpanded = false;\n        $scope.openedNodeInfoPanel = undefined;\n        $scope.predicates = [];\n        openedLink = null;\n        // o, angular, o, miracle\n        $timeout(function () {\n            $scope.showInfoPanel = false;\n        });\n    };\n\n    function applyElementsStyleChanges(tripleNode) {\n        updatePredicatesColor('predicate', 'var(--onto-orange-dark)', tripleNode);\n        updatePredicatesColor('predicates', 'var(--onto-orange-dark)', tripleNode);\n\n        let links = document.getElementsByClassName('link');\n        if (links) {\n            _.each(links, function (link) {\n                let linkLink = link.__data__;\n                if (linkLink.source.iri.indexOf(tripleNode.iri) >= 0 || linkLink.target.iri.indexOf(tripleNode.iri) >= 0) {\n                    link.style.stroke = 'var(--onto-orange-dark)';\n                    link.style.strokeWidth = 4;\n                }\n            })\n        }\n\n        let markers = document.getElementsByClassName('arrow-marker');\n        if (markers) {\n            _.each(markers, function (marker) {\n                let markerLink = marker.__data__;\n                if (markerLink.source.iri.indexOf(tripleNode.iri) >= 0 || markerLink.target.iri.indexOf(tripleNode.iri) >= 0) {\n                    marker.style.stroke = 'var(--onto-orange-dark)';\n                    if (!marker.__data__.target.isTriple) {\n                        marker.setAttribute(\"refX\", \"23\");\n                    }\n                }\n            });\n        }\n    }\n\n    $scope.clickLink = function (predData) {\n        if (graph.tripleNodes.has(predData.linkId)) {\n            revertElementsStyleToDefault();\n            let tripleNode = graph.tripleNodes.get(predData.linkId)[predData.nodeIndex];\n            // Shows selected triple and its properties\n            showNodeInfo(tripleNode);\n            $scope.showPredicates = true;\n\n            let clickedEl = document.getElementById(predData.linkId + predData.nodeIndex);\n            if (clickedEl) {\n                clickedEl.style.fontWeight = \"bold\";\n            }\n\n            let nodeCopy = {};\n            const tripleLinksIt = graph.tripleLinksCopy.values();\n            for (let i = 0; i < graph.tripleLinksCopy.size; i++) {\n                let links = tripleLinksIt.next().value;\n                if (links.length > 1) {\n                    links.every(link => {\n                        if (link.source.iri === tripleNode.iri) {\n                            nodeCopy.iri = links[0].source.iri;\n                            if (link.target.isTriple) {\n                                nodeCopy.oppLinkIRI = convertTripleToLinkId(link.target.iri);\n                                nodeCopy.oppTriplePred = getShortPredicate(link.target.iri.split(' ')[1]);\n                            }\n                            nodeCopy.pred = getShortPredicate(tripleNode.iri.split(' ')[1]);\n                            if (link.predicates.length === 1) {\n                                nodeCopy.linkPred = link.predicates[0];\n                            }\n                            return false;\n                        }\n                        if (link.target.iri === tripleNode.iri) {\n                            nodeCopy.iri = links[0].target.iri;\n                            if (link.source.isTriple) {\n                                nodeCopy.oppLinkIRI = convertTripleToLinkId(link.source.iri);\n                                nodeCopy.oppTriplePred = getShortPredicate(link.source.iri.split(' ')[1]);\n                            }\n                            nodeCopy.pred = getShortPredicate(tripleNode.iri.split(' ')[1]);\n                            if (link.predicates.length === 1) {\n                                nodeCopy.linkPred = link.predicates[0];\n                            }\n                            return false;\n                        }\n                        return true;\n                    });\n                }\n            }\n\n            if (!nodeCopy.iri) {\n                nodeCopy.iri = tripleNode.iri;\n                nodeCopy.pred = getShortPredicate(tripleNode.iri.split(' ')[1]);\n            }\n\n            applyElementsStyleChanges(nodeCopy);\n        }\n    }\n\n    function updatePredicatesColor(className, color, tripleNode) {\n        let preds = document.getElementsByClassName(className);\n\n        if (preds) {\n            _.each(preds, function (pred) {\n                let predLink = pred.__data__;\n                if (tripleNode) {\n                    if (predLink.source.iri.indexOf(tripleNode.iri) >= 0 || predLink.target.iri.indexOf(tripleNode.iri) >= 0) {\n                        pred.style.fill = color;\n                    }\n                    if (convertTripleToLinkId(tripleNode.iri) === convertLinkDataToLinkId(predLink)) {\n                        pred.textContent = tripleNode.pred;\n                        pred.style.fill = color;\n                    }\n                    if (tripleNode.oppLinkIRI && tripleNode.oppLinkIRI === convertLinkDataToLinkId(predLink)) {\n                        pred.textContent = tripleNode.oppTriplePred;\n                        pred.style.fill = color;\n                    }\n                } else {\n                    pred.style.fill = color;\n                    pred.textContent = getPredicate(predLink);\n                }\n            })\n        }\n    }\n\n    function revertElementsStyleToDefault() {\n        _.each($scope.predicates, function (pred) {\n            let currEl = document.getElementById(pred.linkId + pred.nodeIndex);\n            if (currEl) {\n                currEl.style.fontWeight = \"normal\";\n            }\n        });\n        let links = document.getElementsByClassName('link');\n        if (links) {\n            _.each(links, function (link) {\n                link.style.stroke = '#999';\n                link.style.strokeWidth = 1;\n            })\n        }\n        updatePredicatesColor('predicate', '');\n        updatePredicatesColor('predicates', '');\n\n        let markers = document.getElementsByClassName('arrow-marker');\n\n        if (markers) {\n            _.each(markers, function (marker) {\n                marker.style.stroke = '#999';\n                // RefX for triple targets isn't changed, because they are not affected by increasing of stroke-width\n                if (!marker.__data__.target.isTriple) {\n                    marker.setAttribute(\"refX\", \"59\");\n                }\n            });\n        }\n    }\n\n    function linkActions(d) {\n        revertElementsStyleToDefault();\n        let linkId = convertLinkDataToLinkId(d);\n        if (d.predicates.length === 1 && graph.tripleNodes.has(linkId)) {\n            openedLink = null;\n            let tripleNode = graph.tripleNodes.get(linkId)[0];\n            // If there is a triple in this link, show its properties\n            if (clickedNode(tripleNode, this, d3.event.button)) {\n                let nodeCopy = {};\n                nodeCopy.iri = tripleNode.iri;\n                nodeCopy.pred = getShortPredicate(tripleNode.iri.split(' ')[1]);\n                applyElementsStyleChanges(nodeCopy);\n            }\n            return;\n        }\n        openPredicates(d);\n    }\n\n    function openPredicates(d) {\n        $scope.showNodeInfo = false;\n        // open predicates sidebar if they are more than one\n        $scope.showPredicates = d.predicates.length > 1;\n        $scope.showFilter = false;\n        $scope.showInfoPanel = false;\n\n        if (openedLink === d) {\n            $scope.showNodeInfo = false;\n            $scope.showInfoPanel = false;\n            openedLink = null;\n            return;\n        }\n\n        openedLink = d;\n\n        if ($scope.showPredicates) {\n            $scope.predicates = _.map(d.predicates, function (p) {\n                let foundNodeIndex = getTripleNodeIndex(p, d);\n                let isPartOfTriple = foundNodeIndex > -1;\n                return {\n                    value: getShortPredicate(p),\n                    partOfTriple: isPartOfTriple,\n                    linkId: isPartOfTriple ? convertLinkDataToLinkId(d) : '',\n                    nodeIndex: foundNodeIndex\n                };\n            });\n            $scope.showInfoPanel = true;\n        }\n    }\n\n    function getTripleNode(triple) {\n        let linkId = convertTripleToLinkId(triple);\n        if (graph.tripleNodes.has(linkId)) {\n            return graph.tripleNodes.get(linkId).find(el => el.iri === triple);\n        }\n    }\n\n    function getTripleNodeIndex(pred, d) {\n        let linkId = convertLinkDataToLinkId(d);\n        if (graph.tripleNodes.has(linkId)) {\n            return graph.tripleNodes.get(linkId).findIndex(el => el.iri.indexOf(pred) >= 0);\n        } else {\n            return -1;\n        }\n    }\n\n    // get each predicate and check if there are more than one for same source and target\n    function getPredicate(d) {\n        if (d.predicates.length > 1) {\n            return d.predicates.length + \" predicates\";\n        }\n        return getShortPredicate(d.predicates[0]);\n    }\n\n    function getShortPredicate(p) {\n        const shortIRI = $scope.replaceIRIWithPrefix(p);\n        if (shortIRI.length === p.length) {\n            return p.split('/')[p.split('/').length - 1];\n        } else {\n            return shortIRI;\n        }\n    }\n\n    // calculate predicate text length so we can have dynamic link lengths\n    function getPredicateTextLength(link) {\n        const span = $('<span></span>');\n        const splitedLink = link.predicates[0].split('/');\n        const predicateText = splitedLink[splitedLink.length - 1];\n        span.addClass('predicate-text').text(predicateText);\n        $('body').append(span);\n        const textLength = span.width() + link.source.size * 2 + link.target.size * 2 + 50;\n        span.remove();\n        return textLength * 0.75;\n    }\n\n    $scope.splitPredicate = function (predicate) {\n        return predicate.split('/')[predicate.split('/').length - 1];\n    };\n\n    $scope.getActiveRepository = function () {\n        return $repositories.getActiveRepository();\n    };\n\n    $scope.isLoadingLocation = function () {\n        return $repositories.isLoadingLocation();\n    };\n\n    $scope.hasActiveLocation = function () {\n        return $repositories.hasActiveLocation();\n    };\n\n    $scope.rotate = function (isLeft) {\n        removeMenuIfVisible();\n\n        // compute common rotation math such as the angle, its sine and cosine and the pivot point\n        const theta = (isLeft ? 1 : -1) * 2 * Math.PI / 180; // + rotates left, - rotates right\n        const cos = Math.cos(theta);\n        const sin = Math.sin(theta);\n        const pivotX = width / 2; // i.e. centre of viewport\n        const pivotY = height / 2;\n\n        // rotates each node around the pivot\n        d3.selectAll(\".node-wrapper\")\n            .each(function (d) {\n                d.x = pivotX + (cos * (d.x - pivotX) + sin * (d.y - pivotY));\n                d.y = pivotY + (-sin * (d.x - pivotX) + cos * (d.y - pivotY));\n                if (d.fixed) {\n                    // Fixed nodes need their px and py updated too\n                    d.px = d.x;\n                    d.py = d.y;\n                }\n            });\n\n        force.resume();\n    };\n\n    $scope.openUri = function (uri, noHistory) {\n        if (!noHistory) {\n            const searchParams = {};\n            if ($scope.configLoaded.id !== $scope.defaultGraphConfig.id) {\n                searchParams.config = $scope.configLoaded.id;\n            }\n            searchParams.uri = uri;\n            $scope.pushHistory(searchParams, {uri: uri, config: $scope.configLoaded});\n        }\n        $scope.$broadcast(\"onRootNodeChange\", uri);\n    };\n\n    function saveGraphHttp(graph) {\n        if ($scope.configLoaded) {\n            graph.config = $scope.configLoaded.id;\n        }\n        SavedGraphsRestService.addNewSavedGraph(graph)\n            .success(function (data, status, headers) {\n                $scope.lastSavedGraphName = graph.name;\n                $scope.lastSavedGraphId = headers()['x-saved-graph-id'];\n                $scope.shared = graph.shared;\n                $scope.refreshSavedGraphs();\n                toastr.success($translate.instant('graphexplore.saved.graph', {name: graph.name}));\n            })\n            .error(function (data, status) {\n                if (status === 422) {\n                    $scope.saveGraphModal('new', graph, true);\n                } else {\n                    const msg = getError(data);\n                    toastr.error(msg, $translate.instant('graphexplore.error.cannot.create.graph'));\n                }\n            });\n    }\n\n    $scope.saveOrUpdateGraph = function () {\n        const data = JSON.stringify(graph.copyState());\n        const graphToSave = {id: $scope.lastSavedGraphId, name: $scope.lastSavedGraphName, data: data, shared: $scope.shared};\n\n        if (graphToSave.id) {\n            $scope.saveGraphModal('update', graphToSave);\n        } else {\n            $scope.saveGraphModal('new', graphToSave);\n        }\n    };\n\n    $scope.renameSavedGraph = function (graphToRename) {\n        // By not sending the 'data' part of a graph we only change the name\n        $scope.saveGraphModal('rename', {id: graphToRename.id, name: graphToRename.name, config: graphToRename.config, shared: graphToRename.shared});\n    };\n\n    const editSavedGraphHttp = function (savedGraph) {\n        SavedGraphsRestService.editSavedGraph(savedGraph)\n            .success(function () {\n                $scope.lastSavedGraphName = savedGraph.name;\n                $scope.shared = savedGraph.shared;\n                $scope.refreshSavedGraphs();\n                toastr.success($translate.instant('graphexplore.saved.graph.was.edited', {name: savedGraph.name}));\n            })\n            .error(function (data) {\n                const msg = getError(data);\n                toastr.error(msg, $translate.instant('graphexplore.error.cannot.edit'));\n            });\n    };\n\n    $scope.saveGraphModal = function (mode, graphToSave, graphExists) {\n        const modalInstance = $modal.open({\n            templateUrl: 'js/angular/graphexplore/templates/modal/save-graph.html',\n            controller: 'SaveGraphModalCtrl',\n            resolve: {\n                data: function () {\n                    return {\n                        mode: mode,\n                        graph: graphToSave,\n                        graphExists: graphExists,\n                        shared: graphToSave.shared\n                    };\n                }\n            }\n        });\n\n        modalInstance.result.then(function (data) {\n            if (data.restart) {\n                $scope.saveGraphModal(data.mode, data.graph, false);\n                return;\n            }\n            switch (data.mode) {\n                case 'new':\n                    saveGraphHttp(data.graph);\n                    break;\n                case 'update':\n                    editSavedGraphHttp(data.graph);\n                    break;\n                case 'rename':\n                    editSavedGraphHttp(data.graph);\n                    break;\n            }\n        });\n    };\n\n    $scope.refreshSavedGraphs = function () {\n        SavedGraphsRestService.getSavedGraphs()\n            .success(function (data) {\n                $scope.savedGraphs = data;\n            })\n            .error(function (data) {\n                const msg = getError(data);\n                toastr.error(msg, $translate.instant('graphexplore.error.getting.saved.graphs'));\n            });\n    };\n\n\n    $scope.loadSavedGraph = function (graphToLoad, noHistory) {\n        if (graphToLoad.owner) {\n            // Own saved graph\n            $scope.lastSavedGraphName = graphToLoad.name;\n            $scope.lastSavedGraphId = graphToLoad.id;\n            $scope.shared = graphToLoad.shared;\n            $scope.configLoaded = $scope.findConfigById(graphToLoad.config);\n        } else {\n            // Someone else's saved graph\n            $scope.lastSavedGraphName = null;\n            $scope.lastSavedGraphId = null;\n            $scope.shared = graphToLoad.shared;\n        }\n\n        if (!$scope.configLoaded) {\n            // Fallback to default config, either because config is gone or because graph isn't owned\n            $scope.configLoaded = $scope.defaultGraphConfig;\n        }\n\n        $location.url(\"?saved=\" + graphToLoad.id);\n        graph.restoreState(JSON.parse(graphToLoad.data));\n        if (!noHistory) {\n            $scope.pushHistory({saved: graphToLoad.id}, {savedGraph: graphToLoad});\n        }\n    };\n\n    $scope.copyToClipboardSavedGraph = function (savedGraph) {\n        const url = [location.protocol, '//', location.host, location.pathname, '?saved=', savedGraph.id].join('');\n        copyToClipboard(url);\n    };\n\n    function deleteSavedGraphHttp(savedGraph) {\n        SavedGraphsRestService.deleteSavedGraph(savedGraph)\n            .success(function () {\n                $scope.refreshSavedGraphs();\n                toastr.success($translate.instant('graphexplore.saved.graph.was.deleted', {name: savedGraph.name}));\n            })\n            .error(function (data) {\n                const msg = getError(data);\n                toastr.error(msg, $translate.instant('graphexplore.error.cannot.delete'));\n            });\n    }\n\n    $scope.deleteSavedGraph = function (savedGraph) {\n        ModalService.openSimpleModal({\n            title: $translate.instant('common.confirm'),\n            message: $translate.instant('graphexplore.confirm.delete.graph', {graphName: savedGraph.name}),\n            warning: true\n        }).result\n            .then(function () {\n                deleteSavedGraphHttp(savedGraph);\n            });\n    };\n\n    $scope.openIRI = function (link, event) {\n        if (event.shiftKey) {\n            $scope.$broadcast(\"onRootNodeChange\", link);\n        } else {\n            window.open(link, '_blank');\n        }\n        return false;\n    };\n\n    $scope.togglePinAllNodes = function () {\n        removeMenuIfVisible();\n\n        const value = $scope.numberOfPinnedNodes <= 0;\n\n        $scope.numberOfPinnedNodes = 0;\n        d3.selectAll('.node').each(function (d) {\n            d.fixed = value;\n            if (value) {\n                $scope.numberOfPinnedNodes++;\n            }\n        });\n\n        force.resume();\n    };\n\n    // event for capturing left and right arrows used for rotation\n    $('body').on(\"keydown\", function (event) {\n\n        if (GuidesService.isActive() || event.target.nodeName === 'input' || !$scope.nodeSelected) {\n            // don't do anything when the target is an input field or no node is selected or a guide is active.\n            return;\n        }\n\n       if (event.keyCode === 37) {\n            // left arrow rotates left\n            $scope.rotate(true);\n        } else if (event.keyCode === 39) {\n            // right arrow rotates right\n            $scope.rotate(false);\n        }\n    });\n\n    $scope.getLiteralFromPropValue = function (value) {\n        return value.substring(value.indexOf(':') + 1);\n    }\n}\n\nSaveGraphModalCtrl.$inject = ['$scope', '$modalInstance', 'data', '$translate'];\n\nfunction SaveGraphModalCtrl($scope, $modalInstance, data, $translate) {\n    $scope.mode = data.mode;\n    $scope.graph = angular.copy(data.graph);\n    $scope.graphExists = data.graphExists;\n\n    switch ($scope.mode) {\n        case 'new':\n            $scope.title = $translate.instant('graphexplore.create.new.graph');\n            $scope.okButtonText = $translate.instant('common.create.btn');\n            break;\n        case 'update':\n            $scope.title = $translate.instant('graphexplore.update');\n            $scope.okButtonText = $translate.instant('common.save.btn');\n            break;\n        case 'rename':\n            $scope.title = $translate.instant('graphexplore.rename');\n            $scope.okButtonText = $translate.instant('common.save.btn');\n    }\n\n    $scope.ok = function () {\n        if ($scope.form.$valid) {\n            $modalInstance.close({graph: $scope.graph, mode: $scope.mode});\n        }\n    };\n\n    $scope.saveNew = function () {\n        $scope.graph.name = $scope.graph.name + ' (new)';\n        $modalInstance.close({graph: $scope.graph, mode: 'new', restart: true});\n    };\n\n    $scope.cancel = function () {\n        $modalInstance.dismiss('cancel');\n    };\n}\n"],"sourceRoot":""}