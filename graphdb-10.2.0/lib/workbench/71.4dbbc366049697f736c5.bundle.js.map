{"version":3,"sources":["webpack:///./src/js/angular/graphexplore/controllers/dependencies-chord.controller.js"],"names":["allGraphs","contextID","type","value","uri","humanize","number","exp","Math","floor","log","result","pow","toFixed","DependenciesChordCtrl","$scope","$rootScope","$repositories","toastr","$timeout","GraphDataRestService","UiScrollService","ModalService","LocalStorageAdapter","RDF4JRepositoriesRestService","$translate","timer","status","getActiveRepository","STATUS","selectedGraph","initView","resolveGraphs","success","graphsInRepo","results","bindings","length","slice","setSelectedGraphFromCache","isSystemRepository","getRelationshipsStatus","error","data","repositoryError","getError","instant","selGraphFromCache","get","some","graph","set","getRelationshipsData","selectedClasses","d3","select","html","direction","matrixData","dependenciesData","matrix","right","nodes","left","hasLinks","_","sum","map","arr","force","cancel","getRelationshipsClasses","classesData","allClasses","items","filter","classFilterFunc","allNotFilteredClasses","undefined","angular","isUndefined","warning","indexOf","substring","datasource","position","current","c","name","toLowerCase","classQuery","query","key","index","count","initLazyList","$watch","each","item","revision","adapterContainer","adapter","remain","reload","isActiveRepoFedXType","$on","isLoading","confirmCalculateDependencies","openSimpleModal","title","message","then","calculateDependencies","calculateRelationships","addClass","clazz","push","removeClass","remove","showClass","classToShow","isClassByNameShown","find","addClassByName","removeClassByName","removeAllClasses","repoIsSetListener","window","addEventListener","removeRepoIsSetListener","removeEventListener","selectGraph","getSelectedGraphValue","isAllGraphsSelected","Object","defineProperty","global","module","controller","config","$tooltipProvider","options","appendToBody","$inject"],"mappings":"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","file":"71.4dbbc366049697f736c5.bundle.js","sourcesContent":["const STATUS = {\n    'WAIT': 'WAIT',\n    'NO_REPO': 'NO_REPO',\n    'READY': 'READY',\n    'IN_PROGRESS': 'IN_PROGRESS',\n    'ERROR': 'ERROR'\n};\n\nconst modules = [\n    'ui.scroll.jqlite',\n    'ui.scroll',\n    'toastr',\n    'ui.bootstrap',\n    'graphdb.framework.core.services.repositories',\n    'graphdb.framework.utils.localstorageadapter'\n];\nconst allGraphs = {\n    contextID: {\n        type: \"all\",\n        value: \"all.graphs.label\",\n        uri: \"\"\n    }\n};\nObject.defineProperty(global, 'allGraphs', {\n    get: () => {return allGraphs;}\n});\n\nangular\n    .module('graphdb.framework.graphexplore.controllers.dependencies', modules)\n    .controller('DependenciesChordCtrl', DependenciesChordCtrl)\n    .config(['$tooltipProvider', function ($tooltipProvider) {\n        $tooltipProvider.options({appendToBody: true});\n    }])\n    .filter('humanize', function () {\n        return humanize;\n    });\n\nfunction humanize(number) {\n    if (number < 1000) {\n        return number;\n    }\n    const si = ['K', 'M', 'G', 'T', 'P', 'H'];\n    const exp = Math.floor(Math.log(number) / Math.log(1000));\n    let result = number / Math.pow(1000, exp);\n    result = (result % 1 > (1 / Math.pow(1000, exp - 1))) ? result.toFixed(2) : result.toFixed(0);\n    return result + si[exp - 1];\n}\n\nDependenciesChordCtrl.$inject = ['$scope', '$rootScope', '$repositories', 'toastr', '$timeout', 'GraphDataRestService', 'UiScrollService', 'ModalService', 'LocalStorageAdapter', 'RDF4JRepositoriesRestService', '$translate'];\n\nfunction DependenciesChordCtrl($scope, $rootScope, $repositories, toastr, $timeout, GraphDataRestService, UiScrollService, ModalService, LocalStorageAdapter, RDF4JRepositoriesRestService, $translate) {\n\n    let timer = null;\n\n    $scope.status = !$repositories.getActiveRepository() ? STATUS.NO_REPO : STATUS.WAIT;\n\n    //allGraphs is used to include all graphs in the chosen repository and represent the Class Relationships diagram and table,\n    // while graphsInRepo is sliced to 1000 if there are more than 1000 graphs in the repository, and they are present\n    // in the drop-down menu otherwise browsers crash.\n    let selectedGraph = allGraphs;\n\n    const initView = function () {\n        RDF4JRepositoriesRestService.resolveGraphs()\n            .success(function (graphsInRepo) {\n                $scope.graphsInRepo = graphsInRepo.results.bindings.length > 1002 ? graphsInRepo.results.bindings.slice(0, 1002) : graphsInRepo.results.bindings;\n                setSelectedGraphFromCache();\n                if (!$scope.isSystemRepository()) {\n                    $scope.status = 'WAIT';\n                    getRelationshipsStatus(true);\n                } else if ($scope.status !== \"READY\") {\n                    getRelationshipsStatus();\n                }\n            }).error(function (data) {\n            $scope.repositoryError = getError(data);\n            toastr.error(getError(data), $translate.instant('graphexplore.error.getting.graph'));\n        });\n    };\n\n    const setSelectedGraphFromCache = function () {\n        const selGraphFromCache = LocalStorageAdapter.get(`dependencies-selectedGraph-${$repositories.getActiveRepository()}`);\n        if (selGraphFromCache !== null && $scope.graphsInRepo.some(graph => graph.contextID.uri === selGraphFromCache.contextID.uri)) {\n            selectedGraph = selGraphFromCache;\n        } else {\n            LocalStorageAdapter.set(`dependencies-selectedGraph-${$repositories.getActiveRepository()}`, selectedGraph);\n        }\n    };\n\n    const getRelationshipsData = function (selectedClasses) {\n        d3.select('#dependencies-chord').html('');\n\n        $scope.status = STATUS.WAIT;\n\n        GraphDataRestService.getRelationshipsData(selectedClasses, $scope.direction, selectedGraph.contextID.uri)\n            .success(function (matrixData) {\n                // Check classes empty\n                $scope.dependenciesData = {\n                    matrix: matrixData.right,\n                    nodes: matrixData.left,\n                    hasLinks: _.sum(_.map(matrixData.right, function (arr) {\n                        return _.sum(arr);\n                    })) > 0,\n                    direction: $scope.direction\n                };\n                $scope.status = STATUS.READY;\n            }).error(function (data) {\n            $scope.status = STATUS.READY;\n            toastr.error(getError(data), $translate.instant('graphexplore.error.dependencies.count'));\n        });\n    };\n\n    const getRelationshipsClasses = function () {\n        GraphDataRestService.getRelationshipsClasses($scope.direction, selectedGraph.contextID.uri)\n            .success(function (classesData, status) {\n                $scope.allClasses.items = _.filter(classesData, classFilterFunc);\n                $scope.allNotFilteredClasses = classesData;\n                $scope.selectedClasses = undefined;\n                if (angular.isUndefined($scope.selectedClasses)) {\n                    $scope.selectedClasses = classesData.slice(0, 10);\n                }\n                getRelationshipsData($scope.selectedClasses);\n                if (status === 207) {\n                    toastr.warning($translate.instant('graphexplore.update.diagram'), $translate.instant('graphexplore.repository.data.changed'));\n                }\n            });\n    };\n\n    const getRelationshipsStatus = function (force) {\n        if ($scope.status === STATUS.READY && !force) {\n            return;\n        }\n        $scope.status = STATUS.WAIT;\n        GraphDataRestService.getRelationshipsStatus(selectedGraph.contextID.uri)\n            .success(function (data) {\n                $scope.status = data;\n                if ($scope.status === STATUS.IN_PROGRESS) {\n                    if (timer !== null) {\n                        return;\n                    } else {\n                        timer = $timeout(getRelationshipsStatus, 2000);\n                    }\n                }\n                if ($scope.status === STATUS.READY) {\n                    if (timer !== null) {\n                        $timeout.cancel(timer);\n                        timer = null;\n                    }\n                    getRelationshipsClasses();\n                }\n                if ($scope.status.indexOf('ERROR;') === 0) {\n                    $scope.status = STATUS.ERROR;\n                    toastr.error($translate.instant('graphexplore.error.dependencies.calc', {error:$scope.status.substring('ERROR;'.length)}));\n                }\n            })\n            .error(function (data) {\n                $scope.status = STATUS.ERROR;\n                toastr.error(getError(data), $translate.instant('graphexplore.error.dependencies.count.status'));\n            });\n    };\n\n    $scope.allClasses = {};\n    $scope.allClasses.items = [];\n    $scope.allNotFilteredClasses = [];\n    $scope.direction = 'all';\n\n    const datasource = {};\n    let position = 0;\n    let current = 0;\n    $rootScope.key = '';\n\n    datasource.get = function (index, count, success) {\n        return UiScrollService.initLazyList(index, count, success, position, $scope.allClasses.items);\n    };\n\n    $rootScope.$watch(function () {\n        return $rootScope.key;\n    }, function () {\n        position = 0;\n        _.each($scope.allClasses.items, function (item) {\n            if ($rootScope.key > item) position++;\n        });\n        current++;\n    });\n\n    datasource.revision = function () {\n        return current;\n    };\n\n    $scope.datasource = datasource;\n\n    // adapter implementation for ui-scroll directive\n    // reload\n    $scope.adapterContainer = {adapter: {remain: true}};\n\n    $scope.classQuery = {};\n    $scope.classQuery.query = '';\n    $scope.classFilterFunc = classFilterFunc;\n\n    function classFilterFunc(c) {\n        return c.name\n            .toLowerCase()\n            .indexOf($scope.classQuery.query.toLowerCase()) !== -1;\n    }\n\n    $scope.$watch('allClasses.items', function () {\n        if ($scope.allClasses.items.length > 0) {\n            $timeout(function () {\n                $scope.adapterContainer.adapter.reload();\n            }, 30);\n        }\n    });\n\n    $scope.$watch('direction', function () {\n        if (!$repositories.getActiveRepository() ||\n                $scope.isSystemRepository() || $repositories.isActiveRepoFedXType()) {\n            return;\n        }\n        initView();\n    });\n\n    $scope.$on('$destroy', function () {\n        $timeout.cancel(timer);\n    });\n\n    $scope.isLoading = function () {\n        return $scope.status === STATUS.IN_PROGRESS || $scope.status === STATUS.WAIT;\n    };\n\n    $scope.confirmCalculateDependencies = function () {\n        ModalService.openSimpleModal({\n            title: $translate.instant('confirm.operation'),\n            message: $translate.instant('graphexplore.calculating.relationships'),\n            warning: true\n        }).result\n            .then(function () {\n                $scope.calculateDependencies();\n            });\n    };\n\n    $scope.calculateDependencies = function () {\n        $scope.status = STATUS.WAIT;\n        $scope.selectedClasses = undefined;\n        GraphDataRestService.calculateRelationships(selectedGraph.contextID.uri)\n            .success(function (data) {\n                if (data.indexOf('ERROR;') === 0) {\n                    toastr.error($translate.instant('graphexplore.error.dependencies.calc', {error:$scope.status.substring('ERROR;'.length)}));\n                } else {\n                    getRelationshipsStatus();\n                }\n            })\n            .error(function (data) {\n                toastr.error($translate.instant('graphexplore.error.could.not.force.count', {error: getError(data)}));\n            });\n    };\n\n    $scope.addClass = function (clazz) {\n        $scope.selectedClasses.push(clazz);\n        getRelationshipsData($scope.selectedClasses);\n    };\n\n    $scope.removeClass = function (clazz) {\n        _.remove($scope.selectedClasses, function (c) {\n            return c.name === clazz.name;\n        });\n        getRelationshipsData($scope.selectedClasses);\n    };\n\n    $scope.showClass = function (clazz) {\n        $scope.classToShow = clazz;\n    };\n\n    $scope.isClassByNameShown = function (name) {\n        return _.find($scope.selectedClasses, {name: name}) !== undefined;\n    };\n\n    $scope.addClassByName = function (name) {\n        $scope.selectedClasses.push(_.find($scope.allClasses.items, {name: name}));\n        getRelationshipsData($scope.selectedClasses);\n    };\n\n    $scope.removeClassByName = function (name) {\n        _.remove($scope.selectedClasses, function (c) {\n            return c.name === name;\n        });\n        getRelationshipsData($scope.selectedClasses);\n    };\n\n\n    $scope.removeAllClasses = function () {\n        $scope.selectedClasses = [];\n        getRelationshipsData($scope.selectedClasses);\n    };\n\n    $scope.isSystemRepository = function () {\n        return $repositories.getActiveRepository() === 'SYSTEM';\n    };\n\n    function onRepositoryIsSet() {\n        // clear class search on changing the repository\n        $scope.classQuery = {};\n        $scope.classQuery.query = '';\n        $scope.repositoryError = null;\n        selectedGraph = allGraphs;\n        if (!$repositories.getActiveRepository() || $repositories.isActiveRepoFedXType()) {\n            $scope.status = STATUS.NO_REPO;\n            return;\n        }\n        initView();\n    }\n\n    const repoIsSetListener = $scope.$on('repositoryIsSet', onRepositoryIsSet);\n\n    window.addEventListener('beforeunload', removeRepoIsSetListener);\n\n    function removeRepoIsSetListener() {\n        repoIsSetListener();\n        window.removeEventListener('beforeunload', removeRepoIsSetListener);\n    }\n\n    $scope.selectGraph = function (graph) {\n        selectedGraph = graph;\n        getRelationshipsStatus(true);\n        LocalStorageAdapter.set(`dependencies-selectedGraph-${$repositories.getActiveRepository()}`, selectedGraph);\n    };\n\n    $scope.getSelectedGraphValue = function () {\n        return selectedGraph.contextID.value;\n    };\n\n    $scope.isAllGraphsSelected = function () {\n        return $scope.getSelectedGraphValue() === 'all.graphs.label';\n    };\n}\n"],"sourceRoot":""}