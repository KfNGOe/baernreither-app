{"version":3,"sources":["webpack:///./src/js/angular/rest/cluster.rest.service.js"],"names":["angular","module","factory","ClusterRestService","$inject","$http","getClusterConfig","get","createCluster","groupConfiguration","post","updateCluster","nodes","patch","deleteCluster","forceDelete","data","$","param","force","delete","addNodesToCluster","nodesArray","removeNodesFromCluster","headers","getClusterStatus","getNodeStatus"],"mappings":"4EAAAA,QACKC,OAAO,yCAA0C,IACjDC,QAAQ,qBAAsBC,GAEnCA,EAAmBC,QAAU,CAAC,SAI9B,SAASD,EAAmBE,GACxB,MAAO,CACHC,iBAUJ,WACI,OAAOD,EAAME,IAAI,wBAVjBC,cAaJ,SAAuBC,GACnB,OAAOJ,EAAMK,KAAK,sBAAoCD,IAbtDE,cAgBJ,SAAuBF,GACfA,EAAmBG,cACZH,EAAmBG,MAE9B,OAAOP,EAAMQ,MAAM,sBAAoCJ,IAnBvDK,cAsBJ,SAAuBC,GACnB,MAAMC,EAAOC,EAAEC,MAAM,CACjBC,MAAOJ,IAEX,OAAOV,EAAMe,OAAO,uBAAoCJ,IAzBxDK,kBA4BJ,SAA2BC,GACvB,OAAOjB,EAAMK,KAAK,2BAAyC,CAACE,MAAOU,KA5BnEC,uBA+BJ,SAAgCD,GAC5B,OAAOjB,EAAMe,OAAO,2BAAyC,CAACJ,KAAM,CAACJ,MAAOU,GAAaE,QAAS,CAAC,eAAgB,uBA/BnHC,iBAkCJ,WACI,OAAOpB,EAAME,IAAI,8BAlCjBmB,cAqCJ,WACI,OAAOrB,EAAME,IAAI","file":"113.132bfd3250f2871bec21.bundle.js","sourcesContent":["angular\n    .module('graphdb.framework.rest.cluster.service', [])\n    .factory('ClusterRestService', ClusterRestService);\n\nClusterRestService.$inject = ['$http'];\n\nconst CLUSTER_GROUP_ENDPOINT = 'rest/cluster';\n\nfunction ClusterRestService($http) {\n    return {\n        getClusterConfig,\n        createCluster,\n        updateCluster,\n        deleteCluster,\n        addNodesToCluster,\n        removeNodesFromCluster,\n        getClusterStatus,\n        getNodeStatus\n    };\n\n    function getClusterConfig() {\n        return $http.get(`${CLUSTER_GROUP_ENDPOINT}/config`);\n    }\n\n    function createCluster(groupConfiguration) {\n        return $http.post(`${CLUSTER_GROUP_ENDPOINT}/config`, groupConfiguration);\n    }\n\n    function updateCluster(groupConfiguration) {\n        if (groupConfiguration.nodes) {\n            delete groupConfiguration.nodes;\n        }\n        return $http.patch(`${CLUSTER_GROUP_ENDPOINT}/config`, groupConfiguration);\n    }\n\n    function deleteCluster(forceDelete) {\n        const data = $.param({\n            force: forceDelete\n        });\n        return $http.delete(`${CLUSTER_GROUP_ENDPOINT}/config?${data}`);\n    }\n\n    function addNodesToCluster(nodesArray) {\n        return $http.post(`${CLUSTER_GROUP_ENDPOINT}/config/node`, {nodes: nodesArray});\n    }\n\n    function removeNodesFromCluster(nodesArray) {\n        return $http.delete(`${CLUSTER_GROUP_ENDPOINT}/config/node`, {data: {nodes: nodesArray}, headers: {'Content-Type': 'application/json'}});\n    }\n\n    function getClusterStatus() {\n        return $http.get(`${CLUSTER_GROUP_ENDPOINT}/group/status`);\n    }\n\n    function getNodeStatus() {\n        return $http.get(`${CLUSTER_GROUP_ENDPOINT}/node/status`);\n    }\n}\n"],"sourceRoot":""}