{"version":3,"sources":["webpack:///./src/js/angular/core/directives/paginations.js","webpack:///./src/js/angular/guides/controllers.js"],"names":["angular","module","directive","template","GuidesCtrl","$scope","$rootScope","GuidesService","$filter","$translate","$interpolate","guides","pageSizeOptions","page","pageSize","translationSubscription","undefined","init","getGuides","then","forEach","guide","translatedGuideName","translateLocalMessage","guideName","translatedGuideDescription","guideDescription","guideLevel","guideLevelLabel","matchedElements","changePagination","startGuide","this","$on","isDefined","displayedGuides","slice","changePageSize","size","controller","$inject"],"mappings":"8EAAAA,QAAQC,OAAO,gDAAiD,IAC3DC,UAAU,eAAe,WACtB,MAAO,CACHC,SAAU,iP,gCCHtB,8BAgBA,SAASC,EAAWC,EAAQC,EAAYC,EAAeC,EAASC,EAAYC,GAExEL,EAAOM,OAAS,GAChBN,EAAOO,gBAAkB,CAAC,GAAI,GAAI,GAAI,KACtCP,EAAOQ,KAAO,EACdR,EAAOS,SAAWT,EAAOO,gBAAgB,GACzCP,EAAOU,6BAA0BC,EAEjCX,EAAOY,KAAO,WACVV,EAAcW,YACTC,KAAKR,IACFN,EAAOM,OAASH,EAAQ,UAARA,CAAmBG,EAAQ,cAC3CN,EAAOM,OAAOS,QAAQC,IAGlB,OAFAA,EAAMC,oBAAsB,aAAWC,sBAAsBd,EAAYC,EAAcW,EAAMG,WAC7FH,EAAMI,2BAA6B,aAAWF,sBAAsBd,EAAYC,EAAcW,EAAMK,kBAC5FL,EAAMM,YACV,UAAKX,EACL,KAAK,EACDK,EAAMO,gBAAkB,6BACxB,MACJ,KAAK,EACDP,EAAMO,gBAAkB,iCACxB,MACJ,QACIP,EAAMO,gBAAkB,gCAGpCvB,EAAOwB,gBAAkBxB,EAAOM,OAChCN,EAAOyB,sBAInBzB,EAAO0B,WAAa,SAAUV,GAC1Bd,EAAcwB,WAAWV,IAGxBW,KAAKjB,0BACNiB,KAAKjB,wBAA0BT,EAAW2B,IAAI,0BAA2B,KACrE5B,EAAOY,UAIfZ,EAAOyB,iBAAmB,WAClB9B,QAAQkC,UAAU7B,EAAOM,UACzBN,EAAO8B,gBAAkB9B,EAAOM,OAAOyB,MAAM/B,EAAOS,UAAYT,EAAOQ,KAAO,GAAIR,EAAOS,SAAWT,EAAOQ,QAInHR,EAAOgC,eAAiB,SAAUC,GAC9BjC,EAAOQ,KAAO,EAEVR,EAAOS,SADPwB,GAGkBjC,EAAOO,gBAAgB,GAE7CP,EAAOyB,oBAGXzB,EAAOY,OAhEXjB,QACKC,OAAO,uCAPI,CACZ,eACA,oCACA,kDAKCsC,WAAW,aAAcnC,GAE9BA,EAAWoC,QAAU,CAAC,SAAU,aAAc,gBAAiB,UAAW,aAAc","file":"36.8d7becdfce12d9a0de33.bundle.js","sourcesContent":["angular.module('graphdb.framework.core.directives.paginations', [])\n    .directive('paginations', function () {\n        return {\n            template: '<pagination class=\"nav navbar-right\" total-items=\"matchedElements.length\" items-per-page=\"pageSize\" ng-model=\"page\" ng-change=\"changePagination()\" direction-links=\"false\" boundary-links=\"true\" max-size=\"5\" rotate=\"true\"></pagination>',\n        };\n    });\n","import 'angular/guides/guides.service';\nimport 'angular/core/directives/paginations';\nimport {GuideUtils} from \"./guide-utils\";\n\nconst modules = [\n    'ui.bootstrap',\n    'graphdb.framework.guides.services',\n    'graphdb.framework.core.directives.paginations'\n];\n\nangular\n    .module('graphdb.framework.guides.controllers', modules)\n    .controller('GuidesCtrl', GuidesCtrl);\n\nGuidesCtrl.$inject = ['$scope', '$rootScope', 'GuidesService', '$filter', '$translate', '$interpolate'];\n\nfunction GuidesCtrl($scope, $rootScope, GuidesService, $filter, $translate, $interpolate) {\n\n    $scope.guides = [];\n    $scope.pageSizeOptions = [10, 20, 50, 100];\n    $scope.page = 1;\n    $scope.pageSize = $scope.pageSizeOptions[0];\n    $scope.translationSubscription = undefined;\n\n    $scope.init = function () {\n        GuidesService.getGuides()\n            .then(guides => {\n                $scope.guides = $filter('orderBy')(guides, 'guideOrder');\n                $scope.guides.forEach(guide => {\n                    guide.translatedGuideName = GuideUtils.translateLocalMessage($translate, $interpolate, guide.guideName);\n                    guide.translatedGuideDescription = GuideUtils.translateLocalMessage($translate, $interpolate, guide.guideDescription);\n                    switch (guide.guideLevel) {\n                        case undefined:\n                        case 0:\n                            guide.guideLevelLabel = 'view.guides.level.beginner';\n                            break;\n                        case 1:\n                            guide.guideLevelLabel = 'view.guides.level.intermediate';\n                            break;\n                        default: // 2 and above\n                            guide.guideLevelLabel = 'view.guides.level.advanced';\n                    }\n                });\n                $scope.matchedElements = $scope.guides;\n                $scope.changePagination();\n            });\n    };\n\n    $scope.startGuide = function (guide) {\n        GuidesService.startGuide(guide);\n    };\n\n    if (!this.translationSubscription) {\n        this.translationSubscription = $rootScope.$on('$translateChangeSuccess', () => {\n            $scope.init();\n        });\n    }\n\n    $scope.changePagination = function () {\n        if (angular.isDefined($scope.guides)) {\n            $scope.displayedGuides = $scope.guides.slice($scope.pageSize * ($scope.page - 1), $scope.pageSize * $scope.page);\n        }\n    };\n\n    $scope.changePageSize = function (size) {\n        $scope.page = 1;\n        if (size) {\n            $scope.pageSize = size;\n        } else {\n            $scope.pageSize = $scope.pageSizeOptions[0];\n        }\n        $scope.changePagination();\n    };\n\n    $scope.init();\n}\n"],"sourceRoot":""}