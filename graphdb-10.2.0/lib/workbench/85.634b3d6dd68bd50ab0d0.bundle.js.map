{"version":3,"sources":["webpack:///./src/js/angular/guides/steps/complex/enable-autocomplete/plugin.js"],"names":["PluginRegistry","add","guideBlockName","getSteps","options","services","GuideUtils","mainAction","autocompleteCheckboxSelector","getGuideElementSelector","angular","extend","menu","showIntro","content","url","elementSelector","advanceOn","undefined","show","guide","$","on","deferredShow","then","isGuideElementChecked","next","onNextClick","trigger","hide","off","canBePaused"],"mappings":"4EAAAA,eAAeC,IAAI,aAAc,CAC7B,CACIC,eAAgB,sBAChBC,SAAU,CAACC,EAASC,KAChB,MAAMC,EAAaD,EAASC,WAC5BF,EAAQG,WAAa,sBAErB,MAAMC,EAA+BF,EAAWG,wBAAwB,wBACxE,MAAO,CACH,CACIP,eAAgB,kBAChBE,QAASM,QAAQC,OAAO,GAAI,CACxBC,KAAM,eACNC,WAAW,GACZT,IACJ,CACCF,eAAgB,oBAChBE,QAASM,QAAQC,OAAO,GAAI,CACxBG,QAAS,gDACTC,IAAK,gBACLC,gBAAiBR,EAEjBS,eAAWC,EACXC,KAAOC,GAAU,KAEbC,EAAEb,GACGc,GAAG,qCAAqC,WAErChB,EAAWiB,aAAa,GAAxBjB,GACKkB,KAAK,KACElB,EAAWmB,sBAAsB,uBAAwB,WACzDL,EAAMM,aAK9BC,YAAcP,IACLd,EAAWmB,sBAAsB,uBAAwB,WAC1DJ,EAAEb,GAA8BoB,QAAQ,SAE5CR,EAAMM,QAEVG,KAAM,IAAM,KAERR,EAAEb,GAA8BsB,IAAI,uCAEzC1B,IAEP,CACIF,eAAgB,oBAChBE,QAASM,QAAQC,OAAO,GAAI,CACxBG,QAAS,4DACTC,IAAK,gBACLC,gBAAiBV,EAAWG,wBAAwB,sBACpDsB,aAAa,GACd3B","file":"85.634b3d6dd68bd50ab0d0.bundle.js","sourcesContent":["PluginRegistry.add('guide.step', [\n    {\n        guideBlockName: 'enable-autocomplete',\n        getSteps: (options, services) => {\n            const GuideUtils = services.GuideUtils;\n            options.mainAction = 'enable-autocomplete';\n\n            const autocompleteCheckboxSelector = GuideUtils.getGuideElementSelector('autocompleteCheckbox');\n            return [\n                {\n                    guideBlockName: 'click-main-menu',\n                    options: angular.extend({}, {\n                        menu: 'autocomplete',\n                        showIntro: true\n                    }, options)\n                }, {\n                    guideBlockName: 'clickable-element',\n                    options: angular.extend({}, {\n                        content: 'guide.step_plugin.enable-autocomplete.content',\n                        url: '/autocomplete',\n                        elementSelector: autocompleteCheckboxSelector,\n                        // Disable default behavior of service when element is clicked.\n                        advanceOn: undefined,\n                        show: (guide) => () => {\n                            // Added listener to the element.\n                            $(autocompleteCheckboxSelector)\n                                .on('mouseup.autocompleteCheckboxClick', function () {\n                                    // If autocomplete is enabled go to the next step.\n                                    GuideUtils.deferredShow(20)()\n                                        .then(() => {\n                                            if (GuideUtils.isGuideElementChecked('autocompleteCheckbox', ' input')) {\n                                                guide.next();\n                                            }\n                                        });\n                                });\n                        },\n                        onNextClick: (guide) => {\n                            if (!GuideUtils.isGuideElementChecked('autocompleteCheckbox', ' input')) {\n                                $(autocompleteCheckboxSelector).trigger('click');\n                            }\n                            guide.next();\n                        },\n                        hide: () => () => {\n                            // Remove ths listener from element. It is important when step is hided.\n                            $(autocompleteCheckboxSelector).off('mouseup.autocompleteCheckboxClick');\n                        }\n                    }, options)\n                },\n                {\n                    guideBlockName: 'read-only-element',\n                    options: angular.extend({}, {\n                        content: 'guide.step_plugin.enable-autocomplete.status_info.content',\n                        url: '/autocomplete',\n                        elementSelector: GuideUtils.getGuideElementSelector('autocompleteStatus'),\n                        canBePaused: false\n                    }, options)\n                }\n            ];\n        }\n    }\n]);\n"],"sourceRoot":""}