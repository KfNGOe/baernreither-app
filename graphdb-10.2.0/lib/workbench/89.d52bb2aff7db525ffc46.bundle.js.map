{"version":3,"sources":["webpack:///./src/js/angular/guides/steps/complex/select-repository/plugin.js"],"names":["getRepositoryName","services","options","$repositories","getRepositories","find","repo","id","repositoryId","repositoryIdBase","getRepositoryElementSelector","GuideUtils","getGuideElementSelector","PluginRegistry","add","guideBlockName","getSteps","mainAction","getRepositoryId","angular","extend","skipPoint","content","elementSelector","onNextClick","guide","clickOnGuideElement","then","next","advanceOn","undefined","beforeShowPromise","Promise","resolve","reject","waitFor","catch","error","toastr","$translate","instant","show","$","addClass","on","off","removeClass","clickOnElement","hide","canBePaused"],"mappings":"4EAAA,MAAMA,EAAoB,CAACC,EAAUC,IAC1BD,EAASE,cAAcC,kBAAkBC,KAAMC,GAASA,EAAKC,KAAOL,EAAQM,cAAgBN,EAAQM,aAAeN,EAAQO,iBAGhIC,EAA+B,CAACT,EAAUC,IACrCD,EAASU,WAAWC,wBAAwB,cAAcZ,EAAkBC,EAAUC,aAGjGW,eAAeC,IAAI,aAAc,CAC7B,CACIC,eAAgB,6BAChBC,SAAU,CAACd,EAASD,KAChB,MAAMU,EAAaV,EAASU,WAI5B,OAHAT,EAAQe,WAAa,oBACrBf,EAAQgB,gBAAkB,IAAMlB,EAAkBC,EAAUC,GAErD,CAAC,CACJa,eAAgB,oBAChBb,QAASiB,QAAQC,OAAO,GAAI,CACxBC,WAAW,EACXC,QAAS,8CACTC,gBAAiBZ,EAAWC,wBAAwB,2BACpDY,YAAcC,GAAUd,EAAWe,oBAAoB,0BAA/Bf,GAA4DgB,KAAK,IAAMF,EAAMG,SACtG1B,IACJ,CACCa,eAAgB,oBAChBb,QAASiB,QAAQC,OAAO,GAAI,CACxBE,QAAS,8CACTC,gBAAiB,IACNb,EAA6BT,EAAUC,GAElD2B,eAAWC,EACXC,kBAAmB,IAAM,IAAIC,SAAQ,SAAUC,EAASC,GACpDjC,EAASU,WAAWwB,QAAQzB,EAA6BT,EAAUC,GAAU,GACxEyB,KAAK,IAAMM,KACXG,MAAOC,IACJpC,EAASqC,OAAOD,MAAMpC,EAASsC,WAAWC,QAAQ,mCAClDN,EAAOG,QAGnBI,KAAOhB,GAAU,KACbiB,EAAE,6BAA6BC,SAAS,gBAExCD,EAAEhC,EAA6BT,EAAUC,IACpC0C,GAAG,uCAAuC,WACvCnB,EAAMG,WAGlBJ,YAAcC,IACViB,EAAEhC,EAA6BT,EAAUC,IAAU2C,IAAI,uCACvDH,EAAE,6BAA6BI,YAAY,gBAC3CnC,EAAWoC,eAAerC,EAA6BT,EAAUC,GAAjES,GAA6EgB,KAAK,IAAMF,EAAMG,SAElGoB,KAAM,IAAM,KACRN,EAAE,6BAA6BI,YAAY,gBAE3CJ,EAAEhC,EAA6BT,EAAUC,IAAU2C,IAAI,wCAE3DI,aAAa,GACd/C,OAKf,CACIa,eAAgB,yBAChBC,SAAU,CAACd,EAASD,KAChB,MAAMU,EAAaV,EAASU,WAC5B,MAAO,CAAC,CACJI,eAAgB,oBAChBb,QAASiB,QAAQC,OAAO,GAAI,CACxBE,QAAS,mDACTC,gBAAiBZ,EAAWC,wBAAwB,cAAcV,EAAQM,qBAC1EgB,YAAab,EAAWC,wBAAwB,cAAcV,EAAQM,sBACvEN","file":"89.d52bb2aff7db525ffc46.bundle.js","sourcesContent":["const getRepositoryName = (services, options) => {\n    return services.$repositories.getRepositories().find((repo) => repo.id === options.repositoryId) ? options.repositoryId : options.repositoryIdBase;\n};\n\nconst getRepositoryElementSelector = (services, options) => {\n    return services.GuideUtils.getGuideElementSelector(`repository-${getRepositoryName(services, options)}-button`);\n};\n\nPluginRegistry.add('guide.step', [\n    {\n        guideBlockName: 'select-repository-dropdown',\n        getSteps: (options, services) => {\n            const GuideUtils = services.GuideUtils;\n            options.mainAction = 'select-repository';\n            options.getRepositoryId = () => getRepositoryName(services, options);\n\n            return [{\n                guideBlockName: 'clickable-element',\n                options: angular.extend({}, {\n                    skipPoint: true,\n                    content: 'guide.step_plugin.choose-repository.content',\n                    elementSelector: GuideUtils.getGuideElementSelector('repositoriesGroupButton'),\n                    onNextClick: (guide) => GuideUtils.clickOnGuideElement('repositoriesGroupButton')().then(() => guide.next())\n                }, options)\n            }, {\n                guideBlockName: 'clickable-element',\n                options: angular.extend({}, {\n                    content: 'guide.step_plugin.select-repository.content',\n                    elementSelector: () => {\n                        return getRepositoryElementSelector(services, options);\n                    },\n                    advanceOn: undefined,\n                    beforeShowPromise: () => new Promise(function (resolve, reject) {\n                        services.GuideUtils.waitFor(getRepositoryElementSelector(services, options), 1)\n                            .then(() => resolve())\n                            .catch((error) => {\n                                services.toastr.error(services.$translate.instant('guide.unexpected.error.message'));\n                                reject(error);\n                            });\n                    }),\n                    show: (guide) => () => {\n                        $('#repositorySelectDropdown').addClass('autoCloseOff');\n                        // Added listener to the element.\n                        $(getRepositoryElementSelector(services, options))\n                            .on('mouseup.selectRepositoryButtonClick', function () {\n                                guide.next();\n                            });\n                    },\n                    onNextClick: (guide) => {\n                        $(getRepositoryElementSelector(services, options)).off('mouseup.selectRepositoryButtonClick');\n                        $('#repositorySelectDropdown').removeClass('autoCloseOff');\n                        GuideUtils.clickOnElement(getRepositoryElementSelector(services, options))().then(() => guide.next());\n                    },\n                    hide: () => () => {\n                        $('#repositorySelectDropdown').removeClass('autoCloseOff');\n                        // Remove ths listener from element. It is important when step is hided.\n                        $(getRepositoryElementSelector(services, options)).off('mouseup.selectRepositoryButtonClick');\n                    },\n                    canBePaused: false\n                }, options)\n            }\n            ];\n        }\n    },\n    {\n        guideBlockName: 'select-repository-plug',\n        getSteps: (options, services) => {\n            const GuideUtils = services.GuideUtils;\n            return [{\n                guideBlockName: 'clickable-element',\n                options: angular.extend({}, {\n                    content: 'guide.step_plugin.select-repository-plug.content',\n                    elementSelector: GuideUtils.getGuideElementSelector(`repository-${options.repositoryId}-plug`),\n                    onNextClick: GuideUtils.getGuideElementSelector(`repository-${options.repositoryId}-plug`)\n                }, options)\n            }\n            ];\n        }\n    }\n]);\n"],"sourceRoot":""}