{"version":3,"sources":["webpack:///./src/js/angular/clustermanagement/app.js","webpack:///./src/js/lib/d3-tip/d3-tip-patch.js","webpack:///./src/js/angular/clustermanagement/cluster-drawing.service.js","webpack:///./src/js/angular/clustermanagement/directives.js"],"names":["angular","module","direction","offset","html","node","initNode","svg","point","target","customPosition","tip","vis","el","tagName","toLowerCase","ownerSVGElement","createSVGPoint","document","body","appendChild","show","args","Array","prototype","slice","call","arguments","length","SVGElement","pop","coords","content","apply","this","poffset","dir","nodel","getNodeEl","i","directions","scrollTop","documentElement","scrollLeft","customPos","style","opacity","classed","direction_callbacks","get","top","left","hide","attr","n","v","d3","selection","functor","destroy","remove","map","bbox","getScreenBBox","y","offsetHeight","x","offsetWidth","s","e","w","nw","ne","sw","se","keys","select","createElement","position","targetel","event","getScreenCTM","parentNode","matrix","tbbox","getBBox","width","height","matrixTransform","clusterColors","ontoOrange","ontoBlue","ontoGreen","ontoGrey","createClusterSvgElement","element","append","createClusterZone","parent","clusterZone","setCreateClusterZone","hasCluster","translationsMap","selectAll","textGroup","text","no_cluster_configured","create_cluster_btn","updateClusterZoneLabels","moveElement","createNodes","nodesDataBinding","nodeRadius","isLegend","nodeGroup","enter","radius","_s32","Math","sqrt","points","data","line","createHexagon","exit","nodeElements","nodeTextHost","addHostnameToNodes","updateNodes","nodes","getNodeIconType","updateNodesIcon","nodeState","LEADER","FOLLOWER","CANDIDATE","updateNodesClasses","each","d","labelNode","hostname","updateNodesHostnameText","NO_CONNECTION","OUT_OF_SYNC","READ_ONLY","RESTRICTED","createLinks","linksDataBinding","updateLinks","setLinkColor","setLinkStyle","link","source","find","address","deltaX","deltaY","dist","normX","normY","sourceX","sourceY","targetX","targetY","getLinkCoordinates","status","IN_SYNC","SYNCING","positionNodesOnClusterZone","clusterZoneX","clusterZoneY","clusterZoneRadius","index","theta","PI","cos","sin","navigationBarWidth","clusterManagementDirectives","legend_node_state","legend_link_state","node_state_leader","node_state_follower","node_state_candidate","node_state_no_cluster","node_state_out_of_sync","node_state_no_connection","node_state_read_only","node_state_restricted","link_state_in_sync","link_state_syncing","link_state_out_of_sync","idTranslationKeyMap","node_state","link_state","directive","$window","LocalStorageAdapter","LSKeys","UriUtils","$translate","$rootScope","restrict","scope","updateTranslations","Object","forEach","key","instant","getWindowWidth","collapsed","MENU_STATE","max","floor","innerWidth","getWindowHeight","innerHeight","legendNodesGroup","legendWidth","legendHeight","showLegend","$on","elementId","getLabelFor","createLegendGroup","createClusterLegend","updateLabels","legendTooltip","nodesGroup","linksGroup","tooltipElement","min","getBoundingClientRect","toolTip","showLegendTooltip","hideLegendTooltip","legendNodes","getLegendNodes","legendLinks","getLegendLinks","customText","linkTypeText","linkTypeKey","translateLegendLinksAndNodes","nodeStateLabel","legendPadding","linkStateLabel","nodeStateLabelY","legendNodeData","on","stopPropagation","row","id","linkWidth","endX","linkG","positionLegend","resizeClusterComponent","plot","clusterModel","mouseupCallback","$apply","showCreateClusterDialog","setClusterZoneType","_","cloneDeep","links","shortenIri","endpoint","nodeData","childContext","selectNode","tooltip","windowWidth","$","window","pageX","pageY","linksData","drawLinks","redraw","resize","toggleLegend","config","$tooltipProvider","options","appendToBody","push","NO_CLUSTER"],"mappings":"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","file":"23.b945d0565ded44df49c5.bundle.js","sourcesContent":["import 'angular/core/services';\nimport 'angular/core/directives';\nimport 'angular/clustermanagement/controllers';\nimport 'angular/clustermanagement/directives';\nimport 'angular/core/services/repositories.service';\nimport 'd3/build/d3';\nimport 'lib/d3-ONTO-chord-patch';\nimport 'angular-pageslide-directive/dist/angular-pageslide-directive';\n\nconst modules = [\n    'ngAnimate',\n    'toastr',\n    'graphdb.framework.clustermanagement.controllers',\n    'graphdb.framework.clustermanagement.directives'\n];\n\nconst clusterManagementApp = angular.module('graphdb.framework.clustermanagement', modules);\n","// d3.tip\n// Copyright (c) 2013 Justin Palmer\n//\n// Tooltips for d3.js SVG visualizations\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module with d3 as a dependency.\n        define([], factory)\n    } else if (typeof module === 'object' && module.exports) {\n        // CommonJS\n        module.exports = function(d3) {\n            d3.tip = factory(d3)\n            return d3.tip\n        }\n    } else {\n        // Browser global.\n        root.d3.tip = factory(root.d3)\n    }\n}(this, function () {\n    // Public - contructs a new tooltip\n    //\n    // Returns a tip\n    return function() {\n        var direction = d3_tip_direction,\n            offset    = d3_tip_offset,\n            html      = d3_tip_html,\n            node      = initNode(),\n            svg       = null,\n            point     = null,\n            target    = null,\n            customPosition = null\n\n        function tip(vis) {\n            svg = getSVGNode(vis)\n            point = svg.createSVGPoint()\n            document.body.appendChild(node)\n        }\n\n        // Public - show the tooltip on the screen\n        //\n        // Returns a tip\n        tip.show = function() {\n            var args = Array.prototype.slice.call(arguments)\n            if(args[args.length - 1] instanceof SVGElement) target = args.pop()\n\n            var content = html.apply(this, args),\n                poffset = offset.apply(this, args),\n                dir     = direction.apply(this, args),\n                nodel   = getNodeEl(),\n                i       = directions.length,\n                coords,\n                scrollTop  = document.documentElement.scrollTop || document.body.scrollTop,\n                scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft,\n                customPos = customPosition.apply(this, args)\n\n            nodel.html(content)\n                .style({ opacity: 1, 'pointer-events': 'all' })\n\n            while(i--) nodel.classed(directions[i], false)\n            coords = direction_callbacks.get(dir).apply(this)\n\n            if (customPos) {\n                nodel.style(customPos)\n            } else {\n                nodel.classed(dir, true).style({\n                    top: (coords.top +  poffset[0]) + scrollTop + 'px',\n                    left: (coords.left + poffset[1]) + scrollLeft + 'px'\n                })\n            }\n\n            return tip\n        }\n\n        // Public - hide the tooltip\n        //\n        // Returns a tip\n        tip.hide = function() {\n            var nodel = getNodeEl()\n            nodel.style({ opacity: 0, 'pointer-events': 'none' })\n            return tip\n        }\n\n        // Public: Proxy attr calls to the d3 tip container.  Sets or gets attribute value.\n        //\n        // n - name of the attribute\n        // v - value of the attribute\n        //\n        // Returns tip or attribute value\n        tip.attr = function(n, v) {\n            if (arguments.length < 2 && typeof n === 'string') {\n                return getNodeEl().attr(n)\n            } else {\n                var args =  Array.prototype.slice.call(arguments)\n                d3.selection.prototype.attr.apply(getNodeEl(), args)\n            }\n\n            return tip\n        }\n\n        // Public: Proxy style calls to the d3 tip container.  Sets or gets a style value.\n        //\n        // n - name of the property\n        // v - value of the property\n        //\n        // Returns tip or style property value\n        tip.style = function(n, v) {\n            if (arguments.length < 2 && typeof n === 'string') {\n                return getNodeEl().style(n)\n            } else {\n                var args =  Array.prototype.slice.call(arguments)\n                d3.selection.prototype.style.apply(getNodeEl(), args)\n            }\n\n            return tip\n        }\n\n        // Public: Set or get the direction of the tooltip\n        //\n        // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n        //     sw(southwest), ne(northeast) or se(southeast)\n        //\n        // Returns tip or direction\n        tip.direction = function(v) {\n            if (!arguments.length) return direction\n            direction = v == null ? v : d3.functor(v)\n\n            return tip\n        }\n\n        // Public: Sets or gets the offset of the tip\n        //\n        // v - Array of [x, y] offset\n        //\n        // Returns offset or\n        tip.offset = function(v) {\n            if (!arguments.length) return offset\n            offset = v == null ? v : d3.functor(v)\n\n            return tip\n        }\n\n        // Public: sets or gets the html value of the tooltip\n        //\n        // v - String value of the tip\n        //\n        // Returns html value or tip\n        tip.html = function(v) {\n            if (!arguments.length) return html\n            html = v == null ? v : d3.functor(v)\n\n            return tip\n        }\n\n        tip.customPosition = function(v) {\n            if (!arguments.length) return customPosition\n            customPosition = v == null ? v : d3.functor(v)\n\n            return tip\n        }\n\n        // Public: destroys the tooltip and removes it from the DOM\n        //\n        // Returns a tip\n        tip.destroy = function() {\n            if(node) {\n                getNodeEl().remove();\n                node = null;\n            }\n            return tip;\n        }\n\n        function d3_tip_direction() { return 'n' }\n        function d3_tip_offset() { return [0, 0] }\n        function d3_tip_html() { return ' ' }\n\n        var direction_callbacks = d3.map({\n                n:  direction_n,\n                s:  direction_s,\n                e:  direction_e,\n                w:  direction_w,\n                nw: direction_nw,\n                ne: direction_ne,\n                sw: direction_sw,\n                se: direction_se\n            }),\n\n            directions = direction_callbacks.keys()\n\n        function direction_n() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.n.y - node.offsetHeight,\n                left: bbox.n.x - node.offsetWidth / 2\n            }\n        }\n\n        function direction_s() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.s.y,\n                left: bbox.s.x - node.offsetWidth / 2\n            }\n        }\n\n        function direction_e() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.e.y - node.offsetHeight / 2,\n                left: bbox.e.x\n            }\n        }\n\n        function direction_w() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.w.y - node.offsetHeight / 2,\n                left: bbox.w.x - node.offsetWidth\n            }\n        }\n\n        function direction_nw() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.nw.y - node.offsetHeight,\n                left: bbox.nw.x - node.offsetWidth\n            }\n        }\n\n        function direction_ne() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.ne.y - node.offsetHeight,\n                left: bbox.ne.x\n            }\n        }\n\n        function direction_sw() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.sw.y,\n                left: bbox.sw.x - node.offsetWidth\n            }\n        }\n\n        function direction_se() {\n            var bbox = getScreenBBox()\n            return {\n                top:  bbox.se.y,\n                left: bbox.e.x\n            }\n        }\n\n        function initNode() {\n            var node = d3.select(document.createElement('div'))\n            node.style({\n                position: 'absolute',\n                top: 0,\n                opacity: 0,\n                'pointer-events': 'none',\n                'box-sizing': 'border-box'\n            })\n\n            return node.node()\n        }\n\n        function getSVGNode(el) {\n            el = el.node()\n            if(el.tagName.toLowerCase() === 'svg')\n                return el\n\n            return el.ownerSVGElement\n        }\n\n        function getNodeEl() {\n            if(node === null) {\n                node = initNode();\n                // re-add node to DOM\n                document.body.appendChild(node);\n            };\n            return d3.select(node);\n        }\n\n        // Private - gets the screen coordinates of a shape\n        //\n        // Given a shape on the screen, will return an SVGPoint for the directions\n        // n(north), s(south), e(east), w(west), ne(northeast), se(southeast), nw(northwest),\n        // sw(southwest).\n        //\n        //    +-+-+\n        //    |   |\n        //    +   +\n        //    |   |\n        //    +-+-+\n        //\n        // Returns an Object {n, s, e, w, nw, sw, ne, se}\n        function getScreenBBox() {\n            var targetel   = target || d3.event.target;\n\n            while ('undefined' === typeof targetel.getScreenCTM && 'undefined' === targetel.parentNode) {\n                targetel = targetel.parentNode;\n            }\n\n            var bbox       = {},\n                matrix     = targetel.getScreenCTM(),\n                tbbox      = targetel.getBBox(),\n                width      = tbbox.width,\n                height     = tbbox.height,\n                x          = tbbox.x,\n                y          = tbbox.y\n\n            point.x = x\n            point.y = y\n            bbox.nw = point.matrixTransform(matrix)\n            point.x += width\n            bbox.ne = point.matrixTransform(matrix)\n            point.y += height\n            bbox.se = point.matrixTransform(matrix)\n            point.x -= width\n            bbox.sw = point.matrixTransform(matrix)\n            point.y -= height / 2\n            bbox.w  = point.matrixTransform(matrix)\n            point.x += width\n            bbox.e = point.matrixTransform(matrix)\n            point.x -= width / 2\n            point.y -= height / 2\n            bbox.n = point.matrixTransform(matrix)\n            point.y += height\n            bbox.s = point.matrixTransform(matrix)\n\n            return bbox\n        }\n\n        return tip\n    };\n\n}));","import {LinkState, NodeState} from \"./controllers\";\n\nexport const clusterColors = {\n    ontoOrange: 'var(--onto-orange)',\n    ontoBlue: 'var(--onto-blue)',\n    ontoGreen: 'var(--onto-green)',\n    ontoGrey: 'var(--onto-grey)'\n};\n\nexport function createClusterSvgElement(element) {\n    return d3.select(element)\n        .append('svg');\n}\n\nexport function createClusterZone(parent) {\n    const clusterZone = parent.append('g');\n    clusterZone\n        .append(\"circle\")\n        .classed('cluster-zone', true)\n        .style('fill', 'transparent')\n        .style('stroke-width', '2');\n    return clusterZone;\n}\n\nexport function setCreateClusterZone(hasCluster, clusterZone, translationsMap) {\n    clusterZone\n        .select('.cluster-zone')\n        .classed('no-cluster', !hasCluster);\n\n    if (hasCluster) {\n        clusterZone.selectAll('#no-cluster-zone').remove();\n    } else {\n        const textGroup = clusterZone\n            .append('g')\n            .attr(\"id\", \"no-cluster-zone\");\n        textGroup\n            .append('text')\n            .attr('id', 'no-cluster-label')\n            .text(translationsMap.no_cluster_configured || 'No cluster group configured')\n            .attr('y', -50)\n            .classed('h2', true)\n            .style('text-anchor', \"middle\");\n        textGroup.append('text')\n            .attr('id', 'create-cluster-label')\n            .classed('h3', true)\n            .text(translationsMap.create_cluster_btn || 'Click here to create a cluster')\n            .style('text-anchor', \"middle\");\n        textGroup.append('text')\n            .attr('y', 130)\n            .attr('class', 'icon-any repo')\n            .attr('fill', clusterColors.ontoOrange)\n            .style('text-anchor', \"middle\")\n            .classed('settings-icon', true)\n            .text(\"\\ue92b\");\n    }\n}\n\nexport function updateClusterZoneLabels(hasCluster, clusterZone, translationsMap) {\n    if (hasCluster) {\n        return;\n    }\n    clusterZone.select('#no-cluster-zone #no-cluster-label')\n        .text(translationsMap.no_cluster_configured);\n    clusterZone.select('#no-cluster-zone #create-cluster-label')\n        .text(translationsMap.create_cluster_btn);\n}\n\nexport function moveElement(element, x, y) {\n    element.attr('transform', () => {\n        return `translate(${x}, ${y})`;\n    });\n}\n\nexport function createNodes(nodesDataBinding, nodeRadius, isLegend) {\n    const nodeGroup = nodesDataBinding.enter()\n        .append('g')\n        .attr('id', 'node-group')\n        .classed('legend', isLegend);\n\n    createHexagon(nodeGroup, nodeRadius);\n    nodesDataBinding.exit().remove();\n\n    nodeGroup\n        .append('text')\n        .attr('class', 'icon-any node-icon');\n\n    addHostnameToNodes(nodeGroup, nodeRadius, isLegend);\n}\n\nfunction addHostnameToNodes(nodeElements, nodeRadius, isLegend) {\n    const nodeTextHost = nodeElements.append('g');\n\n    if (isLegend) {\n        nodeTextHost.append('foreignObject')\n            .attr('y', nodeRadius)\n            .attr('x', -nodeRadius)\n            .attr('width', nodeRadius * 2)\n            .attr('height', 10)\n            .attr('class', 'label-wrapper')\n            .append('xhtml:div')\n            .attr('class', 'id id-host');\n    } else {\n        nodeTextHost\n            .append('rect')\n            .attr('class', 'id-host-background')\n            .attr('rx', 6);\n\n        nodeTextHost\n            .append('text')\n            .attr('y', nodeRadius + 10)\n            .attr('class', 'id id-host')\n            .style('text-anchor', 'middle');\n    }\n}\n\nexport function updateNodes(nodes) {\n    updateNodesIcon(nodes);\n    updateNodesClasses(nodes);\n    updateNodesHostnameText(nodes);\n}\n\nfunction updateNodesClasses(nodes) {\n    nodes\n        .select('.node.member')\n        .classed('leader', (node) => node.nodeState === NodeState.LEADER)\n        .classed('follower', (node) => node.nodeState === NodeState.FOLLOWER)\n        .classed('candidate', (node) => node.nodeState === NodeState.CANDIDATE)\n        .classed('other', (node) => {\n            return node.nodeState !== NodeState.LEADER &&\n                node.nodeState !== NodeState.FOLLOWER &&\n                node.nodeState !== NodeState.CANDIDATE;\n        });\n}\n\nfunction updateNodesIcon(nodes) {\n    nodes\n        .select('.icon-any.node-icon')\n        .text(getNodeIconType);\n}\n\nfunction getNodeIconType(node) {\n    if (node.nodeState === NodeState.LEADER) {\n        return '\\ue935';\n    } else if (node.nodeState === NodeState.FOLLOWER) {\n        return '\\ue963';\n    } else if (node.nodeState === NodeState.CANDIDATE) {\n        return '\\ue914';\n    } else if (node.nodeState === NodeState.NO_CONNECTION) {\n        return '\\ue931';\n    } else if (node.nodeState === NodeState.OUT_OF_SYNC) {\n        return '\\ue920';\n    } else if (node.nodeState === NodeState.READ_ONLY) {\n        return '\\ue95c';\n    } else if (node.nodeState === NodeState.RESTRICTED) {\n        return '\\ue933';\n    }\n    return '';\n}\n\nfunction updateNodesHostnameText(nodes) {\n    nodes\n        .select('.id.id-host')\n        .each(function (d) {\n            d.labelNode = this;\n        })\n        .text(function (d) {\n            return d.hostname;\n        });\n\n    // Add padding styling to text background. left/right +5. top/bottom +1\n    nodes\n        .select('.id-host-background')\n        .attr('width', function (d) {\n            return d3.select(d.labelNode).node().getBBox().width + 10;\n        })\n        .attr('height', function (d) {\n            return d3.select(d.labelNode).node().getBBox().height + 2;\n        })\n        .attr('x', function (d) {\n            return d3.select(d.labelNode).node().getBBox().x - 5;\n        })\n        .attr('y', function (d) {\n            return d3.select(d.labelNode).node().getBBox().y - 1;\n        })\n        .attr('fill', '#EEEEEE');\n}\n\nexport function createLinks(linksDataBinding) {\n    linksDataBinding.enter()\n        .append('path')\n        .classed('link', true);\n\n    linksDataBinding.exit().remove();\n}\n\nexport function updateLinks(linksDataBinding, nodes) {\n    linksDataBinding\n        .attr('stroke', setLinkColor)\n        .style('stroke-dasharray', setLinkStyle)\n        .attr('d', (link) => getLinkCoordinates(link, nodes));\n}\n\nexport function setLinkColor(link) {\n    if (link.status === LinkState.IN_SYNC || link.status === LinkState.SYNCING) {\n        return clusterColors.ontoGreen;\n    } else if (link.status === LinkState.OUT_OF_SYNC) {\n        return clusterColors.ontoGrey;\n    }\n    return 'none';\n}\n\nexport function setLinkStyle(link) {\n    if (link.status === LinkState.OUT_OF_SYNC || link.status === LinkState.SYNCING) {\n        return '10 10';\n    }\n    return 'none';\n}\n\nfunction getLinkCoordinates(link, nodes) {\n    const source = nodes.find((node) => node.address === link.source);\n    const target = nodes.find((node) => node.address === link.target);\n\n    const deltaX = target.x - source.x;\n    const deltaY = target.y - source.y;\n    const dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const normX = deltaX / dist;\n    const normY = deltaY / dist;\n\n    // Padding from node center point\n    const sourcePadding = 55;\n    const targetPadding = 55;\n    const sourceX = source.x + (sourcePadding * normX);\n    const sourceY = source.y + (sourcePadding * normY);\n    const targetX = target.x - (targetPadding * normX);\n    const targetY = target.y - (targetPadding * normY);\n    return 'M' + sourceX + ',' + sourceY + 'L' + targetX + ',' + targetY;\n}\n\nexport function positionNodesOnClusterZone(nodes, clusterZoneX, clusterZoneY, clusterZoneRadius) {\n    nodes\n        .attr('transform', (node, index) => {\n            // Calculate initial positions for the new nodes based on\n            // spreading them evenly on a circle around the center of the page.\n            const theta = 2 * Math.PI * index / nodes[0].length;\n            var x = clusterZoneX + Math.cos(theta) * clusterZoneRadius;\n            var y = clusterZoneY + Math.sin(theta) * clusterZoneRadius;\n            node.x = x;\n            node.y = y;\n            return `translate(${x}, ${y})`;\n        });\n}\n\nfunction createHexagon(nodeGroup, radius) {\n    const _s32 = (Math.sqrt(3) / 2);\n    const xDiff = 0;\n    const yDiff = 0;\n    const points = [[radius + xDiff, yDiff], [radius / 2 + xDiff, radius * _s32 + yDiff], [-radius / 2 + xDiff, radius * _s32 + yDiff],\n        [-radius + xDiff, yDiff],\n        [-radius / 2 + xDiff, -radius * _s32 + yDiff], [radius / 2 + xDiff, -radius * _s32 + yDiff], [radius + xDiff, yDiff],\n        [radius / 2 + xDiff, radius * _s32 + yDiff]];\n    return nodeGroup\n        .selectAll(\"path.area\")\n        .data([points])\n        .enter()\n        .append(\"path\")\n        .attr('class', 'node member')\n        .attr(\"d\", d3.svg.line());\n}\n","import 'angular/utils/local-storage-adapter';\nimport * as CDS from \"./cluster-drawing.service\";\nimport {LinkState, NodeState} from \"./controllers\";\nimport d3tip from 'lib/d3-tip/d3-tip-patch';\n\n\nconst navigationBarWidthFull = 240;\nconst navigationBarWidthCollapsed = 70;\nlet navigationBarWidth = navigationBarWidthFull;\n\nconst nodeRadius = 50;\nconst legendNodeRadius = 25;\n\nconst clusterManagementDirectives = angular.module('graphdb.framework.clustermanagement.directives', [\n    'graphdb.framework.utils.localstorageadapter'\n]);\n\nconst translationsMap = {\n    no_cluster_configured: '',\n    create_cluster_btn: '',\n    legend_node_state: '',\n    legend_link_state: '',\n    node_state_leader: \"Leader\",\n    node_state_follower: \"Follower\",\n    node_state_candidate: \"Candidate\",\n    node_state_no_cluster: \"No cluster\",\n    node_state_out_of_sync: \"Out of sync\",\n    node_state_no_connection: \"No connection\",\n    node_state_read_only: \"Read only\",\n    node_state_restricted: \"Restricted\",\n    link_state_in_sync: \"In sync\",\n    link_state_syncing: \"Syncing\",\n    link_state_out_of_sync: \"Out of sync\"\n};\n\nconst idTranslationKeyMap = {\n    node_state: 'legend_node_state',\n    link_state: 'legend_link_state'\n};\n\nclusterManagementDirectives.directive('clusterGraphicalView', ['$window', 'LocalStorageAdapter', 'LSKeys', 'UriUtils', '$translate', '$rootScope',\n    function ($window, LocalStorageAdapter, LSKeys, UriUtils, $translate, $rootScope) {\n        return {\n            restrict: 'A',\n            link: function (scope, element) {\n                scope.showLegend = false;\n                $rootScope.$on('$translateChangeSuccess', function () {\n                    updateTranslations();\n                    updateLabels();\n                });\n                scope.$on(\"$destroy\", function () {\n                    legendTooltip.destroy();\n                });\n                function updateTranslations() {\n                    Object.keys(translationsMap).forEach((key) => {\n                        translationsMap[key] = $translate.instant('cluster_management.cluster_graphical_view.' + key);\n                    });\n                }\n\n                function getWindowWidth() {\n                    const collapsed = LocalStorageAdapter.get(LSKeys.MENU_STATE) === 'collapsedMenu';\n                    navigationBarWidth = collapsed ? navigationBarWidthCollapsed : navigationBarWidthFull;\n                    // 95% avoids horizontal scrollbars and adds some margin\n                    return Math.max(Math.floor(($window.innerWidth - navigationBarWidth) * 0.95), 600);\n                }\n\n                function getWindowHeight() {\n                    // 95% avoids horizontal scrollbars and adds some margin\n                    return Math.max((($window.innerHeight - 250) * 0.95), 600);\n                }\n\n                let legendNodesGroup;\n                let legendWidth;\n                let legendHeight;\n                const legendPadding = 10;\n\n                let width = getWindowWidth();\n                let height = getWindowHeight();\n                let clusterZoneRadius = Math.min(width, height) / 2 - 100;\n                let clusterZoneX = width / 2;\n                let clusterZoneY = height / 2;\n                let hasCluster;\n\n                scope.width = function () {\n                    return width;\n                };\n\n                scope.height = function () {\n                    return height;\n                };\n\n                // SVG components\n                let svg;\n                let clusterZone;\n                let nodesGroup;\n                let linksGroup;\n\n                function updateLabels() {\n                    CDS.updateClusterZoneLabels(hasCluster, clusterZone, translationsMap);\n                    Object.keys(idTranslationKeyMap).forEach((elementId) => {\n                        d3.select(`#${elementId}`).text(getLabelFor(elementId));\n                    });\n                    if (legendNodesGroup) {\n                        legendNodesGroup.remove();\n                    }\n                    createLegendGroup();\n                    createClusterLegend();\n                }\n\n                function translateLegendLinksAndNodes(legendNodes, legendLinks) {\n                    legendNodes.forEach((node) => {\n                        node.toolTip = node.hostname = translationsMap[node.customText];\n                    });\n                    legendLinks.forEach((link) => {\n                        link.toolTip = link.linkTypeText = translationsMap[link.linkTypeKey];\n                    });\n                }\n\n                function getLabelFor(elementId) {\n                    const labelKey = idTranslationKeyMap[elementId];\n                    return translationsMap[labelKey];\n                }\n\n                function initialize() {\n                    updateTranslations();\n                    const hasCluster = !!(scope.clusterModel.nodes && scope.clusterModel.nodes.length);\n                    createClusterZone(hasCluster);\n                    createClusterLegend();\n                    plot();\n                }\n\n                function createClusterZone(hasCluster) {\n                    svg = CDS.createClusterSvgElement(element[0])\n                        .attr('width', width)\n                        .attr('height', height);\n                    svg.call(legendTooltip);\n\n                    clusterZone = CDS.createClusterZone(svg, hasCluster);\n\n                    linksGroup = svg.append('g').attr('id', 'links-group');\n                    nodesGroup = svg.append('g').attr('id', 'nodes-group');\n                    createLegendGroup();\n                }\n\n                function createLegendGroup() {\n                    legendNodesGroup = svg.append('g').attr('id', 'legend-group')\n                        .classed('hidden', !scope.showLegend)\n                        .classed('legend-group', true);\n                }\n\n                let tooltipElement;\n                const legendTooltip = d3tip()\n                    .attr('class', 'd3-tip')\n                    .customPosition(function () {\n                        const bbox = tooltipElement.getBoundingClientRect();\n                        const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n                        const scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n\n                        return {\n                            left: bbox.left + scrollLeft + 'px',\n                            top: (bbox.top - 30) + scrollTop + 'px'\n                        };\n                    })\n                    .html(function (d) {\n                        return d.toolTip;\n                    });\n\n                // Shows tooltip with legend node or link state\n                const showLegendTooltip = function (d, element) {\n                    tooltipElement = element;\n                    legendTooltip.show(d, tooltipElement);\n                };\n\n                // Hides the tooltip with legend node or link state\n                const hideLegendTooltip = function () {\n                    tooltipElement = null;\n                    legendTooltip.hide();\n                };\n\n                function createClusterLegend() {\n                    const nodeLinkStateTextHeight = 14;\n\n                    const nodeStateLabelY = legendPadding + nodeLinkStateTextHeight;\n                    const linkStateLabelY = nodeStateLabelY + legendPadding * 3 + legendNodeRadius * 5;\n\n                    const legendColumns = 4;\n                    const nodesXPadding = 15;\n                    const nodesYPadding = 15;\n\n                    const legendNodes = getLegendNodes();\n                    const legendLinks = getLegendLinks();\n                    translateLegendLinksAndNodes(legendNodes, legendLinks);\n\n                    legendNodesGroup.append('rect')\n                        .attr('id', 'legend-background')\n                        .attr('class', 'legend-background')\n                        .attr('fill', '#EEEEEE');\n\n                    const nodeStateLabel = legendNodesGroup\n                        .append('text')\n                        .attr('id', 'node_state')\n                        .attr('class', 'id id-host')\n                        .attr('x', nodeRadius * 4)\n                        .attr('y', nodeStateLabelY)\n                        .text(getLabelFor('node_state'));\n\n                    const linkStateLabel = legendNodesGroup\n                        .append('text')\n                        .attr('id', 'link_state')\n                        .attr('class', 'id id-host')\n                        .attr('x', nodeRadius * 4)\n                        .attr('y', linkStateLabelY)\n                        .text(getLabelFor('link_state'));\n\n                    const legendNodeData = legendNodesGroup.selectAll('#node-group').data(legendNodes);\n                    CDS.createNodes(legendNodeData, legendNodeRadius, true);\n                    CDS.updateNodes(legendNodeData);\n\n                    legendNodeData.select('.node.member')\n                        .on(\"mouseover\", function (d) {\n                            d3.event.stopPropagation();\n                            showLegendTooltip(d, this);\n                        })\n                        .on('mouseout', hideLegendTooltip);\n\n                    legendNodeData\n                        .attr('transform', function (d) {\n                            const row = Math.floor(d.id / legendColumns);\n                            const column = d.id % legendColumns;\n                            const x = legendPadding + legendNodeRadius + (nodesXPadding + legendNodeRadius * 2) * column;\n                            const y = legendPadding * 2 + nodeLinkStateTextHeight + legendNodeRadius + (nodesYPadding + legendNodeRadius\n                                * 2) * row;\n                            return `translate(${x}, ${y})`;\n                        });\n\n                    legendNodesGroup\n                        .call(function () {\n                            legendWidth = this.node().getBBox().width;\n                        });\n\n                    // Position node/link state labels\n                    nodeStateLabel.attr('x', legendPadding + legendWidth / 2);\n                    linkStateLabel.attr('x', legendPadding + legendWidth / 2);\n\n\n                    const linkWidth = legendWidth / 3;\n\n                    const linksGroup = legendNodesGroup.append('g').attr('id', 'links-group');\n                    const linksGroupY = linkStateLabelY + legendPadding;\n                    linksGroup.attr('transform', `translate(${legendPadding}, ${linksGroupY})`);\n\n                    legendLinks.forEach((link, index) => {\n                        const linkPadding = 5;\n                        const startX = linkPadding;\n                        const endX = linkWidth - linkPadding;\n\n                        const linkG = linksGroup\n                            .append('g')\n                            .classed('link', true)\n                            .classed('legend', true)\n                            .attr('transform', () => {\n                                const x = index * linkWidth;\n                                return `translate(${x}, 0)`;\n                            });\n\n                        linkG\n                            .append('path')\n                            .classed('link', true)\n                            .attr('stroke-dasharray', () => CDS.setLinkStyle(link))\n                            .attr('stroke', () => CDS.setLinkColor(link))\n                            .attr('d', () => {\n                                return `M${startX},0,${endX},0`;\n                            });\n\n                        linkG.append('foreignObject')\n                            .attr('y', 10)\n                            .attr('x', 5)\n                            .attr('width', linkWidth - 10)\n                            .attr('height', 10)\n                            .attr('class', 'label-wrapper')\n                            .append('xhtml:div')\n                            .attr('class', 'id id-host')\n                            .style(\"font-size\", \"9px\")\n                            .html(link.linkTypeText);\n\n                        linkG\n                            .on('mouseover', function () {\n                                d3.event.stopPropagation();\n                                showLegendTooltip(link, this);\n                            })\n                            .on('mouseout', hideLegendTooltip);\n                    });\n\n\n                    legendNodesGroup\n                        .call(function (d) {\n                            legendHeight = this.node().getBBox().height;\n                            legendWidth = this.node().getBBox().width;\n                        });\n\n                    legendNodesGroup.select('.legend-background')\n                        .attr('height', legendHeight + legendPadding * 4)\n                        .attr('width', legendWidth + legendPadding * 2)\n                        .attr('rx', '6');\n\n                    positionLegend();\n                }\n\n                function positionLegend() {\n                    const y = height - (legendHeight + legendPadding * 3 + 50);\n                    CDS.moveElement(legendNodesGroup, 0, y);\n                }\n\n                function createNodes(nodes) {\n                    nodes.forEach((node) => node.hostname = UriUtils.shortenIri(node.endpoint));\n                    const nodeData = nodesGroup.selectAll('#node-group').data(nodes, (node) => node.address);\n                    nodeData\n                        .on('click', (d) => {\n                            scope.childContext.selectNode(d);\n\n                            // position the tooltip according to the node!\n                            const tooltip = d3.select('.nodetooltip');\n                            const windowWidth = $(window).width();\n                            if (d3.event.pageX < windowWidth / 2) {\n                                // left\n                                tooltip.style(\"left\", d3.event.pageX + \"px\");\n                                tooltip.style(\"right\", \"\");\n                            } else {\n                                // right\n                                tooltip.style(\"left\", \"\");\n                                tooltip.style(\"right\", (windowWidth - d3.event.pageX) + \"px\");\n                            }\n                            tooltip.style(\"top\", (d3.event.pageY - 28) + \"px\");\n                        });\n                    CDS.createNodes(nodeData, nodeRadius);\n                    CDS.updateNodes(nodeData);\n                    CDS.positionNodesOnClusterZone(nodeData, clusterZoneX, clusterZoneY, clusterZoneRadius);\n                }\n\n                function drawLinks(links, nodes) {\n                    const linksData = linksGroup.selectAll('.link').data(links, (link) => link.id);\n                    CDS.createLinks(linksData);\n                    CDS.updateLinks(linksData, nodes);\n                }\n\n                // Properties and functions that can be used by parent\n                scope.childContext.redraw = plot;\n                scope.childContext.resize = function () {\n                    // recalculates with new screen width\n                    width = getWindowWidth();\n                    height = getWindowHeight();\n                    svg.attr(\"width\", width);\n                    svg.attr(\"height\", height);\n                    plot();\n                    positionLegend();\n                };\n                scope.childContext.toggleLegend = () => {\n                    scope.showLegend = !scope.showLegend;\n                    legendNodesGroup.classed('hidden', !scope.showLegend);\n                };\n\n                function resizeClusterComponent() {\n                    calculateClusterZoneProperties();\n                    CDS.moveElement(clusterZone, clusterZoneX, clusterZoneY);\n                    clusterZone\n                        .select('.cluster-zone')\n                        .attr('r', clusterZoneRadius);\n                }\n\n                function calculateClusterZoneProperties() {\n                    clusterZoneRadius = Math.min(width, height) / 2 - 100;\n                    clusterZoneX = width / 2;\n                    clusterZoneY = height / 2;\n                }\n\n                function setClusterZoneType(hasCluster) {\n                    CDS.setCreateClusterZone(hasCluster, clusterZone, translationsMap);\n                    let mouseupCallback;\n                    if (!hasCluster) {\n                        mouseupCallback = () => {\n                            scope.$apply(function () {\n                                scope.showCreateClusterDialog();\n                            });\n                        };\n                    }\n                    clusterZone\n                        .on('mouseup', mouseupCallback);\n                }\n\n                function plot() {\n                    resizeClusterComponent();\n                    if (hasCluster !== scope.clusterModel.hasCluster) {\n                        hasCluster = !!scope.clusterModel.hasCluster;\n                        setClusterZoneType(hasCluster);\n                    }\n                    const nodes = _.cloneDeep(scope.clusterModel.nodes) || [];\n                    const links = _.cloneDeep(scope.clusterModel.links) || [];\n                    createNodes(nodes);\n                    drawLinks(links, nodes);\n                }\n\n                initialize();\n            }\n        };\n    }\n])\n    .config(['$tooltipProvider', function ($tooltipProvider) {\n    $tooltipProvider.options({appendToBody: true});\n}]);\n\n\nconst getLegendNodes = function () {\n    const legendNodes = [];\n    legendNodes.push({nodeState: NodeState.LEADER, customText: 'node_state_leader'});\n    legendNodes.push({nodeState: NodeState.FOLLOWER, customText: 'node_state_follower'});\n    legendNodes.push({nodeState: NodeState.CANDIDATE, customText: 'node_state_candidate'});\n    legendNodes.push({nodeState: NodeState.NO_CLUSTER, customText: 'node_state_no_cluster'});\n    legendNodes.push({nodeState: NodeState.OUT_OF_SYNC, customText: 'node_state_out_of_sync'});\n    legendNodes.push({nodeState: NodeState.NO_CONNECTION, customText: 'node_state_no_connection'});\n    legendNodes.push({nodeState: NodeState.READ_ONLY, customText: 'node_state_read_only'});\n    legendNodes.push({nodeState: NodeState.RESTRICTED, customText: 'node_state_restricted'});\n    legendNodes.forEach((node, index) => node.id = index);\n    return legendNodes;\n};\n\nconst getLegendLinks = function () {\n    const links = [];\n    links.push({status: LinkState.IN_SYNC, linkTypeKey: 'link_state_in_sync'});\n    links.push({status: LinkState.SYNCING, linkTypeKey: 'link_state_syncing'});\n    links.push({status: LinkState.OUT_OF_SYNC, linkTypeKey: 'link_state_out_of_sync'});\n    links.forEach((link, index) => link.id = index);\n    return links;\n};\n"],"sourceRoot":""}