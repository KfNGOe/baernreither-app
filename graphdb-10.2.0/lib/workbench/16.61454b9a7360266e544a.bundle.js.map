{"version":3,"sources":["webpack:///./src/js/angular/export/app.js","webpack:///./src/js/lib/FileSaver-patch.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./src/js/angular/core/directives/paginations.js","webpack:///./src/js/angular/utils/file-types.js","webpack:///./src/js/angular/export/controllers.js"],"names":["angular","module","config","$tooltipProvider","setTriggers","saveAs","view","navigator","test","userAgent","doc","document","get_URL","URL","webkitURL","save_link","createElementNS","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","ex","setImmediate","setTimeout","fs_min_size","revoke","file","revoker","revokeObjectURL","remove","chrome","dispatch","filesaver","event_types","event","i","concat","length","listener","call","auto_bom","blob","type","Blob","FileSaver","name","object_url","target_view","slice","this","blob_changed","dispatch_all","split","fs_error","createObjectURL","location","href","undefined","open","safari","readyState","DONE","abortable","func","apply","arguments","create_if_not_found","create","exclusive","INIT","download","node","MouseEvent","dispatchEvent","webkitSlice","size","TEMPORARY","fs","root","getDirectory","dir","save","getFile","createWriter","writer","onwriteend","toURL","onerror","error","code","ABORT_ERR","forEach","write","abort","WRITING","NOT_FOUND_ERR","FS_proto","prototype","msSaveOrOpenBlob","onwritestart","onprogress","onwrite","onabort","self","window","content","exports","Error","__webpack_amd_options__","directive","template","value","extension","controller","$scope","$http","$location","$timeout","ModalService","filterFilter","$repositories","toastr","RDF4JRepositoriesRestService","FileTypes","$translate","getActiveRepository","exportFormats","deleting","showExportDDTooltip","page","pageSize","pageSizeOptions","displayGraphs","exportFilter","export","exportMultipleGraphs","repoExportFormat","selectedGraphs","exportGraphs","$watch","getGraphs","selectedAll","changePageSize","isShacl","iri","loader","success","data","results","bindings","unshift","contextID","graphsByValue","Object","keys","key","binding","uri","encodeURIComponent","clearUri","exportUri","longName","graphs","filteredGraphs","matchedElements","status","msg","getError","setRepository","instant","onGraphSearch","deselectAll","filterResults","item","indexOf","push","downloadExport","downloadUrl","format","url","auth","localStorage","getItem","win","close","openExportDDTooltip","$","trigger","exportRepo","openSimpleModal","title","message","warning","result","then","startDownload","repo","getActiveRepositoryObject","id","hasMultipleSelected","_","isEmpty","index","exportSelectedGraphs","contextStr","substring","element","find","valueOfFilteredGraphsButton","innerHTML","trim","valueOfFilteredGraphs","changePagination","isDefined","removeClass","checkAll","dropRepository","canWriteActiveRepo","addStatements","err","errMsg","dropContext","ctx","updateResults","dropGraph","selectedGraphsForDelete","counterOfClearedGraphs","dropSelectedGraphs"],"mappings":"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","file":"16.61454b9a7360266e544a.bundle.js","sourcesContent":["import 'angular/core/services';\nimport 'angular/core/directives';\nimport 'angular/export/controllers';\nimport 'angular/core/directives/paginations';\nimport 'angular/core/services/repositories.service';\nimport 'lib/FileSaver-patch';\n\nconst modules = [\n    'ui.bootstrap',\n    'toastr',\n    'ngRoute',\n    'ngCookies',\n    'graphdb.framework.impex.export.controllers',\n    'graphdb.framework.core.directives.paginations',\n    'graphdb.framework.core.services.repositories',\n    'graphdb.framework.core.directives'\n];\n\nconst exportApp = angular.module('graphdb.framework.impex.export', modules);\n\nexportApp.config(['$tooltipProvider', function ($tooltipProvider) {\n    //Add custom event for Export repository DD tooltip\n    $tooltipProvider.setTriggers({'showExportDDTooltip': 'showExportDDTooltip'});\n}]);\n","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 2015-05-07.2\n *\n * By Eli Grey, http://eligrey.com\n * License: X11/MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, webkit_req_fs = view.webkitRequestFileSystem\n\t\t, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t, fs_min_size = 0\n\t\t// See https://code.google.com/p/chromium/issues/detail?id=375297#c7 and\n\t\t// https://github.com/eligrey/FileSaver.js/commit/485930a#commitcomment-8768047\n\t\t// for the reasoning behind the timeout and revocation flow\n\t\t, arbitrary_revoke_timeout = 500 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (view.chrome) {\n\t\t\t\trevoker();\n\t\t\t} else {\n\t\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t\t}\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([\"\\ufeff\", blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name) {\n\t\t\tblob = auto_bom(blob);\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, blob_changed = false\n\t\t\t\t, object_url\n\t\t\t\t, target_view\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (blob_changed || !object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (target_view) {\n\t\t\t\t\t\ttarget_view.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar new_tab = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (new_tab == undefined && typeof safari !== \"undefined\") {\n\t\t\t\t\t\t\t//Apple do not allow window.open, see http://bit.ly/1kZffRI\n\t\t\t\t\t\t\tview.location.href = object_url\n\t\t\t\t\t\t} \n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t\t, abortable = function(func) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\n\t\t\t\t\t\t\treturn func.apply(this, arguments);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t, create_if_not_found = {create: true, exclusive: false}\n\t\t\t\t, slice\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\tif (!name) {\n\t\t\t\tname = \"download\";\n\t\t\t}\n\t\t\tif (save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t//window.open('data:attachment/csv;charset=utf-8,' + object_url);\n\t\t\t\tsave_link.href = object_url;\n\t\t\t\tsave_link.download = name;\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\n\t\t\t// viewed in a tab, so I force save with application/octet-stream\n\t\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\n\t\t\t// Update: Google errantly closed 91158, I submitted it again:\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=389642\n\t\t\tif (view.chrome && type && type !== force_saveable_type) {\n\t\t\t\tslice = blob.slice || blob.webkitSlice;\n\t\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\n\t\t\t\tblob_changed = true;\n\t\t\t}\n\t\t\t// Since I can't be sure that the guessed media type will trigger a download\n\t\t\t// in WebKit, I append .download to the filename.\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\n\t\t\tif (webkit_req_fs && name !== \"download\") {\n\t\t\t\tname += \".download\";\n\t\t\t}\n\t\t\tif (type === force_saveable_type || webkit_req_fs) {\n\t\t\t\ttarget_view = view;\n\t\t\t}\n\t\t\tif (!req_fs) {\n\t\t\t\tfs_error();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfs_min_size += blob.size;\n\t\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {\n\t\t\t\tfs.root.getDirectory(\"saved\", create_if_not_found, abortable(function(dir) {\n\t\t\t\t\tvar save = function() {\n\t\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function(file) {\n\t\t\t\t\t\t\tfile.createWriter(abortable(function(writer) {\n\t\t\t\t\t\t\t\twriter.onwriteend = function(event) {\n\t\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", event);\n\t\t\t\t\t\t\t\t\trevoke(file);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\twriter.onerror = function() {\n\t\t\t\t\t\t\t\t\tvar error = writer.error;\n\t\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\n\t\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" \").forEach(function(event) {\n\t\t\t\t\t\t\t\t\twriter[\"on\" + event] = filesaver[\"on\" + event];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\twriter.write(blob);\n\t\t\t\t\t\t\t\tfilesaver.abort = function() {\n\t\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\n\t\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t};\n\t\t\t\t\tdir.getFile(name, {create: false}, abortable(function(file) {\n\t\t\t\t\t\t// delete file if it already exists\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t\tsave();\n\t\t\t\t\t}), abortable(function(ex) {\n\t\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}), fs_error);\n\t\t\t}), fs_error);\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name) {\n\t\t\treturn new FileSaver(blob, name);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name) {\n\t\t\treturn navigator.msSaveOrOpenBlob(auto_bom(blob), name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function() {\n\t\tvar filesaver = this;\n\t\tfilesaver.readyState = filesaver.DONE;\n\t\tdispatch(filesaver, \"abort\");\n\t};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd != null)) {\n  define([], function() {\n    return saveAs;\n  });\n}","module.exports = function() {\n\tthrow new Error(\"define cannot be used indirect\");\n};\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","angular.module('graphdb.framework.core.directives.paginations', [])\n    .directive('paginations', function () {\n        return {\n            template: '<pagination class=\"nav navbar-right\" total-items=\"matchedElements.length\" items-per-page=\"pageSize\" ng-model=\"page\" ng-change=\"changePagination()\" direction-links=\"false\" boundary-links=\"true\" max-size=\"5\" rotate=\"true\"></pagination>',\n        };\n    });\n","angular.module('graphdb.workbench.utils.filetypes', [])\n    .value('FileTypes', [\n        {name: 'JSON', type: 'application/rdf+json', extension: '.json'},\n        {name: 'JSON-LD', type: 'application/ld+json', extension: '.jsonld'},\n        {name: 'RDF-XML', type: 'application/rdf+xml', extension: '.rdf'},\n        {name: 'N3', type: 'text/rdf+n3', extension: '.n3'},\n        {name: 'N-Triples', type: 'text/plain', extension: '.nt'},\n        {name: 'N-Quads', type: 'text/x-nquads', extension: '.nq'},\n        {name: 'Turtle', type: 'text/turtle', extension: '.ttl'},\n        {name: 'Turtle*', type: 'application/x-turtlestar', extension: '.ttls'},\n        {name: 'TriX', type: 'application/trix', extension: '.trix'},\n        {name: 'TriG', type: 'application/x-trig', extension: '.trig'},\n        {name: 'TriG*', type: 'application/x-trigstar', extension: '.trigs'},\n        {name: 'Binary RDF', type: 'application/x-binary-rdf', extension: '.brf'}\n    ]);\n","import 'angular/core/services';\nimport 'angular/core/services/repositories.service';\nimport 'angular/core/services/jwt-auth.service';\nimport 'angular/utils/file-types';\nimport {decodeHTML} from \"../../../app\";\nimport {cloneDeep} from \"lodash\";\n\nconst modules = [\n    'ngCookies',\n    'ui.bootstrap',\n    'toastr',\n    'graphdb.framework.core.services.repositories',\n    'graphdb.framework.core.services.jwtauth',\n    'graphdb.workbench.utils.filetypes'\n];\n\nconst exportCtrl = angular.module('graphdb.framework.impex.export.controllers', modules);\n\nexportCtrl.controller('ExportCtrl',\n    ['$scope', '$http', '$location', '$timeout', 'ModalService', 'filterFilter', '$repositories', 'toastr', 'RDF4JRepositoriesRestService', 'FileTypes', '$translate',\n        function ($scope, $http, $location, $timeout, ModalService, filterFilter, $repositories, toastr, RDF4JRepositoriesRestService, FileTypes, $translate) {\n\n            $scope.getActiveRepository = function () {\n                return $repositories.getActiveRepository();\n            };\n\n            $scope.exportFormats = FileTypes;\n            $scope.deleting = {};\n            $scope.showExportDDTooltip = true;\n            $scope.page = 1;\n            $scope.pageSize = 10;\n            $scope.pageSizeOptions = [10, 20, 50, 100];\n            $scope.displayGraphs = [];\n            $scope.exportFilter = '';\n            $scope.export = true;\n            $scope.exportMultipleGraphs = false;\n            $scope.repoExportFormat = {\n                name: 'TriG',\n                type: 'application/x-trig',\n                extension: '.trig'\n            };\n            $scope.selectedGraphs = {\n                exportGraphs: {}\n            };\n\n            $scope.$watch(function () {\n                return $repositories.getActiveRepository();\n            }, function () {\n                $scope.exportFilter = '';\n                $scope.getGraphs();\n                $scope.selectedAll = false;\n                $timeout(function () {\n                    $scope.changePageSize(10);\n                }, 100);\n            });\n\n            $scope.isShacl = function (iri) {\n                return iri === \"http%3A%2F%2Frdf4j.org%2Fschema%2Frdf4j%23SHACLShapeGraph\";\n            };\n\n            /// <summary>Get Graphs that are part of the Active Repository.</summary>\n            $scope.getGraphs = function () {\n                if ($scope.getActiveRepository()) {\n                    $scope.loader = true;\n                    RDF4JRepositoriesRestService.getGraphs($scope.getActiveRepository()).success(function (data) {\n                        data.results.bindings.unshift({\n                            contextID: {\n                                type: 'default',\n                                value: 'import.default.graph'\n                            }\n                        });\n                        $scope.graphsByValue = {};\n                        Object.keys(data.results.bindings).forEach(function (key) {\n                            const binding = data.results.bindings[key];\n                            if (binding.contextID.type === 'bnode') {\n                                binding.contextID.value = '_:' + binding.contextID.value;\n                            } else if (binding.contextID.type === 'default') {\n                                binding.contextID.uri = encodeURIComponent('http://www.openrdf.org/schema/sesame#nil');\n                                binding.contextID.clearUri = 'DEFAULT';\n                                binding.contextID.exportUri = 'null';\n                                binding.contextID.longName = 'default graph';\n                            } else {\n                                binding.contextID.uri = encodeURIComponent(binding.contextID.value);\n                                binding.contextID.clearUri = 'GRAPH <' + binding.contextID.value + '>';\n                                binding.contextID.exportUri = encodeURIComponent('<' + binding.contextID.value + '>');\n                                binding.contextID.longName = 'named graph ' + binding.contextID.value;\n                            }\n                            $scope.graphsByValue[binding.contextID.value] = binding.contextID;\n                        });\n                        $scope.graphs = data.results.bindings;\n                        $scope.filteredGraphs = cloneDeep($scope.graphs);\n                        $scope.displayGraphs = $scope.filteredGraphs.slice($scope.pageSize * ($scope.page - 1), $scope.pageSize * $scope.page);\n                        $scope.loader = false;\n                        $scope.selectedGraphs.exportGraphs = {};\n                        $scope.matchedElements = $scope.graphs;\n                    }).error(function (data, status) {\n                        const msg = getError(data, status);\n                        if (msg === 'There is no active location!') {\n                            $repositories.setRepository('');\n                            toastr.error(msg, $translate.instant('common.error'));\n                        }\n                        $scope.loader = false;\n                    });\n                } else {\n                    $scope.loader = false;\n                }\n            };\n\n            $scope.onGraphSearch = function () {\n                $scope.matchedElements = [];\n                $scope.deselectAll();\n                $scope.filterResults();\n            };\n\n            $scope.filterResults = function () {\n                angular.forEach($scope.graphs, function (item) {\n                    if (item.contextID.value.indexOf($scope.exportFilter) !== -1) {\n                        $scope.matchedElements.push(item);\n                    }\n                });\n            };\n\n            $scope.downloadExport = function (downloadUrl, format) {\n                let url = downloadUrl + '&Accept=' + encodeURIComponent(format.type);\n                const auth = localStorage.getItem('com.ontotext.graphdb.auth');\n                if (auth) {\n                    url = url + '&authToken=' + encodeURIComponent(auth);\n                }\n                let win = window.open(url);\n                $timeout(function () {\n                    if (win.document.location.href !== 'about:blank') {\n                        win.close();\n                        toastr.error('Could not export graph. Check GraphDB logs for detailed reason.');\n                    }\n                }, 100);\n\n            };\n\n            /// <summary>Trigger the custom event for DD tooltip.</summary>\n            $scope.openExportDDTooltip = function () {\n                if ($scope.showExportDDTooltip) {\n                    $timeout(function () {\n                        $('#tooltipTarget').trigger('showExportDDTooltip');\n                    }, 0);\n                    $timeout(function () {\n                        $('#tooltipTarget').trigger('showExportDDTooltip');\n                    }, 3000);\n\n                    //Set to false so the tooltip shows only once\n                    $scope.showExportDDTooltip = false;\n\n                }\n            };\n\n            /// <summary>Fill the hidden form and submit it to start download document.</summary>\n            $scope.exportRepo = function (format, contextID) {\n                if (format.type === 'application/rdf+xml' || format.type === 'text/plain' || format.type === 'text/turtle' || format.type === 'application/x-turtlestar' || format.type === 'text/rdf+n3') {\n                    ModalService.openSimpleModal({\n                        title: $translate.instant('common.warning'),\n                        message: decodeHTML($translate.instant('export.format.warning.msg')),\n                        warning: true\n                    }).result\n                        .then(function () {\n                            $scope.startDownload(format, contextID);\n                        });\n                } else {\n                    $scope.startDownload(format, contextID);\n                }\n            };\n\n            $scope.startDownload = function (format, contextID) {\n                //If it's graph set the url for ?context=\n                let downloadUrl;\n                const repo = $repositories.getActiveRepositoryObject();\n                if (contextID) {\n                    downloadUrl = `repositories/${repo.id}/statements?infer=false&context=${$scope.graphsByValue[contextID.value].exportUri}&location=${encodeURIComponent(repo.location)}`;\n                } else {\n                    downloadUrl = `repositories/${repo.id}/statements?infer=false&location=${encodeURIComponent(repo.location)}`;\n                }\n                $scope.downloadExport(downloadUrl, format);\n            };\n\n            $scope.hasMultipleSelected = function () {\n                if (_.isEmpty($scope.selectedGraphs.exportGraphs)) {\n                    return !_.isEmpty($scope.selectedGraphs.exportGraphs);\n                } else {\n                    for (const index in $scope.selectedGraphs.exportGraphs) {\n                        if ($scope.selectedGraphs.exportGraphs[index] === true) {\n                            return true;\n                        }\n                    }\n                    return false;\n                }\n            };\n\n            $scope.exportSelectedGraphs = function (format) {\n                let contextStr = '';\n                for (const index in $scope.selectedGraphs.exportGraphs) {\n                    if ($scope.selectedGraphs.exportGraphs[index]) {\n                        contextStr += 'context=' + $scope.graphsByValue[index].exportUri + '&';\n                    }\n                }\n\n                if (contextStr) {\n                    const startDownload = function () {\n                        contextStr = contextStr.substring(0, contextStr.length - 1);\n                        const downloadUrl = 'repositories/' + $scope.getActiveRepository() + '/statements?infer=false&' + contextStr;\n                        $scope.downloadExport(downloadUrl, format);\n                    };\n\n                    if (format.type === 'application/rdf+xml' || format.type === 'text/plain' || format.type === 'text/turtle' || format.type === 'application/x-turtlestar' || format.type === 'text/rdf+n3') {\n                        ModalService.openSimpleModal({\n                            title: $translate.instant('common.warning'),\n                            message: decodeHTML($translate.instant('export.format.warning.msg')),\n                            warning: true\n                        }).result\n                            .then(function () {\n                                startDownload();\n                            });\n                    } else {\n                        startDownload();\n                    }\n                } else {\n                    ModalService.openSimpleModal({\n                        title: $translate.instant('export.multiple.graph'),\n                        message: $translate.instant('export.check.graphs.msg'),\n                        warning: true\n                    });\n                }\n            };\n\n            $scope.$watch('exportFilter', function () {\n                $scope.filteredGraphs = filterFilter($scope.graphs, $scope.exportFilter);\n                if ($scope.getActiveRepository() && angular.element(document).find('.btn.btn-secondary.btn-sm.dropdown-toggle span').length) {\n                    const valueOfFilteredGraphsButton = angular.element(document).find('.btn.btn-secondary.btn-sm.dropdown-toggle span')[0].innerHTML.trim();\n                    let valueOfFilteredGraphs;\n                    if (valueOfFilteredGraphsButton === 'All') {\n                        valueOfFilteredGraphs = $scope.filteredGraphs.length;\n                    }\n                    if ($scope.filteredGraphs && $scope.filteredGraphs.length > $scope.pageSize && valueOfFilteredGraphsButton !== 'All') {\n                        valueOfFilteredGraphs = $scope.pageSize;\n                    }\n                    $scope.changePageSize(valueOfFilteredGraphs);\n                    $scope.changePagination();\n                }\n            });\n\n            $scope.changePagination = function () {\n                $scope.selectedAll = false;\n                if (angular.isDefined($scope.filteredGraphs)) {\n                    $scope.displayGraphs = $scope.filteredGraphs.slice($scope.pageSize * ($scope.page - 1), $scope.pageSize * $scope.page);\n                }\n            };\n\n            $scope.changePageSize = function (size) {\n                $('.ot-graph-page-size').removeClass('active');\n                $scope.page = 1;\n                if (size) {\n                    $scope.pageSize = size;\n                    $scope.changePagination();\n                }\n                if ($scope.filteredGraphs && $scope.exportFilter !== '') {\n                    $scope.displayGraphs = $scope.filteredGraphs;\n                }\n            };\n\n            $scope.checkAll = function () {\n                $scope.selectedAll = $scope.selectedAll || false;\n\n                angular.forEach($scope.displayGraphs, function (item) {\n                    if (item.contextID.uri) {\n                        $scope.selectedGraphs.exportGraphs[item.contextID.value] = $scope.selectedAll;\n                    }\n                });\n            };\n\n            $scope.deselectAll = function () {\n                $scope.selectedAll = false;\n                angular.forEach($scope.displayGraphs, function (item) {\n                    if (item.contextID.uri) {\n                        $scope.selectedGraphs.exportGraphs[item.contextID.value] = false;\n                    }\n                });\n            };\n\n            $scope.dropRepository = function () {\n                if (!$scope.canWriteActiveRepo()) {\n                    return;\n                }\n                $scope.deleting['*'] = true;\n\n                ModalService.openSimpleModal({\n                    title: $translate.instant('export.confirm.clear.msg'),\n                    message: $translate.instant('export.warning.clear.repo.msg', {repo: $repositories.getActiveRepository()}),\n                    warning: true\n                }).result\n                    .then(function () {\n                        $timeout(function () {\n                            RDF4JRepositoriesRestService.addStatements($repositories.getActiveRepository(), 'update=CLEAR ALL')\n                                .then(function () {\n                                    $scope.deleting['*'] = false;\n                                    toastr.success($translate.instant('export.cleared.repo', {repo: $repositories.getActiveRepository()}));\n                                    $scope.getGraphs();\n                                }, function (err) {\n                                    $scope.deleting['*'] = false;\n                                    const errMsg = err.data;\n                                    if (typeof errMsg == \"string\" && errMsg.indexOf(\"Clearing all statements in the \" +\n                                        \"repository is incompatible with collecting history\") > -1) {\n                                        toastr.error($translate.instant('export.clearing.statements.warning'));\n                                    } else {\n                                        toastr.error($translate.instant('export.cleared.repo.failed.msg', {repo: $repositories.getActiveRepository()}), err);\n                                    }\n                                });\n                        }, 100);\n                    });\n            };\n\n            function dropGraph(ctx) {\n                const longName = ctx.contextID.longName;\n                $scope.deleting[ctx] = true;\n                ModalService.openSimpleModal({\n                    title: $translate.instant('export.confirm.clear.graph'),\n                    message: $translate.instant('export.clear.graph.warning', {longName: longName}),\n                    warning: true\n                }).result\n                    .then(function () {\n                        $timeout(function () {\n                            const data = `update=CLEAR ${ctx.contextID.clearUri}`;\n                            RDF4JRepositoriesRestService.addStatements($repositories.getActiveRepository(), data)\n                                .then(function () {\n                                    $scope.deleting[ctx] = false;\n                                    toastr.success($translate.instant('export.cleared.graph', {longName: longName}));\n                                    $scope.getGraphs();\n                                    $scope.exportFilter = '';\n                                    $scope.filteredGraphs.length = 0;\n                                    $scope.updateResults();\n                                    $scope.changePageSize($scope.pageSize);\n                                }, function (err) {\n                                    $scope.deleting[ctx] = false;\n                                    toastr.error($translate.instant('export.clear.graph.msg', {longName: longName}), getError(err, err.status));\n                                });\n                        }, 100);\n                    }, function () {\n                        $scope.deleting[ctx] = false;\n                    });\n            }\n\n            function dropSelectedGraphs(ctx) {\n                const selectedGraphsForDelete = [];\n                angular.forEach($scope.selectedGraphs.exportGraphs, function (value, key) {\n                    if (value) {\n                        selectedGraphsForDelete.push(key);\n                    }\n                });\n\n                if (selectedGraphsForDelete.length > 0) {\n                    $scope.deleting[ctx] = true;\n                    ModalService.openSimpleModal({\n                        title: $translate.instant('export.confirm.clear.graph'),\n                        message: $translate.instant('export.warning.clear.graph.msg'),\n                        warning: true\n                    }).result.then(function () {\n                        $timeout(function () {\n                            let counterOfClearedGraphs = 0;\n                            angular.forEach(selectedGraphsForDelete, function (contextID) {\n                                const data = `update=CLEAR ${$scope.graphsByValue[contextID].clearUri}`;\n                                RDF4JRepositoriesRestService.addStatements($repositories.getActiveRepository(), data)\n                                    .then(function () {\n                                        $scope.loader = true;\n                                        $scope.selectedGraphs.exportGraphs[contextID] = false;\n                                        delete $scope.selectedGraphs.exportGraphs[contextID];\n                                        counterOfClearedGraphs++;\n                                        if (selectedGraphsForDelete.length === counterOfClearedGraphs) {\n                                            $scope.selectedAll = false;\n                                            $scope.exportFilter = '';\n                                            $scope.filteredGraphs.length = 0;\n                                            $scope.getGraphs();\n                                            $scope.updateResults();\n                                            $scope.changePageSize($scope.pageSize);\n                                            toastr.success($translate.instant('export.cleared.graph.msg'));\n                                            $scope.loader = false;\n                                        }\n                                    }, function (err) {\n                                        const longName = $scope.graphsByValue[contextID].longName;\n                                        toastr.error($translate.instant('export.clear.graph.msg', {longName: longName}), getError(err, err.status));\n                                        $scope.selectedAll = false;\n                                    });\n                            });\n                        }, 100);\n                    }, function () {\n                        $scope.deleting[ctx] = false;\n                    });\n                }\n            }\n\n            $scope.dropContext = function (ctx) {\n                if (!$scope.canWriteActiveRepo()) {\n                    return;\n                }\n                if (angular.isDefined(ctx)) {\n                    dropGraph(ctx);\n                } else {\n                    dropSelectedGraphs(ctx);\n                }\n            };\n        }]);\n"],"sourceRoot":""}