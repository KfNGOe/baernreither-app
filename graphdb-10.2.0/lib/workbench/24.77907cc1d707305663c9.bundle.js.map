{"version":3,"sources":["webpack:///./src/js/angular/namespaces/app.js","webpack:///./src/js/angular/core/directives/paginations.js","webpack:///./src/js/angular/namespaces/controllers.js","webpack:///./src/js/angular/namespaces/directives.js"],"names":["angular","module","run","editableOptions","theme","directive","template","namespaces","pnPrefixRe","pnCharsBase","pnChars","pnCharsU","RegExp","controller","$scope","$http","$repositories","toastr","$modal","ModalService","RepositoriesRestService","RDF4JRepositoriesRestService","$translate","deleteNamespace","namespace","prefix","deleteNamespacePrefix","getActiveRepository","success","length","shift","selectedAll","getNamespaces","searchNamespaces","haveSelected","loader","displayedNamespaces","undefined","instant","error","data","msg","getError","validatePrefixAndNamespace","match","validatePrefix","isUndefined","pageSizeOptions","page","pageSize","results","bindings","map","e","value","sort","a","b","prefixA","toUpperCase","prefixB","matchedElements","changePagination","isDefined","slice","changePageSize","size","$","removeClass","$watch","onNamespaceSearch","deselectAll","filterResults","forEach","item","indexOf","push","saveNamespace","updateNamespacePrefix","editPrefix","oldPrefix","newPrefix","getPrefix","from","to","location","getActiveRepositoryObject","confirmReplace","okCallback","cancelCallback","openSimpleModal","title","message","warning","result","then","editPrefixAndNamespace","namespaceObject","prefixExist","elem","addNamespace","i","removeNamespace","checkAll","selected","deleteSelected","modalInstanceOpened","checkIfSelectedNamespace","$modalInstance","ok","close","cancel","dismiss","$timeout","scope","$last","$parent"],"mappings":"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","file":"24.77907cc1d707305663c9.bundle.js","sourcesContent":["import 'angular/core/services';\nimport 'angular/core/directives';\nimport 'angular/core/services/repositories.service';\nimport 'angular/namespaces/controllers';\nimport 'angular/namespaces/directives';\nimport 'angular/core/directives/paginations';\nimport 'angular-xeditable/dist/js/xeditable.min';\n\nconst modules = [\n    'LocalStorageModule',\n    'xeditable',\n    'ngAnimate',\n    'ngRoute',\n    'toastr',\n    'graphdb.framework.namespaces.controllers',\n    'graphdb.framework.namespaces.directives',\n    'graphdb.framework.core.services.repositories',\n    'graphdb.framework.core.directives',\n    'graphdb.framework.core.directives.paginations'\n];\n\nconst namespacesApp = angular.module('graphdb.framework.namespaces', modules);\n\nnamespacesApp.run(['editableOptions', function (editableOptions) {\n    editableOptions.theme = 'bs3';\n}]);\n","angular.module('graphdb.framework.core.directives.paginations', [])\n    .directive('paginations', function () {\n        return {\n            template: '<pagination class=\"nav navbar-right\" total-items=\"matchedElements.length\" items-per-page=\"pageSize\" ng-model=\"page\" ng-change=\"changePagination()\" direction-links=\"false\" boundary-links=\"true\" max-size=\"5\" rotate=\"true\"></pagination>',\n        };\n    });\n","import 'angular/core/services';\nimport 'angular/core/services/jwt-auth.service';\nimport 'angular/core/services/repositories.service';\nimport 'angular/rest/rdf4j.repositories.rest.service';\n\nconst modules = [\n    'ui.bootstrap',\n    'graphdb.framework.core.services.repositories',\n    'graphdb.framework.core.services.jwtauth',\n    'graphdb.framework.rest.repositories.service',\n    'graphdb.framework.rest.rdf4j.repositories.service',\n    'toastr'\n];\n\nconst namespaces = angular.module('graphdb.framework.namespaces.controllers', modules);\n\n// A regular expression that validates a prefix according to the SPARQL 1.1 specification.\n// XXX: Technically this should include Unicode chars > 0xFFFF but those aren't fully supported in JavaScript\nconst pnPrefixRe = function () {\n    const pnCharsBase = '[A-Z]|[a-z]|[\\u00C0-\\u00D6]|[\\u00D8-\\u00F6]|[\\u00F8-\\u02FF]|[\\u0370-\\u037D]'\n        + '|[\\u037F-\\u1FFF]|[\\u200C-\\u200D]|[\\u2070-\\u218F]|[\\u2C00-\\u2FEF]|[\\u3001-\\uD7FF]'\n        + '|[\\uF900-\\uFDCF]|[\\uFDF0-\\uFFFD]';\n    const pnCharsU = pnCharsBase + '|_';\n    const pnChars = pnCharsU + '|-|[0-9]|\\u00B7|[\\u0300-\\u036F]|[\\u203F-\\u2040]';\n\n    return new RegExp('^(?:' + pnCharsBase + ')(?:(?:' + pnChars + '|\\\\.)*(?:' + pnChars + '))?$');\n}();\n\nfunction validatePrefix(prefix) {\n    return prefix === '' || prefix.match(pnPrefixRe);\n}\n\nnamespaces.controller('NamespacesCtrl', ['$scope', '$http', '$repositories', 'toastr', '$modal', 'ModalService', 'RepositoriesRestService', 'RDF4JRepositoriesRestService', '$translate',\n    function ($scope, $http, $repositories, toastr, $modal, ModalService, RepositoriesRestService, RDF4JRepositoriesRestService, $translate) {\n        $scope.namespaces = {};\n        $scope.namespace = {};\n        $scope.loader = false;\n        $scope.haveSelected = false;\n        $scope.pageSizeOptions = [10, 20, 50, 100];\n        $scope.page = 1;\n        $scope.pageSize = $scope.pageSizeOptions[0];\n        $scope.displayedNamespaces = [];\n\n        $scope.getNamespaces = function () {\n            if (!$repositories.getActiveRepository()) {\n                return;\n            }\n\n            $scope.loader = true;\n            $scope.namespaces = {};\n            RDF4JRepositoriesRestService.getNamespaces($repositories.getActiveRepository())\n                .success(function (data) {\n                    $scope.namespaces = data.results.bindings.map(function (e) {\n                        return {\n                            prefix: e.prefix.value,\n                            namespace: e.namespace.value\n                        };\n                    });\n                    if ($scope.namespaces.length > 0) {\n                        $scope.namespaces.sort(function (a, b) {\n                            const prefixA = a.prefix.toUpperCase(); // ignore upper and lowercase\n                            const prefixB = b.prefix.toUpperCase(); // ignore upper and lowercase\n                            if (prefixA < prefixB) {\n                                return -1;\n                            }\n                            if (prefixA > prefixB) {\n                                return 1;\n                            }\n                            return 0;\n                        });\n                        $scope.matchedElements = $scope.namespaces;\n                        $scope.changePagination();\n                    }\n                    if ($scope.namespaces.length === 0) {\n                        // Remove the loader ourselves\n                        $scope.loader = false;\n                    } // else let the loaderPostRepeatDirective do it\n                }).error(function (data) {\n                    const msg = getError(data);\n                    toastr.error(msg);\n                    $scope.loader = false;\n                });\n        };\n\n        $scope.changePagination = function () {\n            if (angular.isDefined($scope.namespaces)) {\n                $scope.displayedNamespaces = $scope.namespaces.slice($scope.pageSize * ($scope.page - 1), $scope.pageSize * $scope.page);\n            }\n        };\n\n        $scope.changePageSize = function (size) {\n            $('.ot-graph-page-size').removeClass('active');\n            $scope.page = 1;\n            $scope.searchNamespaces = '';\n            if (size) {\n                $scope.getNamespaces();\n                $scope.pageSize = size;\n            }\n        };\n\n        $scope.$watch('matchedElements', function () {\n            if (angular.isDefined($scope.matchedElements)) {\n                $scope.displayedNamespaces = $scope.matchedElements.slice($scope.pageSize * ($scope.page - 1), $scope.pageSize * $scope.page);\n            }\n        });\n\n        $scope.$watch(function () {\n            return $repositories.getActiveRepository();\n        }, function () {\n            $scope.searchNamespaces = '';\n            $scope.getNamespaces();\n            $scope.selectedAll = false;\n        });\n\n        $scope.onNamespaceSearch = function() {\n            $scope.haveSelected = false;\n            $scope.selectedAll = false;\n            $scope.matchedElements = [];\n            $scope.deselectAll();\n            $scope.filterResults();\n        };\n\n        $scope.filterResults = function() {\n            angular.forEach($scope.namespaces, function (item) {\n                if (item.namespace.indexOf($scope.searchNamespaces) !== -1 || item.prefix.indexOf($scope.searchNamespaces) !== -1) {\n                    $scope.matchedElements.push(item);\n                }\n            });\n        };\n\n        $scope.saveNamespace = function (prefix, namespace) {\n            $scope.loader = true;\n            return RDF4JRepositoriesRestService.updateNamespacePrefix($repositories.getActiveRepository(), namespace, prefix)\n                .success(function () {\n                    $scope.getNamespaces();\n                    $scope.loader = false;\n                }).error(function (data) {\n                    const msg = getError(data);\n                    toastr.error(msg, $translate.instant('common.error'));\n                    $scope.loader = false;\n                });\n        };\n\n        $scope.editPrefix = function (oldPrefix, newPrefix) {\n            $scope.loader = true;\n            RepositoriesRestService.getPrefix($repositories.getActiveRepository(), {\n                from: oldPrefix, to: newPrefix, location: $repositories.getActiveRepositoryObject().location})\n                .success(function () {\n                    $scope.getNamespaces();\n                    $scope.loader = false;\n                }).error(function (data) {\n                    const msg = getError(data);\n                    toastr.error(msg, $translate.instant('common.error'));\n                    $scope.loader = false;\n                });\n        };\n\n        $scope.confirmReplace = function (okCallback, cancelCallback) {\n            ModalService.openSimpleModal({\n                title: $translate.instant('namespace.confirm.replace'),\n                message: $translate.instant('namespace.already.exists.msg'),\n                warning: true\n            }).result.then(okCallback, cancelCallback);\n        };\n\n        $scope.editPrefixAndNamespace = function (prefix, namespace, namespaceObject) {\n            if (angular.isUndefined(prefix)) {\n                prefix = '';\n            }\n\n            if (!validatePrefixAndNamespace(prefix, namespace)) {\n                return '';\n            }\n\n            let prefixExist = false;\n            const oldPrefix = namespaceObject.prefix;\n            angular.forEach($scope.namespaces, function (elem) {\n                if (elem.prefix === prefix && oldPrefix !== prefix) {\n                    prefixExist = true;\n                }\n            });\n            if (prefixExist) {\n                $scope.confirmReplace(function () {\n                    $scope.saveNamespace(oldPrefix, namespace).then(function () {\n                        if (oldPrefix !== prefix) {\n                            $scope.editPrefix(oldPrefix, prefix);\n                        }\n                    });\n                }, function () {\n                    $scope.getNamespaces();\n                });\n            } else if (angular.isDefined(prefixExist)) {\n                $scope.saveNamespace(oldPrefix, namespace).then(function () {\n                    if (oldPrefix !== prefix) {\n                        $scope.editPrefix(oldPrefix, prefix);\n                    }\n                });\n            }\n        };\n\n        $scope.addNamespace = function () {\n            if (angular.isUndefined($scope.namespace.prefix)) {\n                $scope.namespace.prefix = '';\n            }\n\n            if (!validatePrefixAndNamespace($scope.namespace.prefix, $scope.namespace.namespace)) {\n                return;\n            }\n\n            $scope.selectedAll = false;\n            let prefixExist = false;\n            for (let i = 0; i < $scope.namespaces.length; i++) {\n                if ($scope.namespaces[i].prefix === $scope.namespace.prefix) {\n                    prefixExist = true;\n                }\n            }\n            if (prefixExist) {\n                $scope.confirmReplace(function () {\n                    $scope.saveNamespace($scope.namespace.prefix, $scope.namespace.namespace);\n                    $scope.namespace = {};\n                });\n            } else {\n                $scope.saveNamespace($scope.namespace.prefix, $scope.namespace.namespace);\n                $scope.namespace = {};\n            }\n        };\n\n        $scope.removeNamespace = function (namespace) {\n            ModalService.openSimpleModal({\n                title: $translate.instant('common.confirm.delete'),\n                message: $translate.instant('namespace.warning.delete.msg', {prefix: namespace.prefix}),\n                warning: true\n            }).result.then(function () {\n                deleteNamespace(namespace);\n            });\n        };\n\n        $scope.checkAll = function () {\n            angular.forEach($scope.displayedNamespaces, function (item) {\n                item.selected = $scope.selectedAll;\n            });\n        };\n\n        $scope.deleteSelected = function () {\n            const openModalInstance = function () {\n                ModalService.openSimpleModal({\n                    title: $translate.instant('common.confirm.delete'),\n                    message: $translate.instant('namespace.warning.delete.selected'),\n                    warning: true\n                }).result.then(function () {\n                    $scope.loader = true;\n                    const namespaces = [];\n                    angular.forEach($scope.displayedNamespaces, function (namespace) {\n                        if (namespace.selected) {\n                            namespaces.push(namespace);\n                        }\n                    });\n                    deleteNamespace(namespaces.shift(), namespaces);\n                    $scope.selectedAll = false;\n                }, function () {\n                    $scope.getNamespaces();\n                    $scope.selectedAll = false;\n                    $scope.searchNamespaces = '';\n                });\n            };\n\n            let modalInstanceOpened = false;\n            angular.forEach($scope.displayedNamespaces, function (namespace) {\n                if (!modalInstanceOpened) {\n                    if (namespace.selected) {\n                        modalInstanceOpened = true;\n                        openModalInstance();\n                    }\n                }\n            });\n        };\n\n        function deleteNamespace(namespace, namespaces) {\n            let prefix;\n            if (typeof namespace === 'object') {\n                prefix = namespace.prefix;\n            } else {\n                prefix = namespace;\n            }\n            RDF4JRepositoriesRestService.deleteNamespacePrefix($repositories.getActiveRepository(), prefix)\n                .success(function () {\n                    if (namespaces && namespaces.length > 0) {\n                        namespace = namespaces.shift();\n                        deleteNamespace(namespace, namespaces);\n                    } else {\n                        $scope.selectedAll = false;\n                        $scope.namespace = {};\n                        $scope.getNamespaces();\n                        $scope.searchNamespaces = '';\n                        $scope.haveSelected = false;\n                        $scope.loader = false;\n                        $scope.displayedNamespaces = [];\n                        if (namespaces === undefined) {\n                            toastr.success($translate.instant('namespace.prefix.deleted.successfully', {prefix: prefix}), '');\n                        } else {\n                            toastr.success($translate.instant('namespace.selected.namespaces.deleted.successfully'), '');\n                        }\n                    }\n                }).error(function (data) {\n                    const msg = getError(data);\n                    toastr.error(msg, $translate.instant('common.error'));\n                    $scope.loader = false;\n                });\n        }\n\n        $scope.checkIfSelectedNamespace = function () {\n            $scope.haveSelected = false;\n            angular.forEach($scope.namespaces, function (item) {\n                if (item.selected) {\n                    $scope.haveSelected = true;\n                }\n            });\n        };\n\n        $scope.deselectAll = function () {\n            angular.forEach($scope.namespaces, function (item) {\n                item.selected = false;\n            });\n        };\n\n        function validatePrefixAndNamespace(prefix, namespace) {\n            if (!validatePrefix(prefix)) {\n                toastr.error($translate.instant('namespace.invalid.prefix', {prefix: prefix}, $translate.instant('common.error')));\n                return false;\n            }\n\n            if (angular.isUndefined(namespace) || namespace === '') {\n                toastr.error($translate.instant('namespace.warning.provide.namespace'), $translate.instant('common.error'));\n                return false;\n            }\n\n            return true;\n        }\n    }]);\n\nnamespaces.controller('StandartModalCtrl', ['$scope', '$modalInstance', function ($scope, $modalInstance) {\n\n    $scope.ok = function () {\n        const result = true;\n        $modalInstance.close(result);\n    };\n\n    $scope.cancel = function () {\n        $modalInstance.dismiss('cancel');\n    };\n}]);\n","const namespacesDirectives = angular.module('graphdb.framework.namespaces.directives', ['ngRoute']);\n\n// This directive will set the loader to false once the respective ngRepeat is done loading\nnamespacesDirectives.directive('loaderPostRepeatDirective', ['$timeout', function ($timeout) {\n    return function (scope) {\n        if (scope.$last) {\n            // It's important to do this with timeout:\n            //   \"...since the setTimeout function gets pushed to the end of the queue of the browser,\n            //   its always right after everything is done in angular, usually ngRepeat which continues\n            //   after its parents postLinking function\"\n            $timeout(function () {\n                scope.$parent.loader = false;\n            }, 0);\n        }\n    };\n}]);\n"],"sourceRoot":""}