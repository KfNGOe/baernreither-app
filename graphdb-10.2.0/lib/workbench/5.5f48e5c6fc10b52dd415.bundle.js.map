{"version":3,"sources":["webpack:///./src/js/angular/repositories/repository.constants.js","webpack:///./src/js/angular/repositories/controllers.js"],"names":["STATIC_RULESETS","id","name","REPOSITORY_TYPES","graphdbRepo","free","eeWorker","eeMaster","ontop","se","fedx","FILENAME_PATTERN","RegExp","NUMBER_PATTERN","getFileName","path","lastIdx","lastIndexOf","substring","parseNumberParamsIfNeeded","params","queryTimeout","value","parseInt","queryLimitResults","validationResultsLimitTotal","validationResultsLimitPerConstraint","leftJoinWorkerThreads","boundJoinBlockSize","joinWorkerThreads","unionWorkerThreads","getShaclOptionsClass","optionsModule","document","getElementById","isAriaExpanded","getAttribute","validateNumberFields","invalidValues","isInvalidQueryTimeout","test","isInvalidValidationResultsLimitTotal","isInvalidValidationResultsLimitPerConstraint","isInvalidQueryLimit","isInvalidLeftJoinWorkerThreads","isInvalidBoundJoinBlockSize","isInvalidJoinWorkerThreads","isInvalidUnionWorkerThreads","getInvalidParameterErrorMessage","param","$translate","instant","checkInvalidValues","invalidValuesKeys","Object","keys","invalidValuesVal","values","i","length","getDocBase","productInfo","productShortVersion","getFilteredLocations","$repositories","getLocations","then","locations","filter","location","errorMsg","degradedReason","LocationsAndRepositoriesCtrl","$scope","$rootScope","$modal","toastr","ModalService","$jwtAuth","LocationsRestService","LocalStorageAdapter","$interval","$q","GuidesService","loader","isLocationInactive","active","hasActiveLocation","getLocationsAbortRequestPromise","defer","finally","getActiveLocation","getLocationError","getDegradedReason","getRepositories","isRepoActive","repo","deleteLocation","uri","openSimpleModal","title","message","warning","result","addLocationHttp","dataAddLocation","addLocation","success","init","error","data","msg","getError","open","templateUrl","windowClass","controller","editLocationHttp","dataEditLocation","editLocation","resolve","setRepository","deleteRepository","repository","repositoryId","cashedDependenciesGraphPrefix","cashedClassHierarchyGraphPrefix","angular","forEach","key","startsWith","remove","removeCachedGraphsOnDelete","restartRepository","toggleDefaultRepository","getDefaultRepository","setDefaultRepository","getRepositoryDownloadLink","url","type","token","getAuthToken","encodeURIComponent","copyToClipboard","openCopyToClipboardModal","fromFile","openActiveLocationSettings","timer","isActive","guidePaused","initQuick","$on","cancel","getRepositoriesFromLocation","locationId","UploadRepositoryConfigCtrl","$modalInstance","Upload","upload","files","uploadFile","ok","uploadFileLoader","method","config","close","dismiss","AddLocationCtrl","newLocation","docBase","isValidLocation","indexOf","EditLocationCtrl","editedLocation","copy","ChooseRepositoryCtrl","$location","repositoryTypes","chooseRepositoryType","repoType","AddRepositoryCtrl","$timeout","$routeParams","RepositoriesRestService","repositoryType","rulesets","slice","enable","pageTitle","repositoryInfo","changedLocation","$broadcast","getConfig","getRepositoryConfiguration","member","element","find","focus","isEnterprise","isValidEERepository","isFreeEdition","isValidSERepository","isValidFRRepository","isValidOntopRepository","isValidFedXRepository","setPageTitle","activeLocation","isInvalidPieFile","uploadRuleset","ruleset","progress","evt","fileName","newValue","fileLocation","rulesetPie","unshift","rulesetPieFile","errorMessage","noMembersError","goBackToPreviousLocation","isDefined","previous","$$search","createRepoHttp","createRepository","repoId","catch","createRepo","isInvalidRepoName","rulesetWarning","pp","undefined","disableSameAs","validateNumberInput","autofocusId","EditRepositoryFileCtrl","file","getRepositoryFileContent","fileContent","content","EditRepositoryCtrl","editRepoPage","canEditRepoId","restartRequested","saveRepoId","$watch","getRepository","response","ifRulesetExists","item","setRepositoryType","saveId","status","toastrMsg","allowHtml","setTimeout","editRepoHttp","editRepository","modalMsg","editRepositoryId","module","$inject"],"mappings":"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","file":"5.5f48e5c6fc10b52dd415.bundle.js","sourcesContent":["export const STATIC_RULESETS = [\n    {id: 'empty', name: 'No inference'},\n    {id: 'rdfs-optimized', name: 'RDFS (Optimized)'},\n    {id: 'rdfs', name: 'RDFS'},\n    {id: 'rdfsplus-optimized', name: 'RDFS-Plus (Optimized)'},\n    {id: 'owl-horst-optimized', name: 'OWL-Horst (Optimized)'},\n    {id: 'owl-horst', name: 'OWL-Horst'},\n    {id: 'owl2-ql-optimized', name: 'OWL2-QL (Optimized)'},\n    {id: 'owl2-ql', name: 'OWL2-QL'},\n    {id: 'owl-max-optimized', name: 'OWL-Max (Optimized)'},\n    {id: 'owl-max', name: 'OWL-Max'},\n    {id: 'owl2-rl-optimized', name: 'OWL2-RL (Optimized)'},\n    {id: 'owl2-rl', name: 'OWL2-RL'},\n\n];\n\nexport const REPOSITORY_TYPES = {graphdbRepo: 'graphdb', free: 'free', eeWorker: 'worker', eeMaster: 'master', ontop: 'ontop', se: 'se', fedx: 'fedx'};\nexport const FILENAME_PATTERN = new RegExp('^[a-zA-Z0-9-_]+$');\nexport const NUMBER_PATTERN = new RegExp('^[0-9]+$');\n","import {\n    FILENAME_PATTERN,\n    NUMBER_PATTERN,\n    REPOSITORY_TYPES,\n    STATIC_RULESETS\n} from \"./repository.constants\";\nimport {decodeHTML} from \"../../../app\";\n\nexport const getFileName = function (path) {\n    let lastIdx = path.lastIndexOf('/');\n    if (lastIdx === -1) {\n        lastIdx = path.lastIndexOf('\\\\');\n    }\n    let name = path;\n    if (lastIdx !== -1) {\n        name = name.substring(lastIdx + 1);\n    }\n    return name;\n};\n\nconst parseNumberParamsIfNeeded = function (params) {\n    if (params) {\n        if (params.queryTimeout) {\n            params.queryTimeout.value = parseInt(params.queryTimeout.value);\n        }\n        if (params.queryLimitResults && params.validationResultsLimitTotal && params.validationResultsLimitPerConstraint) {\n            // Parse parameters properly to number\n            params.queryLimitResults.value = parseInt(params.queryLimitResults.value);\n            params.validationResultsLimitTotal.value = parseInt(params.validationResultsLimitTotal.value);\n            params.validationResultsLimitPerConstraint.value = parseInt(params.validationResultsLimitPerConstraint.value);\n        } else if (params.leftJoinWorkerThreads && params.boundJoinBlockSize && params.joinWorkerThreads && params.unionWorkerThreads) {\n            params.leftJoinWorkerThreads.value = parseInt(params.leftJoinWorkerThreads.value);\n            params.boundJoinBlockSize.value = parseInt(params.boundJoinBlockSize.value);\n            params.joinWorkerThreads.value = parseInt(params.joinWorkerThreads.value);\n            params.unionWorkerThreads.value = parseInt(params.unionWorkerThreads.value);\n        }\n    }\n};\n\nconst parseMemberParamIfNeeded = function (param) {\n    if (param && param.member) {\n        param.member.value = [];\n    }\n};\n\nconst getShaclOptionsClass = function () {\n    const optionsModule = document.getElementById('shaclOptions');\n\n    if (optionsModule) {\n        const isAriaExpanded = optionsModule.getAttribute('aria-expanded');\n        if (isAriaExpanded && isAriaExpanded === 'true') {\n            return 'fa fa-angle-down';\n        }\n    }\n    return 'fa fa-angle-right';\n};\n\nconst validateNumberFields = function (params, invalidValues) {\n    if (params.queryTimeout) {\n        invalidValues.isInvalidQueryTimeout = !NUMBER_PATTERN.test(params.queryTimeout.value);\n    }\n    if (params.validationResultsLimitTotal && params.validationResultsLimitPerConstraint && params.queryLimitResults) {\n        invalidValues.isInvalidValidationResultsLimitTotal = !NUMBER_PATTERN.test(params.validationResultsLimitTotal.value);\n        invalidValues.isInvalidValidationResultsLimitPerConstraint = !NUMBER_PATTERN.test(params.validationResultsLimitPerConstraint.value);\n        invalidValues.isInvalidQueryLimit = !NUMBER_PATTERN.test(params.queryLimitResults.value);\n    } else if (params.leftJoinWorkerThreads && params.boundJoinBlockSize && params.joinWorkerThreads\n        && params.unionWorkerThreads) {\n        invalidValues.isInvalidLeftJoinWorkerThreads = !NUMBER_PATTERN.test(params.leftJoinWorkerThreads.value);\n        invalidValues.isInvalidBoundJoinBlockSize = !NUMBER_PATTERN.test(params.boundJoinBlockSize.value);\n        invalidValues.isInvalidJoinWorkerThreads = !NUMBER_PATTERN.test(params.joinWorkerThreads.value);\n        invalidValues.isInvalidUnionWorkerThreads = !NUMBER_PATTERN.test(params.unionWorkerThreads.value);\n    }\n};\n\nconst getInvalidParameterErrorMessage = function (param, $translate) {\n    if (param === \"isInvalidQueryLimit\") {\n        return $translate.instant('invalid.query.limit');\n    } else if (param === \"isInvalidQueryTimeout\") {\n        return $translate.instant('invalid.query.timeout');\n    } else if (param === \"isInvalidValidationResultsLimitTotal\") {\n        return $translate.instant('invalid.validation.results.limit.total');\n    } else if (param === \"isInvalidValidationResultsLimitPerConstraint\") {\n        return $translate.instant('invalid.validation.results.limit.per.constraint');\n    } else if (param === \"isInvalidJoinWorkerThreads\") {\n        return $translate.instant('invalid.join.worker.threads');\n    } else if (param === \"isInvalidLeftJoinWorkerThreads\") {\n        return $translate.instant('invalid.left.join.worker.threads');\n    } else if (param === \"isInvalidUnionWorkerThreads\") {\n        return $translate.instant('invalid.union.worker.threads');\n    } else if (param === \"isInvalidBoundJoinBlockSize\") {\n        return $translate.instant('invalid.bound.join.block.size');\n    }\n};\n\nconst checkInvalidValues = function (invalidValues, $translate) {\n    const invalidValuesKeys = Object.keys(invalidValues);\n    const invalidValuesVal = Object.values(invalidValues);\n\n    for (let i = 0; i < invalidValuesKeys.length; i++) {\n        if (invalidValuesVal[i]) {\n            return getInvalidParameterErrorMessage(invalidValuesKeys[i], $translate);\n        }\n    }\n    return '';\n};\n\nconst getDocBase = function (productInfo) {\n    return `https://graphdb.ontotext.com/documentation/${productInfo.productShortVersion}`;\n};\nconst filterLocations = function (result) {\n    return result.filter((location) => !location.errorMsg && !location.degradedReason);\n};\n\n/**\n * Gets the remote locations that are error free and without degraded reason\n * @param {*} $repositories the repositories service\n * @return {[] | Promise} returns the locations as array or a promise of the array\n */\nconst getFilteredLocations = function ($repositories) {\n    // Don't allow the user to create repository on location with error or degradeded reason\n    return $repositories.getLocations().then((locations) => filterLocations(locations));\n};\n\nconst modules = [\n    'ngCookies',\n    'ui.bootstrap',\n    'graphdb.framework.core.services.repositories',\n    'graphdb.framework.utils.localstorageadapter',\n    'toastr',\n    'ngFileUpload'\n];\n\nangular.module('graphdb.framework.repositories.controllers', modules)\n    .controller('LocationsAndRepositoriesCtrl', LocationsAndRepositoriesCtrl)\n    .controller('AddLocationCtrl', AddLocationCtrl)\n    .controller('EditLocationCtrl', EditLocationCtrl)\n    .controller('ChooseRepositoryCtrl', ChooseRepositoryCtrl)\n    .controller('AddRepositoryCtrl', AddRepositoryCtrl)\n    .controller('EditRepositoryCtrl', EditRepositoryCtrl)\n    .controller('EditRepositoryFileCtrl', EditRepositoryFileCtrl)\n    .controller('UploadRepositoryConfigCtrl', UploadRepositoryConfigCtrl);\n\nLocationsAndRepositoriesCtrl.$inject = ['$scope', '$rootScope', '$modal', 'toastr', '$repositories', 'ModalService', '$jwtAuth', 'LocationsRestService',\n    'LocalStorageAdapter', '$interval', '$translate', '$q', 'GuidesService'];\n\nfunction LocationsAndRepositoriesCtrl($scope, $rootScope, $modal, toastr, $repositories, ModalService, $jwtAuth, LocationsRestService,\n    LocalStorageAdapter, $interval, $translate, $q, GuidesService) {\n    $scope.loader = true;\n\n    $scope.isLocationInactive = function (location) {\n        return !location.active || !$scope.hasActiveLocation();\n    };\n\n    const getLocationsAbortRequestPromise = $q.defer();\n    //Get locations\n    function getLocations() {\n        return $repositories.getLocations(getLocationsAbortRequestPromise)\n            .then((locations) => {\n                $scope.locations = locations;\n            })\n            .finally(() => $scope.loader = false);\n    }\n\n    $scope.hasActiveLocation = function () {\n        return $repositories.hasActiveLocation();\n    };\n\n    $scope.getActiveLocation = function () {\n        return $repositories.getActiveLocation();\n    };\n\n    $scope.getLocationError = function () {\n        return $repositories.getLocationError();\n    };\n\n    $scope.getDegradedReason = function () {\n        return $repositories.getDegradedReason();\n    };\n\n    $scope.getRepositories = function () {\n        return $repositories.getRepositories();\n    };\n\n    $scope.isRepoActive = function (repo) {\n        return $repositories.isRepoActive(repo);\n    };\n\n    //Delete location\n    $scope.deleteLocation = function (uri) {\n        ModalService.openSimpleModal({\n            title: $translate.instant('location.confirm.detach'),\n            message: $translate.instant('location.confirm.detach.warning', {uri: uri}),\n            warning: true\n        }).result\n            .then(function () {\n                $scope.loader = true;\n                $repositories.deleteLocation(uri).finally(() => getLocations());\n            });\n    };\n\n    //Add new location\n\n    $scope.addLocationHttp = function (dataAddLocation) {\n        $scope.loader = true;\n        LocationsRestService.addLocation(dataAddLocation)\n            .success(function () {\n                //Reload locations and repositories\n                $repositories.init();\n            })\n            .error(function (data) {\n                const msg = getError(data);\n                toastr.error(msg, $translate.instant('common.error'));\n            })\n            .finally(() => getLocations());\n    };\n\n    $scope.addLocation = function () {\n        $modal.open({\n            templateUrl: 'js/angular/templates/modal/add-location.html',\n            windowClass: 'addLocationDialog',\n            controller: 'AddLocationCtrl'\n        }).result\n            .then(function (dataAddLocation) {\n                $scope.addLocationHttp(dataAddLocation);\n            });\n    };\n\n    //Edit location\n    $scope.editLocationHttp = function (dataEditLocation) {\n        $scope.loader = true;\n        LocationsRestService.editLocation(dataEditLocation)\n            .success(function () {\n                //Reload locations and repositories\n                $repositories.init();\n            })\n            .error(function (data) {\n                const msg = getError(data);\n                toastr.error(msg, $translate.instant('common.error'));\n            })\n            .finally(() => getLocations());\n    };\n\n    $scope.editLocation = function (location) {\n        const modalInstance = $modal.open({\n            templateUrl: 'js/angular/templates/modal/edit-location.html',\n            controller: 'EditLocationCtrl',\n            resolve: {\n                location: function () {\n                    return location;\n                }\n            }\n        });\n\n        modalInstance.result.then(function (dataEditLocation) {\n            $scope.editLocationHttp(dataEditLocation);\n        }, function () {\n        });\n    };\n\n    //Change repository\n    $scope.setRepository = function (repo) {\n        $repositories.setRepository(repo);\n    };\n\n    //Delete repository\n    $scope.deleteRepository = function (repository) {\n        ModalService.openSimpleModal({\n            title: $translate.instant('common.confirm.delete'),\n            message: decodeHTML($translate.instant('delete.repo.warning.msg', {repositoryId: repository.id})),\n            warning: true\n        }).result\n            .then(function () {\n                $scope.loader = true;\n                $repositories.deleteRepository(repository)\n                    .finally(() => {\n                        getLocations();\n                        $scope.loader = false;\n                    });\n                removeCachedGraphsOnDelete(repository);\n            });\n    };\n\n    $scope.restartRepository = function (repository) {\n        ModalService.openSimpleModal({\n            title: $translate.instant('confirm.restart.repo'),\n            message: decodeHTML($translate.instant('confirm.restart.repo.warning.msg', {repositoryId: repository.id})),\n            warning: true\n        }).result\n            .then(function () {\n                $scope.loader = true;\n                $repositories.restartRepository(repository).finally(() => getLocations());\n            });\n    };\n\n    $scope.toggleDefaultRepository = function (repositoryId) {\n        if ($scope.getDefaultRepository() === repositoryId) {\n            // unset\n            $repositories.setDefaultRepository(null);\n        } else {\n            // set\n            $repositories.setDefaultRepository(repositoryId);\n        }\n    };\n\n    $scope.getDefaultRepository = function () {\n        return $repositories.getDefaultRepository();\n    };\n\n    /* Unused, data urls don't behave well in all browsers, avoid them when possible\n     $scope.getRepoTurtleConfig = function (repository) {\n     function downloadRepoConfig(repoTurtleConfig, repository) {\n     $('.download-turtle-config')\n     .mouseup(function () {\n     $(this)\n     .attr('href', repoTurtleConfig)\n     .attr('download', repository.id + '-config.ttl')\n     });\n     }\n\n     $repositories.getRepositoryTurtleConfig(repository)\n     .success(function (response) {\n     var repoTurtleConfigDownload = 'data:application/octet-stream;charset=utf-8;base64,'\n     + btoa(unescape(encodeURIComponent(response)));\n     downloadRepoConfig(repoTurtleConfigDownload, repository);\n     })\n     .error(function () {\n     toastr.error('Error getting repository configuration for '' + repository.id + ''');\n     });\n     };\n     */\n\n    $scope.getRepositoryDownloadLink = function (repository) {\n        let url = `rest/repositories/${repository.id}${(repository.type === REPOSITORY_TYPES.ontop ? '/download-zip'\n            : '/download-ttl')}?location=${repository.location}`;\n        const token = $jwtAuth.getAuthToken();\n        if (token) {\n            url = `${url}&authToken=${encodeURIComponent(token)}`;\n        }\n        return url;\n    };\n\n    ///Copy to clipboard popover options\n    $scope.copyToClipboard = function (uri) {\n        ModalService.openCopyToClipboardModal(uri);\n    };\n\n    $scope.fromFile = function () {\n        const modalInstance = $modal.open({\n            templateUrl: 'js/angular/templates/modal/upload-repository-config.html',\n            controller: 'UploadRepositoryConfigCtrl'\n        });\n        modalInstance.result.then(function () {\n            $repositories.init();\n        });\n    };\n\n    //Delete repository\n    $scope.openActiveLocationSettings = function () {\n        $modal.open({\n            templateUrl: 'js/angular/settings/modal/location-settings.html',\n            controller: 'ActiveLocationSettingsCtrl'\n        });\n    };\n\n    getLocations();\n    const timer = $interval(function () {\n        if (GuidesService.isActive() && !$rootScope.guidePaused) {\n            // Don't refresh list while a guide is active\n            return;\n        }\n\n        // Update repositories state\n        $repositories.initQuick();\n        getLocations();\n    }, 5000);\n\n    $scope.$on('$destroy', function () {\n        $interval.cancel(timer);\n        // If there is a getLocations request in progress, abort it so the service can properly clear flags\n        if (getLocationsAbortRequestPromise) {\n            getLocationsAbortRequestPromise.resolve();\n        }\n    });\n\n    function removeCachedGraphsOnDelete(repo) {\n        const cashedDependenciesGraphPrefix = `dependencies-selectedGraph-${repo.id}`;\n        const cashedClassHierarchyGraphPrefix = `classHierarchy-selectedGraph-${repo.id}`;\n        angular.forEach(LocalStorageAdapter.keys(), function (key) {\n            // remove everything but the hide prefixes setting, it should always persist\n            if (key.startsWith(cashedClassHierarchyGraphPrefix) || key.startsWith(cashedDependenciesGraphPrefix)) {\n                LocalStorageAdapter.remove(key);\n            }\n        });\n    }\n\n    $scope.getRepositoriesFromLocation = function (locationId) {\n        return $repositories.getRepositoriesFromLocation(locationId);\n    };\n}\n\nUploadRepositoryConfigCtrl.$inject = ['$scope', '$modalInstance', 'Upload', 'toastr', '$translate'];\n\nfunction UploadRepositoryConfigCtrl($scope, $modalInstance, Upload, toastr, $translate) {\n    $scope.upload = function (files) {\n        if (files && files.length) {\n            $scope.uploadFile = files[0];\n        }\n    };\n    $scope.ok = function () {\n        if ($scope.uploadFile) {\n            $scope.uploadFileLoader = true;\n            Upload.upload({\n                url: 'rest/repositories',\n                method: 'POST',\n                data: {config: $scope.uploadFile}\n            })\n                .success(function () {\n                    $scope.uploadFileLoader = false;\n                    $modalInstance.close();\n                })\n                .error(function (data) {\n                    const msg = getError(data);\n                    toastr.error(msg, $translate.instant('common.error'));\n                    $scope.uploadFileLoader = false;\n                });\n        }\n    };\n    $scope.cancel = function () {\n        $modalInstance.dismiss('cancel');\n    };\n}\n\nAddLocationCtrl.$inject = ['$scope', '$modalInstance', 'toastr', 'productInfo', '$translate'];\n\nfunction AddLocationCtrl($scope, $modalInstance, toastr, productInfo, $translate) {\n\n    $scope.newLocation = {\n        'uri': '',\n        'authType': 'none',\n        'username': '',\n        'password': '',\n        'active': false\n    };\n    $scope.docBase = getDocBase(productInfo);\n\n    $scope.isValidLocation = function () {\n        return ($scope.newLocation.uri.length < 6 ||\n                $scope.newLocation.uri.indexOf('http:') === 0 || $scope.newLocation.uri.indexOf('https:') === 0)\n            && $scope.newLocation.uri.indexOf('/repositories') <= -1;\n    };\n\n    $scope.ok = function () {\n        if (!$scope.newLocation) {\n            toastr.error($translate.instant('location.cannot.be.empty.error'));\n            return;\n        }\n        $modalInstance.close($scope.newLocation);\n    };\n\n    $scope.cancel = function () {\n        $modalInstance.dismiss('cancel');\n    };\n}\n\nEditLocationCtrl.$inject = ['$scope', '$modalInstance', 'location', 'productInfo'];\n\nfunction EditLocationCtrl($scope, $modalInstance, location, productInfo) {\n\n    $scope.editedLocation = angular.copy(location);\n    $scope.docBase = getDocBase(productInfo);\n\n    $scope.ok = function () {\n        $modalInstance.close($scope.editedLocation);\n    };\n\n    $scope.cancel = function () {\n        $modalInstance.dismiss('cancel');\n    };\n}\n\nChooseRepositoryCtrl.$inject = ['$scope', '$location'];\n\nfunction ChooseRepositoryCtrl($scope, $location) {\n    $scope.repositoryTypes = REPOSITORY_TYPES;\n    $scope.chooseRepositoryType = function (repoType) {\n        $location.path(`${$location.path()}/${repoType}`);\n    };\n}\n\nAddRepositoryCtrl.$inject = ['$scope', 'toastr', '$repositories', '$location', '$timeout', 'Upload', '$routeParams',\n    'RepositoriesRestService', '$translate'];\n\nfunction AddRepositoryCtrl($scope, toastr, $repositories, $location, $timeout, Upload, $routeParams, RepositoriesRestService, $translate) {\n    $scope.rulesets = STATIC_RULESETS.slice();\n    $scope.repositoryTypes = REPOSITORY_TYPES;\n    $scope.params = $routeParams;\n    $scope.repositoryType = $routeParams.repositoryType;\n    $scope.enable = true;\n\n    $scope.loader = true;\n    $scope.pageTitle = $translate.instant('view.create.repo.title');\n    $scope.repositoryInfo = {\n        id: '',\n        params: {},\n        title: '',\n        type: '',\n        location: ''\n    };\n\n    $scope.invalidValues = {\n        isInvalidQueryTimeout: false,\n        isInvalidQueryLimit: false,\n        isInvalidLeftJoinWorkerThreads: false,\n        isInvalidBoundJoinBlockSize: false,\n        isInvalidJoinWorkerThreads: false,\n        isInvalidUnionWorkerThreads: false,\n        isInvalidValidationResultsLimitPerConstraint: false,\n        isInvalidValidationResultsLimitTotal: false\n    };\n\n    getFilteredLocations($repositories)\n        .then((locations) => {\n            $scope.locations = locations;\n        });\n\n    $scope.changedLocation = function () {\n        $scope.$broadcast('changedLocation');\n    };\n\n    function isValidEERepository(repositoryType) {\n        return $scope.isEnterprise() && (repositoryType === REPOSITORY_TYPES.graphdbRepo);\n    }\n\n    function isValidSERepository(repositoryType) {\n        return !$scope.isFreeEdition() && !$scope.isEnterprise() && repositoryType === REPOSITORY_TYPES.graphdbRepo;\n    }\n\n    function isValidFRRepository(repositoryType) {\n        return $scope.isFreeEdition() && repositoryType === REPOSITORY_TYPES.graphdbRepo;\n    }\n\n    function isValidOntopRepository(repositoryType) {\n        return repositoryType === REPOSITORY_TYPES.ontop;\n    }\n\n    function isValidFedXRepository(repositoryType) {\n        return repositoryType === REPOSITORY_TYPES.fedx;\n    }\n\n    function isRepositoryTypeValid(repositoryType) {\n        return isValidEERepository(repositoryType) || isValidSERepository(repositoryType)\n            || isValidFRRepository(repositoryType) || isValidOntopRepository(repositoryType)\n            || isValidFedXRepository(repositoryType);\n    }\n\n    function setPageTitle(repositoryType) {\n        switch (repositoryType) {\n            case REPOSITORY_TYPES.graphdbRepo:\n                $scope.pageTitle = $translate.instant('view.create.repo.title', {repoType: 'GraphDB'});\n                break;\n            case REPOSITORY_TYPES.ontop:\n                $scope.pageTitle = $translate.instant('view.create.repo.title', {repoType: 'Ontop Virtual SPARQL'});\n                break;\n            case REPOSITORY_TYPES.fedx:\n                $scope.pageTitle = $translate.instant('view.create.repo.title', {repoType: 'FedX Virtual SPARQL'});\n                break;\n        }\n    }\n\n    $scope.getConfig = function (repoType) {\n        RepositoriesRestService.getRepositoryConfiguration(repoType).success(function (data) {\n            $scope.repositoryInfo.params = data.params;\n            $scope.repositoryInfo.type = data.type;\n            parseNumberParamsIfNeeded($scope.repositoryInfo.params);\n            parseMemberParamIfNeeded($scope.repositoryInfo.params);\n            $scope.loader = false;\n            // The clean way is the \"autofocus\" attribute and we use it but it doesn't seem to\n            // work in all browsers because of the way dynamic content is handled so give it another\n            // try here.\n            $timeout(function () {\n                // Focus the ID field\n                angular.element(document).find('#id').focus();\n            }, 50);\n        }).error(function (data) {\n            const msg = getError(data);\n            toastr.error(msg, $translate.instant('common.error'));\n            $scope.loader = false;\n        });\n    };\n\n    if ($scope.repositoryType && isRepositoryTypeValid($scope.repositoryType)) {\n        $scope.repositoryInfo.type = $scope.repositoryType;\n        $scope.getConfig($scope.repositoryType);\n        setPageTitle($scope.repositoryType);\n    } else {\n        $location.path('/repository/create');\n    }\n\n    $scope.hasActiveLocation = function () {\n        return $repositories.hasActiveLocation();\n    };\n\n    $scope.activeLocation = function () {\n        return $repositories.getActiveLocation();\n    };\n\n    let isInvalidPieFile = false;\n    $scope.uploadRuleset = function (files) {\n        if (files && files.length) {\n            $scope.uploadFile = files[0];\n            $scope.uploadFileLoader = true;\n            Upload.upload({\n                url: 'rest/repositories/ruleset/upload',\n                data: {ruleset: $scope.uploadFile, location: $scope.repositoryInfo.location}\n            }).progress(function (evt) {\n                /*\t\t\t\t\t\tvar progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n                 console.log('progress: ' + progressPercentage + '% ' + evt.config.file.name);*/\n            }).success(function (data) {\n                if (!data.success) {\n                    toastr.error(data.errorMessage);\n                    isInvalidPieFile = true;\n                } else {\n                    const fileName = $scope.uploadFile.name;\n                    const newValue = {id: data.fileLocation, name: 'Custom: ' + fileName};\n                    if ($scope.rulesetPie) {\n                        // file was previously uploaded\n                        $scope.rulesets[0] = newValue;\n                    } else {\n                        // file uploaded for the first time\n                        $scope.rulesets.unshift(newValue);\n                    }\n                    $scope.rulesetPie = data.fileLocation;\n                    $scope.rulesetPieFile = fileName;\n                    $scope.repositoryInfo.params.ruleset.value = $scope.rulesetPie;\n                }\n                $scope.uploadFileLoader = false;\n            }).error(function (data) {\n                const msg = getError(data);\n                toastr.error(msg, $translate.instant('common.error'));\n                $scope.uploadFile = '';\n                $scope.uploadFileLoader = false;\n            });\n        }\n    };\n\n    $scope.noMembersError = function () {\n        toastr.error($translate.instant('fedx.create.repo.no.members.warning'));\n    };\n\n    $scope.goBackToPreviousLocation = function () {\n        if (angular.isDefined($routeParams.previous)) {\n            delete $location.$$search.previous;\n            $location.path('/');\n        } else {\n            $location.path('/repository');\n        }\n    };\n\n    $scope.createRepoHttp = function () {\n        $scope.loader = true;\n        RepositoriesRestService.createRepository($scope.repositoryInfo)\n            .then(function () {\n                toastr.success($translate.instant('created.repo.success.msg', {repoId: $scope.repositoryInfo.id}));\n                $repositories.init();\n            })\n            .catch(function (error) {\n                const msg = getError(error.data);\n                toastr.error(msg, $translate.instant('common.error'));\n            })\n            .finally(() => {\n                $scope.loader = false;\n                $scope.goBackToPreviousLocation();\n            });\n    };\n\n    $scope.createRepo = function () {\n        if (!$scope.repositoryInfo.id) {\n            toastr.error($translate.instant('empty.repoid.warning'));\n            return;\n        }\n\n        $scope.isInvalidRepoName = !FILENAME_PATTERN.test($scope.repositoryInfo.id);\n        validateNumberFields($scope.repositoryInfo.params, $scope.invalidValues);\n        const invalidValues = checkInvalidValues($scope.invalidValues, $translate);\n\n        if (isInvalidPieFile) {\n            toastr.error($translate.instant('invalid.ruleset.file.error'));\n        } else if ($scope.isInvalidRepoName) {\n            toastr.error($translate.instant('wrong.repo.name.error'));\n        } else if ($scope.repositoryType === \"fedx\" && $scope.repositoryInfo.params.member.value.length === 0) {\n            $scope.noMembersError();\n        } else if (invalidValues) {\n            toastr.error(invalidValues);\n        } else {\n            $scope.createRepoHttp();\n        }\n    };\n\n    $scope.rulesetWarning = function () {\n        const pp = $scope.repositoryInfo.params;\n        if (pp === undefined || pp.ruleset === undefined || pp.disableSameAs === undefined) {\n            return '';\n        }\n\n        if (pp.ruleset.value.indexOf('owl') === 0 && pp.disableSameAs.value === 'true') {\n            return $translate.instant('repoTooltips.rulesetWarnings.needsSameAs');\n        } else if (pp.ruleset.value.indexOf('rdfs') === 0 && pp.disableSameAs.value === 'false') {\n            return $translate.instant('repoTooltips.rulesetWarnings.doesntNeedSameAs');\n        } else if (pp.ruleset.value === $scope.rulesetPie) {\n            return $translate.instant('repoTooltips.rulesetWarnings.customRuleset');\n        } else {\n            return '';\n        }\n    };\n\n    $scope.validateNumberInput = function () {\n        validateNumberFields($scope.repositoryInfo.params, $scope.invalidValues);\n    };\n\n    $scope.getShaclOptionsClass = function () {\n        return getShaclOptionsClass();\n    };\n    //TODO - check if repositoryID exist\n\n    // Request auto-focus of the ID input when creating a repo (but not when editing)\n    $scope.autofocusId = 'autofocus';\n}\n\nEditRepositoryFileCtrl.$inject = ['$scope', '$modalInstance', 'RepositoriesRestService', 'file', 'toastr', '$translate'];\n\nfunction EditRepositoryFileCtrl($scope, $modalInstance, RepositoriesRestService, file, toastr, $translate) {\n\n    if (file) {\n        RepositoriesRestService.getRepositoryFileContent(file).success(function (data) {\n            $scope.fileContent = data;\n        }).error(function (data) {\n            const msg = getError(data);\n            toastr.error(msg, $translate.instant('common.error'));\n        });\n    }\n\n    $scope.ok = function () {\n        $modalInstance.close({\n            content: $scope.fileContent,\n            fileLocation: file\n        });\n    };\n\n    $scope.cancel = function () {\n        $modalInstance.dismiss('cancel');\n    };\n}\n\nEditRepositoryCtrl.$inject = ['$scope', '$routeParams', 'toastr', '$repositories', '$location', 'ModalService', 'RepositoriesRestService',\n    '$translate'];\n\nfunction EditRepositoryCtrl($scope, $routeParams, toastr, $repositories, $location, ModalService, RepositoriesRestService, $translate) {\n\n    $scope.rulesets = STATIC_RULESETS.slice();\n    $scope.repositoryTypes = REPOSITORY_TYPES;\n\n    $scope.editRepoPage = true;\n    $scope.canEditRepoId = false;\n    $scope.params = $routeParams;\n    $scope.loader = true;\n    $scope.repositoryInfo = {};\n    $scope.repositoryInfo.id = $scope.params.repositoryId;\n    $scope.repositoryInfo.location = $scope.params.location;\n    $scope.repositoryInfo.restartRequested = false;\n    $scope.repositoryType = '';\n    $scope.saveRepoId = $scope.params.repositoryId;\n    $scope.pageTitle = $translate.instant('view.edit.repo.title', {repositoryId: $scope.params.repositoryId});\n    $scope.invalidValues = {\n        isInvalidQueryTimeout: false,\n        isInvalidQueryLimit: false,\n        isInvalidLeftJoinWorkerThreads: false,\n        isInvalidBoundJoinBlockSize: false,\n        isInvalidJoinWorkerThreads: false,\n        isInvalidUnionWorkerThreads: false,\n        isInvalidValidationResultsLimitPerConstraint: false,\n        isInvalidValidationResultsLimitTotal: false\n    };\n    $scope.hasActiveLocation = function () {\n        return $repositories.hasActiveLocation();\n    };\n\n    $scope.$watch($scope.hasActiveLocation, function () {\n        if ($scope.hasActiveLocation) {\n            // Should get locations before getting repository info\n            getFilteredLocations($repositories).then((locations) => {\n                $scope.locations = locations;\n                return RepositoriesRestService.getRepository($scope.repositoryInfo);\n            })\n                .then(function (response) {\n                    const data = response.data;\n                    if (angular.isDefined(data.params.ruleset)) {\n                        let ifRulesetExists = false;\n                        angular.forEach($scope.rulesets, function (item) {\n                            if (item.id === data.params.ruleset.value) {\n                                ifRulesetExists = true;\n                            }\n                        });\n                        if (data.params.ruleset && !ifRulesetExists) {\n                            const name = getFileName(data.params.ruleset.value);\n                            $scope.rulesets.unshift({id: data.params.ruleset.value, name: 'Custom: ' + name});\n                        }\n                    }\n                    $scope.repositoryInfo = data;\n                    $scope.setRepositoryType(data.type);\n                    parseNumberParamsIfNeeded($scope.repositoryInfo.params);\n                    $scope.repositoryInfo.saveId = $scope.saveRepoId;\n                    $scope.loader = false;\n                })\n                .catch(function (response) {\n                    const data = response.data;\n                    const status = response.status;\n                    const repositoryId = $routeParams.repositoryId;\n                    let toastrMsg;\n\n                    if (status === 404 && repositoryId !== 'system') {\n                        toastrMsg = decodeHTML($translate.instant('edit.repo.error.not.exists', {repositoryId}));\n                    } else if (status === 404 && repositoryId === 'system') {\n                        toastrMsg = decodeHTML($translate.instant('edit.system.repo.warning'));\n                    } else {\n                        toastrMsg = getError(data);\n                    }\n\n                    toastr.error(toastrMsg, $translate.instant('common.error'), {allowHtml: true});\n\n                    if (status === 404) {\n                        setTimeout(function () {\n                            $scope.loader = false;\n                            $location.path('repository');\n                        }, 1000);\n                    } else {\n                        $scope.loader = false;\n                    }\n                });\n        }\n    });\n\n    $scope.setRepositoryType = function (type) {\n        $scope.repositoryType = type;\n    };\n\n    $scope.noMembersError = function () {\n        toastr.error($translate.instant('fedx.create.repo.no.members.warning'));\n    };\n\n    $scope.editRepoHttp = function () {\n        $scope.loader = true;\n        RepositoriesRestService.editRepository($scope.repositoryInfo.saveId, $scope.repositoryInfo)\n            .success(function () {\n                toastr.success($translate.instant('edit.repo.success.msg', {saveId: $scope.repositoryInfo.saveId}));\n                $repositories.init().finally(() => $scope.goBackToPreviousLocation());\n                if ($scope.repositoryInfo.saveId === $scope.repositoryInfo.id && $scope.repositoryInfo.restartRequested) {\n                    $repositories.restartRepository($scope.repositoryInfo);\n                }\n            }).error(function (data) {\n            const msg = getError(data);\n            toastr.error(msg, $translate.instant('common.error'));\n            $scope.loader = false;\n        });\n    };\n\n    $scope.editRepository = function () {\n        $scope.isInvalidRepoName = !FILENAME_PATTERN.test($scope.repositoryInfo.id);\n        validateNumberFields($scope.repositoryInfo.params, $scope.invalidValues);\n        const invalidValues = checkInvalidValues($scope.invalidValues, $translate);\n        let modalMsg = decodeHTML($translate.instant('edit.repo.save.changes.msg', {repoId: $scope.repositoryInfo.id}));\n        if ($scope.repositoryInfo.saveId !== $scope.repositoryInfo.id) {\n            modalMsg += decodeHTML($translate.instant('edit.repo.rename.changes.msg'));\n        } else if ($scope.repositoryInfo.restartRequested) {\n            modalMsg += decodeHTML($translate.instant('edit.repo.restart.requested.msg'));\n        } else {\n            modalMsg += decodeHTML($translate.instant('edit.repo.restart.needed.msg'));\n        }\n        if ($scope.isInvalidRepoName) {\n            toastr.error($translate.instant('wrong.repo.name.error'));\n        } else if ($scope.repositoryType === \"fedx\" && $scope.repositoryInfo.params.member.value.length === 0) {\n            $scope.noMembersError();\n        } else if (invalidValues) {\n            toastr.error(invalidValues);\n        } else {\n            ModalService.openSimpleModal({\n                title: $translate.instant('common.confirm.save'),\n                message: modalMsg,\n                warning: true\n            }).result\n                .then(function () {\n                    $scope.editRepoHttp();\n                });\n        }\n    };\n\n    $scope.editRepositoryId = function () {\n        let msg = decodeHTML($translate.instant('edit.repo.id.warning.msg'));\n        if ($scope.isEnterprise()) {\n            msg += decodeHTML($translate.instant('edit.repo.id.cluster.warning.msg'));\n        }\n        ModalService.openSimpleModal({\n            title: $translate.instant('confirm.enable.edit'),\n            message: msg,\n            warning: true\n        }).result.then(function () {\n            $scope.canEditRepoId = true;\n        });\n    };\n\n    $scope.goBackToPreviousLocation = function () {\n        if (angular.isDefined($routeParams.previous)) {\n            delete $location.$$search.previous;\n            $location.path('/');\n        } else {\n            $location.path('/repository');\n        }\n    };\n\n    $scope.validateNumberInput = function () {\n        validateNumberFields($scope.repositoryInfo.params, $scope.invalidValues);\n    };\n\n    $scope.getShaclOptionsClass = function () {\n        return getShaclOptionsClass();\n    };\n}\n"],"sourceRoot":""}