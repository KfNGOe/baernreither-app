{"version":3,"sources":["webpack:///./src/js/lib/common/svg-export.js","webpack:///./src/js/angular/rest/graph-data.rest.service.js","webpack:///./src/js/angular/graphexplore/directives/dependencies-chord.directive.js"],"names":["SVG","Export","getCSSRules","cssSourceFilePath","cssRules","$","sheet","rules","cssStr","_","each","value","cssText","generateBase64ImageSource","exportSvg","d3","selectAll","attr","version","xmlns","node","parentNode","innerHTML","btoa","unescape","encodeURIComponent","angular","module","factory","GraphDataRestService","$inject","$http","getClassHierarchyData","graphURI","get","params","reloadClassHierarchy","doReload","getClassInstances","targetUri","getDomainRangeData","collapsed","checkDomainRangeData","head","getRelationshipsData","selectedClasses","direction","map","c","name","getRelationshipsClasses","getRelationshipsStatus","calculateRelationships","getPredicates","sourceClass","destinationClass","getInstanceNode","iri","getInstanceNodeLinks","getRdfsLabelAndComment","languages","extraParams","requestParams","url","method","extend","uri","headers","dependenciesChordDirective","$repositories","restrict","template","scope","dependenciesData","link","$watch","data","matrix","nodes","zeroMatrix","arr","some","item","isZeroMatrix","fill","scale","category20","tooltip","select","append","style","on","outerRadius","Math","min","innerRadius","arc","svg","layout","chord","padding","sortSubgroups","descending","sortChords","ascending","path","radius","group","groups","enter","d","i","classed","p","source","index","target","text","angle","startAngle","endAngle","PI","chords","this","px","event","pageX","py","pageY","selectedGraph","contextID","success","predicatesData","tooltipContent","slice","icon","predicate","weight","join","length","toString","html","transition","duration","imgSrc","href","download","getActiveRepository","drawChord","directive"],"mappings":"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","file":"32.39ec32df6e60d1c4247a.bundle.js","sourcesContent":["var SVG = SVG || {};\n\nSVG.Export = function () {\n    function getCSSRules(cssSourceFilePath) {\n        var cssRules = $('link[href=\"' + cssSourceFilePath + '\"]')[0].sheet.rules;\n        var cssStr = \"\";\n        _.each(cssRules, function (value) {\n            cssStr += value.cssText;\n        });\n        return cssStr;\n    }\n\n    function generateBase64ImageSource() {\n        // add needed xml namespace\n        var exportSvg = d3.selectAll(\"svg\")\n            .attr({\n                version: \"1.1\",\n                xmlns: \"http://www.w3.org/2000/svg\"\n            })\n            .node().parentNode.innerHTML;\n\n        // convert selected html to base64\n        return \"data:image/svg+xml;charset=utf-8;base64,\" + btoa(unescape(encodeURIComponent(exportSvg)));\n    }\n\n    return {\n        getCSSRules: getCSSRules,\n        generateBase64ImageSource: generateBase64ImageSource\n    };\n}();\n\nexport default SVG;\n","angular\n    .module('graphdb.framework.rest.graphexplore.data.service', [])\n    .factory('GraphDataRestService', GraphDataRestService);\n\nGraphDataRestService.$inject = ['$http'];\n\nconst CLASS_HIERARCHY_ENDPOINT = 'rest/class-hierarchy';\nconst DOMAIN_RANGE_ENDPOINT = 'rest/domain-range';\nconst DEPENDENCIES_ENDPOINT = 'rest/dependencies/';\nconst EXPORE_GRAPH_ENDPOINT = 'rest/explore-graph/';\n\nfunction GraphDataRestService($http) {\n    return {\n        // class hierarchy\n        getClassHierarchyData,\n        reloadClassHierarchy,\n        getClassInstances,\n\n        // domain-range graph\n        getDomainRangeData,\n        checkDomainRangeData,\n\n        // class relationships\n        getRelationshipsData,\n        getRelationshipsClasses,\n        getRelationshipsStatus,\n        calculateRelationships,\n        getPredicates,\n\n        // instances graph\n        getInstanceNode,\n        getInstanceNodeLinks,\n\n        // common\n        getRdfsLabelAndComment\n    };\n\n    function getClassHierarchyData(graphURI) {\n        return $http.get(CLASS_HIERARCHY_ENDPOINT, {\n            params: {\n                graphURI: graphURI\n            }\n        });\n    }\n\n    function reloadClassHierarchy(graphURI) {\n        return $http.get(CLASS_HIERARCHY_ENDPOINT, {\n            params: {\n                doReload: true,\n                graphURI: graphURI\n            }\n        });\n    }\n\n    function getClassInstances(targetUri) {\n        return $http.get(`${CLASS_HIERARCHY_ENDPOINT}/class-instances`, {\n            params: {\n                targetUri\n            }\n        });\n    }\n\n    function checkDomainRangeData(targetUri) {\n        return $http.head(DOMAIN_RANGE_ENDPOINT, {\n            params: {\n                targetUri\n            }\n        });\n    }\n\n    function getDomainRangeData(targetUri, collapsed) {\n        return $http.get(DOMAIN_RANGE_ENDPOINT, {\n            params: {\n                targetUri,\n                collapsed\n            }\n        });\n    }\n\n    function getRelationshipsData(selectedClasses, direction, graphURI) {\n        return $http.get(`${DEPENDENCIES_ENDPOINT}matrix`, {\n            params: {\n                'mode': direction,\n                'classes': _.map(selectedClasses, function (c) {\n                    return c.name;\n                }),\n                'graphURI': graphURI\n            }\n        });\n    }\n\n    function getRelationshipsClasses(direction, graphURI) {\n        return $http.get(`${DEPENDENCIES_ENDPOINT}classes`, {\n            params: {\n                'mode': direction,\n                'graphURI': graphURI\n            }\n        });\n    }\n\n    function getRelationshipsStatus(graphURI) {\n        return $http.get(`${DEPENDENCIES_ENDPOINT}status`, {\n            params: {\n                graphURI: graphURI\n            }\n        });\n    }\n\n    function calculateRelationships(graphURI) {\n        return $http.get(`${DEPENDENCIES_ENDPOINT}update`, {\n            params: {\n                graphURI: graphURI\n            }\n        });\n    }\n\n    function getPredicates(sourceClass, destinationClass, graphURI) {\n        return $http.get(`${DEPENDENCIES_ENDPOINT}predicates`, {\n            params: {\n                'from': sourceClass,\n                'to': destinationClass,\n                'mode': 'all',\n                graphURI: graphURI\n            }\n        });\n    }\n\n    function getInstanceNode(iri) {\n        return $http.get(`${EXPORE_GRAPH_ENDPOINT}node`, {\n            params: {\n                iri\n            }\n        });\n    }\n\n    function getInstanceNodeLinks(iri) {\n        return $http.get(`${EXPORE_GRAPH_ENDPOINT}links`, {\n            params: {\n                iri\n            }\n        });\n    }\n\n    function getRdfsLabelAndComment(targetUri, languages, extraParams) {\n        const requestParams = extraParams || {};\n        return $http({\n            url: 'rest/explore/details',\n            method: 'GET',\n            params: _.extend(requestParams, {uri: targetUri, languages}),\n            headers: {\n                'Accept': 'application/json'\n            }\n        });\n    }\n}\n","import SVG from 'lib/common/svg-export';\nimport 'angular/rest/graph-data.rest.service';\n\nangular\n    .module('graphdb.framework.graphexplore.directives.dependencies', [\n        'graphdb.framework.graphexplore.controllers.dependencies',\n        'graphdb.framework.rest.graphexplore.data.service'\n    ])\n    .directive('dependenciesChord', dependenciesChordDirective);\n\ndependenciesChordDirective.$inject = ['$repositories', 'GraphDataRestService'];\n\nfunction dependenciesChordDirective($repositories, GraphDataRestService) {\n    return {\n        restrict: 'A',\n        template: '<div id=\"dependencies-chord\"></div>',\n        scope: {\n            dependenciesData: '='\n        },\n        link: linkFunc\n    };\n\n    function linkFunc(scope) {\n        // Used http://bost.ocks.org/mike/uberdata/\n\n        const drawChord = function (matrix, nodes) {\n\n            // Don't try to draw chord for zero matrix\n            if (isZeroMatrix()) {\n                return;\n            }\n\n            const fill = d3.scale.category20();\n\n            const tooltip = d3.select(\"body\").append(\"div\")\n                .attr(\"class\", \"tooltip\")\n                .style(\"opacity\", 0);\n            d3.select(\"body\").on(\"click\", function () {\n                tooltip.style(\"opacity\", 0);\n            });\n\n            const width = 800;\n            const height = 800;\n            const outerRadius = Math.min(width, height) / 2.8;\n            const innerRadius = outerRadius - 24;\n\n            const arc = d3.svg.arc()\n                .innerRadius(innerRadius)\n                .outerRadius(outerRadius);\n\n            const layout = d3.layout.chord()\n                .padding(.04)\n                .sortSubgroups(d3.descending)\n                .sortChords(d3.ascending);\n\n            const path = d3.svg.chord()\n                .radius(innerRadius);\n\n            const svg = d3.select(\"#dependencies-chord\").append(\"svg\")\n                .attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\n                .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n                .style(\"font\", \"10px sans-serif\")\n                .append(\"g\")\n                .attr(\"id\", \"circle\")\n                .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n            svg.append(\"circle\")\n                .attr(\"r\", outerRadius)\n                .style(\"fill\", \"none\");\n\n            // Compute the chord layout.\n            layout.matrix(matrix);\n\n            // Add a group per neighborhood.\n            const group = svg.selectAll(\".group\")\n                .data(layout.groups)\n                .enter().append(\"g\")\n                .attr(\"class\", \"group\")\n                .on(\"mouseover\", mouseover);\n\n            // Add a mouseover title.\n            group.append(\"title\").text(function (d, i) {\n                return nodes[i];\n            });\n\n            // Add the group arc.\n            group.append(\"path\")\n                .attr(\"id\", function (d, i) {\n                    return \"group\" + i;\n                })\n                .attr(\"d\", arc)\n                .style(\"fill\", function (d, i) {\n                    return fill(i);\n                });\n\n            group.append(\"text\")\n                .each(function (d) {\n                    d.angle = (d.startAngle + d.endAngle) / 2;\n                })\n                .attr(\"dy\", \".35em\")\n                .attr(\"transform\", function (d) {\n                    return \"rotate(\" + (d.angle * 180 / Math.PI - 90) + \")\"\n                        + \"translate(\" + (innerRadius + 26) + \")\"\n                        + (d.angle > Math.PI ? \"rotate(180)\" : \"\");\n                })\n                .style(\"text-anchor\", function (d) {\n                    return d.angle > Math.PI ? \"end\" : null;\n                })\n                .text(function (d) {\n                    return nodes[d.index];\n                });\n\n            // Add the chords.\n            const chord = svg.selectAll(\".chord\")\n                .data(layout.chords)\n                .enter().append(\"path\")\n                .attr(\"class\", \"chord\")\n                .style(\"fill\", function (d) {\n                    return fill(d.target.index);\n                })\n                .style(\"fill-opacity\", \".67\")\n                .style(\"stroke\", \"#000\")\n                .style(\"stroke-width\", \".25px\")\n                .style(\"cursor\", \"pointer\")\n                .attr(\"d\", path);\n\n            chord.on(\"mouseover\", function () {\n                d3.select(this).style({\"fill-opacity\": \"1\"});\n            });\n\n            chord.on(\"mouseout\", function () {\n                d3.select(this).style({\"fill-opacity\": \".67\"});\n            });\n\n            chord.on(\"click\", function (d) {\n                const sourceClass = nodes[d.source.index];\n                const destinationClass = nodes[d.target.index];\n                const px = d3.event.pageX;\n                const py = d3.event.pageY;\n\n                GraphDataRestService.getPredicates(sourceClass, destinationClass, scope.selectedGraph && scope.selectedGraph.contextID.uri)\n                    .success(function (predicatesData) {\n                        const directionIcon = \" <i class='fa fa-exchange'></i> \";\n                        const header = \"<div class='row'>\" + sourceClass + directionIcon + destinationClass + \"</div>\";\n                        const predicatesList = _.map(predicatesData.slice(0, 10), function (p) {\n                            const icon = \" <i class='fa fa-long-arrow-\" + (p.direction === \"out\" ? \"right\" : \"left\") + \"'></i>\";\n                            return \"<div class='row'>\" + p.predicate + \" : \" + p.weight + icon + \" </div>\";\n                        }).join(\"\");\n\n                        let tooltipContent = \"<div class='dependencies-tooltip'>\" + header + predicatesList;\n                        if (predicatesData.length > 10) {\n                            tooltipContent = tooltipContent + \"<div class='pull-right'>And \" + (predicatesData.length - 10).toString() + \" more...</div></div>\";\n                        } else {\n                            tooltipContent = tooltipContent + \"</div>\";\n                        }\n                        tooltip.html(tooltipContent)\n                            .style(\"left\", (px) + \"px\").style(\"top\", (py) + \"px\");\n                    });\n\n                tooltip.transition()\n                    .duration(200)\n                    .style(\"opacity\", 1);\n            });\n\n            function mouseover(d, i) {\n                chord.classed(\"fade\", function (p) {\n                    return p.source.index !== i\n                        && p.target.index !== i;\n                });\n            }\n\n            /**\n             *  Checks if all values of the returned matrix are zero\n             * @returns false if non zero value is found, true otherwise\n             */\n            function isZeroMatrix() {\n                let zeroMatrix = true;\n\n                for (const arr of matrix) {\n                    const nonZeroFound = arr.some(item => item !== 0);\n                    if (nonZeroFound) {\n                        zeroMatrix = false;\n                        break;\n                    }\n                }\n\n                return zeroMatrix;\n            }\n\n            d3.select(\"#circle\").on(\"mouseleave\", function () {\n                svg.selectAll(\".chord\").classed(\"fade\", false);\n            });\n\n            /*\n             * Prepares SVG document image export by adding xml namespaces and\n             * additional style information\n             */\n            function prepareForSVGImageExport() {\n                // convert selected html to base64\n                const imgSrc = SVG.Export.generateBase64ImageSource();\n\n                // set the binary image and a name for the downloadable file on the export button\n                d3.select(this).attr({\n                    href: imgSrc,\n                    download: \"dependencies-\" + $repositories.getActiveRepository() + \".svg\"\n                });\n            }\n\n            d3.select(\"#download-svg\")\n                .on(\"mouseover\", prepareForSVGImageExport);\n        };\n\n        scope.$watch('dependenciesData', function () {\n            if (scope.dependenciesData) {\n                const data = scope.dependenciesData;\n                drawChord(data.matrix, data.nodes, data.direction);\n            }\n        });\n    }\n\n}\n"],"sourceRoot":""}