{"version":3,"sources":["webpack:///./src/js/angular/rest/sparql-templates.rest.service.js"],"names":["angular","module","factory","SparqlTemplatesRestService","$inject","$http","getSparqlTemplates","repositoryID","get","getSparqlTemplate","templateID","params","createSparqlTemplate","template","post","query","updateSparqlTemplate","put","headers","deleteSparqlTemplate","delete"],"mappings":"6EAAAA,QACKC,OAAO,kDAAmD,IAC1DC,QAAQ,6BAA8BC,GAE3CA,EAA2BC,QAAU,CAAC,SAKtC,SAASD,EAA2BE,GAChC,MAAO,CACHC,mBAOJ,SAA4BC,GACxB,OAAOF,EAAMG,IAAI,qBAA2BD,uBAP5CE,kBAUJ,SAA2BC,EAAYH,GACnC,OAAOF,EAAMG,IAAI,qBAA2BD,mCACxC,CACII,OAAS,CACL,WAAcD,MAb1BE,qBAkBJ,SAA8BC,EAAUN,GACpC,OAAOF,EAAMS,KAAK,qBAA2BP,qBAAuC,CAChFG,WAAYG,EAASH,WACrBK,MAAOF,EAASE,SApBpBC,qBAwBJ,SAA8BH,EAAUN,GACpC,OAAOF,EAAMY,IAAI,qBAA2BV,qBACxCM,EAASE,MACT,CACIJ,OAAS,CACL,WAAcE,EAASH,YAE3BQ,QAAS,CACL,eAAgB,iBA/B5BC,qBAoCJ,SAA8BT,EAAYH,GACtC,OAAOF,EAAMe,OAAO,qBAA2Bb,qBAC3C,CACII,OAAS,CACL,WAAcD","file":"121.deeb38c572f2d2859026.bundle.js","sourcesContent":["angular\n    .module('graphdb.framework.rest.sparql-templates.service', [])\n    .factory('SparqlTemplatesRestService', SparqlTemplatesRestService);\n\nSparqlTemplatesRestService.$inject = ['$http'];\n\nconst REPOSITORIES_BASE_URL = 'rest/repositories/';\nconst SPARQL_TEMPLATES_URL = '/sparql-templates';\n\nfunction SparqlTemplatesRestService($http) {\n    return {\n        getSparqlTemplates,\n        getSparqlTemplate,\n        createSparqlTemplate,\n        updateSparqlTemplate,\n        deleteSparqlTemplate\n    };\n\n    function getSparqlTemplates(repositoryID) {\n        return $http.get(`${REPOSITORIES_BASE_URL}${repositoryID}${SPARQL_TEMPLATES_URL}`);\n    }\n\n    function getSparqlTemplate(templateID, repositoryID) {\n        return $http.get(`${REPOSITORIES_BASE_URL}${repositoryID}${SPARQL_TEMPLATES_URL}/configuration`,\n            {\n                params : {\n                    'templateID': templateID\n                }\n            });\n    }\n\n    function createSparqlTemplate(template, repositoryID) {\n        return $http.post(`${REPOSITORIES_BASE_URL}${repositoryID}${SPARQL_TEMPLATES_URL}`, {\n            templateID: template.templateID,\n            query: template.query\n        });\n    }\n\n    function updateSparqlTemplate(template, repositoryID) {\n        return $http.put(`${REPOSITORIES_BASE_URL}${repositoryID}${SPARQL_TEMPLATES_URL}`,\n            template.query,\n            {\n                params : {\n                    'templateID': template.templateID\n                },\n                headers: {\n                    'Content-Type': 'text/plain'\n                }\n            });\n    }\n\n    function deleteSparqlTemplate(templateID, repositoryID) {\n        return $http.delete(`${REPOSITORIES_BASE_URL}${repositoryID}${SPARQL_TEMPLATES_URL}`,\n            {\n                params : {\n                    'templateID': templateID\n                }\n            });\n    }\n}\n"],"sourceRoot":""}