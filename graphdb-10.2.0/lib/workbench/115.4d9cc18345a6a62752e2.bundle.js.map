{"version":3,"sources":["webpack:///./src/js/angular/rest/graph-config.rest.service.js"],"names":["angular","module","factory","GraphConfigRestService","$http","getGraphConfigs","get","getGraphConfigSamples","loadGraphForConfig","config","includeInferred","linksLimit","startQuerySameAs","encodeURIComponent","id","getConfig","createGraphConfig","post","updateGraphConfig","put","deleteGraphConfig","delete","validateQuery","query","queryType","params","all","oneOf","method","url","data","$inject"],"mappings":"4EAAAA,QACKC,OAAO,6CAA8C,IACrDC,QAAQ,yBAA0BC,GAOvC,SAASA,EAAuBC,GAC5B,MAAO,CACHC,gBAUJ,WACI,OAAOD,EAAME,IAjBiB,8BAO9BC,sBAaJ,WACI,OAAOH,EAAME,IAAI,+BAbjBE,mBAgBJ,SAA4BC,EAAQC,EAAiBC,EAAYC,GAC7D,OAAOR,EAAME,IAAI,mCAA0CO,mBAAmBJ,EAAOK,uBAAuBJ,gBAA8BC,iBAA0BC,MAhBpKG,UAmBJ,SAAmBD,GACf,OAAOV,EAAME,IAAI,6BAAoCO,mBAAmBC,KAnBxEE,kBAsBJ,SAA2BP,GACvB,OAAOL,EAAMa,KAjCiB,4BAiCmBR,IAtBjDS,kBAyBJ,SAA2BT,GACvB,OAAOL,EAAMe,IAAI,6BAAoCN,mBAAmBJ,EAAOK,IAAOL,IAzBtFW,kBA4BJ,SAA2BX,GACvB,OAAOL,EAAMiB,OAAO,6BAAoCR,mBAAmBJ,EAAOK,MA5BlFQ,cA+BJ,SAAuBC,EAAOC,EAAWC,EAAQC,EAAKC,GAClD,OAAOvB,EAAM,CACTwB,OAAQ,OACRC,IAAK,8BACLC,KAAM,CACFP,QACAC,YACAC,SACAC,MACAC,aAnDhBxB,EAAuB4B,QAAU,CAAC","file":"115.4d9cc18345a6a62752e2.bundle.js","sourcesContent":["angular\n    .module('graphdb.framework.rest.graphconfig.service', [])\n    .factory('GraphConfigRestService', GraphConfigRestService);\n\nconst EXPLORE_GRAPH_ENDPOINT = 'rest/explore-graph/';\nconst EXPLORE_GRAPH_CONFIG_ENDPOINT = `${EXPLORE_GRAPH_ENDPOINT}config`;\n\nGraphConfigRestService.$inject = ['$http'];\n\nfunction GraphConfigRestService($http) {\n    return {\n        getGraphConfigs,\n        getGraphConfigSamples,\n        loadGraphForConfig,\n        getConfig,\n        createGraphConfig,\n        updateGraphConfig,\n        deleteGraphConfig,\n        validateQuery\n    };\n\n    function getGraphConfigs() {\n        return $http.get(EXPLORE_GRAPH_CONFIG_ENDPOINT);\n    }\n\n    function getGraphConfigSamples() {\n        return $http.get(`${EXPLORE_GRAPH_ENDPOINT}samples`);\n    }\n\n    function loadGraphForConfig(config, includeInferred, linksLimit, startQuerySameAs) {\n        return $http.get(`${EXPLORE_GRAPH_CONFIG_ENDPOINT}/graph/${encodeURIComponent(config.id)}?includeInferred=${includeInferred}&linksLimit=${linksLimit}&sameAsState=${startQuerySameAs}`);\n    }\n\n    function getConfig(id) {\n        return $http.get(`${EXPLORE_GRAPH_CONFIG_ENDPOINT}/${encodeURIComponent(id)}`);\n    }\n\n    function createGraphConfig(config) {\n        return $http.post(EXPLORE_GRAPH_CONFIG_ENDPOINT, config);\n    }\n\n    function updateGraphConfig(config) {\n        return $http.put(`${EXPLORE_GRAPH_CONFIG_ENDPOINT}/${encodeURIComponent(config.id)}`, config);\n    }\n\n    function deleteGraphConfig(config) {\n        return $http.delete(`${EXPLORE_GRAPH_CONFIG_ENDPOINT}/${encodeURIComponent(config.id)}`);\n    }\n\n    function validateQuery(query, queryType, params, all, oneOf) {\n        return $http({\n            method: 'POST',\n            url: `${EXPLORE_GRAPH_ENDPOINT}validate`,\n            data: {\n                query,\n                queryType,\n                params,\n                all,\n                oneOf\n            }\n        });\n    }\n}\n"],"sourceRoot":""}