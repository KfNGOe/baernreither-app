{"version":3,"sources":["webpack:///./src/js/angular/utils/notifications.js","webpack:///./src/js/angular/graphexplore/controllers/graphs-config.controller.js"],"names":["Notifications","toastr","$translate","showToastMessageWithDelay","message","Promise","r","success","instant","setTimeout","angular","module","factory","$inject","GraphConfigCtrl","$scope","$timeout","$location","$repositories","$modal","ModalService","SparqlRestService","$filter","GraphConfigRestService","AutocompleteRestService","$routeParams","RDF4JRepositoriesRestService","LocalStorageAdapter","LSKeys","selectedFixedNodeChanged","page","totalPages","helpHidden","get","HIDE_GRAPH_CONFIG_HELP","toggleHelp","value","undefined","set","fixedVisualCallback","uri","label","newConfig","startIRI","startIRILabel","isDefaultGraph","sample","name","isUserGraph","getSampleName","property","extra","id","configName","showInvalidMsg","warning","getQueryForCurrentPage","config","query","startMode","startGraphQuery","expandQuery","resourceQuery","predicateLabelQuery","resourcePropertiesQuery","isDefined","initForConfig","checkAutocompleteStatus","getAutocompletePromise","getGraphConfigSamples","data","samples","_","filter","s","revertConfig","error","getError","createGraphConfig","async","url","updateGraphConfig","$on","getNamespacesPromise","getNamespaces","getActiveRepository","validateQueryWithCallback","successCallback","queryType","params","all","oneOf","validateQuery","broadcastAddStartFixedNodeEvent","checkPageAndMode","$broadcast","validateCurrentPage","updateModel","goToPage","nextPage","showEditor","notoolbar","goToPreviousPage","goToNextPage","saveGraphConfig","startQueryIncludeInferred","currentQuery","inference","startQuerySameAs","sameAs","isUpdate","window","editor","getValue","trim","setQuery","setValue","updateDirty","q1","q2","queryEditorIsDirty","updateEditor","isActiveRepoOntopType","nocount","loadTab","selectTab","xhr","abort","viewMode","showPreview","outputType","runQuery","revertEditor","$watch","shared","encodeQuery","encodeURIComponent","getConfig","defaultTabConfig","saveQueryToLocal","currentQueryTab","setLoader","isRunning","progressMessage","extraMessage","yasrInnerContainer","element","document","getElementById","queryIsRunning","queryStartTime","Date","now","countTimeouted","addClass","removeClass","$$phase","$apply","fixSizesOnHorizontalViewModeSwitch","verticalViewParam","visibleWindowHeight","innerHeight","documentElement","clientHeight","body","verticalView","orientationViewMode","newHeight","querySelector","getBoundingClientRect","style","height","noPadding","minHeight","paddingRight","paddingLeft","timer","cancel","yasr","container","resize","showHideEditor","$","tab","changePage","explain","executedQueryTab","getQueryType","getQueryMode","explainRequested","currentTabConfig","resultsCount","resetCurrentTabConfig","getRepositoryNamespaces","usedPrefixes","results","bindings","forEach","e","prefix","namespace","namespaces","repositoryError","finally","addKnownPrefixes","JSON","stringify","msg","getExistingTabId","existingTabId","tabsData","item","offset","allResultsCount","pageSize","timeFinished","timeTook","sizeDelta","css","getQueryID","attr","queryExists","tabs","saveTab","idx","i","length","findTabIndexByID","addNewTab","callback","tabName","savedQuery","changePagination","toggleSampleQueries","querySelected","tabId","getLoaderMessage","timeSeconds","timeHuman","getHumanReadableSeconds","changeViewMode","tabID","remove","focusQueryEditor","find","is","focus","on","$watchCollection","tabEvent","relatedTarget","target","copy","showSampleQueries","sampleQueries","getResultsDescription","getUpdateDescription","getStaleWarningMessage","controller"],"mappings":"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","file":"39.68f59c2a9aeb4c4100c9.bundle.js","sourcesContent":["angular\n    .module('graphdb.framework.utils.notifications', [])\n    .factory('Notifications', Notifications);\n\nNotifications.$inject = ['toastr', '$translate'];\n\nfunction Notifications(toastr, $translate) {\n    return {\n        showToastMessageWithDelay\n    };\n\n    /**\n     *  This method will show message with tiny delay and only after completion\n     *  of latter redirection to \"graphs-visualizations\" page will happen.\n     * @param {string} message The message to be displayed.\n     * @return {Promise<any>}\n     */\n    function showToastMessageWithDelay(message) {\n        return new Promise((r) => {\n            toastr.success($translate.instant(message));\n            setTimeout(r, 200);\n        });\n    }\n}\n","import 'angular/utils/notifications';\nimport 'angular/utils/local-storage-adapter';\n\nangular\n    .module('graphdb.framework.graphexplore.controllers.graphviz.config', [\n        'graphdb.framework.utils.notifications',\n        'graphdb.framework.utils.localstorageadapter'\n    ])\n    .controller('GraphConfigCtrl', GraphConfigCtrl);\n\nGraphConfigCtrl.$inject = ['$scope', '$timeout', '$location', 'toastr', '$repositories', '$modal', 'ModalService', 'SparqlRestService', '$filter', 'GraphConfigRestService', 'AutocompleteRestService', '$routeParams', 'Notifications', 'RDF4JRepositoriesRestService', 'LocalStorageAdapter', 'LSKeys', '$translate'];\n\nfunction GraphConfigCtrl($scope, $timeout, $location, toastr, $repositories, $modal, ModalService, SparqlRestService, $filter, GraphConfigRestService, AutocompleteRestService, $routeParams, Notifications, RDF4JRepositoriesRestService, LocalStorageAdapter, LSKeys, $translate) {\n\n    $scope.page = 1;\n    $scope.totalPages = 5;\n\n    $scope.helpHidden = LocalStorageAdapter.get(LSKeys.HIDE_GRAPH_CONFIG_HELP) === 1;\n\n    $scope.toggleHelp = function (value) {\n        if (value === undefined) {\n            value = LocalStorageAdapter.get(LSKeys.HIDE_GRAPH_CONFIG_HELP);\n        }\n        if (value !== 1) {\n            LocalStorageAdapter.set(LSKeys.HIDE_GRAPH_CONFIG_HELP, 1);\n            $scope.helpHidden = true;\n        } else {\n            LocalStorageAdapter.set(LSKeys.HIDE_GRAPH_CONFIG_HELP, 0);\n            $scope.helpHidden = false;\n        }\n    };\n\n    var selectedFixedNodeChanged;\n    $scope.fixedVisualCallback = function (uri, label) {\n        $scope.newConfig.startIRI = uri;\n        $scope.newConfig.startIRILabel = label;\n        selectedFixedNodeChanged = true;\n    };\n\n    $scope.isDefaultGraph = function (sample) {\n        return (sample.name === 'Minimal' || sample.name === 'Advanced');\n    };\n\n    $scope.isUserGraph = function (sample) {\n        return !$scope.isDefaultGraph(sample);\n    };\n\n    $scope.getSampleName = function (sample, property) {\n        const extra = sample[property + 'Description'];\n        if (extra) {\n            // Sample has description, use it\n            return extra;\n        } else {\n            // Sample is a copy of existing config, prepend Copy of to name\n            return sample.id ? 'Copy of ' + sample.name : sample.name;\n        }\n    };\n\n    const getGraphConfigSamples = function () {\n        GraphConfigRestService.getGraphConfigSamples()\n            .success(function (data) {\n                $scope.samples = _.filter(data, function (s) {\n                    // Skip the currently edited config from samples and store it into a revert variable\n                    if (!s.id || $scope.newConfig.id !== s.id) {\n                        return true;\n                    } else {\n                        $scope.revertConfig = s;\n                        return false;\n                    }\n                });\n            }).error(function (data) {\n                toastr.error(getError(data), $translate.instant('graphexplore.error.graph.configs'));\n            });\n    };\n\n    const configName = $routeParams.configName;\n    $scope.newConfig = {startQueryIncludeInferred: true, startQuerySameAs: true};\n    $scope.newConfig.startMode = 'search';\n    $scope.isUpdate = false;\n    $scope.shared = false;\n\n    $scope.encodeQuery = function (query) {\n        return encodeURIComponent(query);\n    };\n\n    function showInvalidMsg(message) {\n        toastr.warning(message);\n    }\n\n    if (configName) {\n        $scope.isUpdate = true;\n        GraphConfigRestService.getConfig(configName)\n            .success(function (data) {\n                $scope.newConfig = data;\n                initForConfig();\n            })\n            .error(function (data) {\n                toastr.error(getError(data), $translate.instant('created.connector', {name: configName}));\n            });\n    } else {\n        $scope.isUpdate = false;\n        initForConfig();\n    }\n\n    function getQueryForCurrentPage(config) {\n        let query;\n\n        if (config.startMode === 'query' && $scope.page === 1) {\n            query = config.startGraphQuery;\n        } else if ($scope.page === 2) {\n            query = config.expandQuery;\n        } else if ($scope.page === 3) {\n            query = config.resourceQuery;\n        } else if ($scope.page === 4) {\n            query = config.predicateLabelQuery;\n        } else if ($scope.page === 5) {\n            query = config.resourcePropertiesQuery;\n        }\n\n        return angular.isDefined(query) ? query : '';\n    }\n\n    function initForConfig() {\n        getGraphConfigSamples();\n        $scope.createGraphConfig = function () {\n            GraphConfigRestService.createGraphConfig($scope.newConfig)\n                .success(async function () {\n                    await Notifications.showToastMessageWithDelay('graphexplore.saved.new.config');\n                    $location.url('graphs-visualizations');\n                }).error(function (data) {\n                toastr.error(getError(data), $translate.instant('graphexplore.error.could.not.create'));\n            });\n        };\n\n        $scope.updateGraphConfig = function () {\n            GraphConfigRestService.updateGraphConfig($scope.newConfig)\n                .success(async function () {\n                    await Notifications.showToastMessageWithDelay('graphexplore.saved.config');\n                    $location.url('graphs-visualizations');\n                }).error(function (data) {\n                toastr.error(getError(data), $translate.instant('graphexplore.error.could.not.save'));\n            });\n        };\n\n        function checkAutocompleteStatus() {\n            $scope.getAutocompletePromise = AutocompleteRestService.checkAutocompleteStatus();\n        }\n\n        $scope.$on('autocompleteStatus', function() {\n            checkAutocompleteStatus();\n        });\n\n        checkAutocompleteStatus();\n        $scope.getNamespacesPromise = RDF4JRepositoriesRestService.getNamespaces($scope.getActiveRepository());\n\n        const validateQueryWithCallback = function (successCallback, query, queryType, params, all, oneOf) {\n            if (!query) {\n                successCallback();\n            } else {\n                GraphConfigRestService.validateQuery(query, queryType, params, all, oneOf)\n                    .success(function () {\n                        successCallback();\n                    }).error(function (data) {\n                    showInvalidMsg(getError(data));\n                });\n            }\n        };\n\n        $scope.validateCurrentPage = function (successCallback) {\n            $scope.updateModel();\n\n            if ($scope.page === 1) {\n                if ($scope.newConfig.startMode === 'node' && !$scope.newConfig.startIRI) {\n                    showInvalidMsg($translate.instant('graphexplore.select.start.node'));\n                } else if ($scope.newConfig.startMode === 'query' && !$scope.newConfig.startGraphQuery) {\n                    showInvalidMsg($translate.instant('graphexplore.provide.query'));\n                } else if ($scope.newConfig.startMode === 'query') {\n                    validateQueryWithCallback(successCallback, $scope.newConfig.startGraphQuery, 'graph')\n                } else {\n                    successCallback();\n                }\n            } else if ($scope.page === 2) {\n                validateQueryWithCallback(successCallback, $scope.newConfig.expandQuery, 'construct', ['node'])\n            } else if ($scope.page === 3) {\n                validateQueryWithCallback(successCallback, $scope.newConfig.resourceQuery, 'tuple', ['node'], [], ['type', 'label', 'comment', 'rank']);\n            } else if ($scope.page === 4) {\n                validateQueryWithCallback(successCallback, $scope.newConfig.predicateLabelQuery, 'tuple', ['edge'], ['label']);\n            } else if ($scope.page === 5) {\n                validateQueryWithCallback(successCallback, $scope.newConfig.resourcePropertiesQuery, 'tuple', ['node'], ['property', 'value']);\n            }\n        };\n\n        $scope.goToPage = function (nextPage) {\n            if ($scope.page === nextPage) {\n                // already there\n                return;\n            }\n\n            $scope.validateCurrentPage(function () {\n                $scope.showEditor();\n                $scope.page = nextPage;\n                $scope.notoolbar = $scope.page !== 1;\n            });\n        };\n\n        $scope.goToPreviousPage = function () {\n            if ($scope.page > 1) {\n                $scope.goToPage($scope.page - 1);\n            }\n\n            if (checkPageAndMode()) {\n                selectedFixedNodeChanged = false;\n            }\n        };\n\n        $scope.goToNextPage = function () {\n            broadcastAddStartFixedNodeEvent();\n            if ($scope.newConfig.startMode !== 'node' || selectedFixedNodeChanged) {\n                $scope.goToPage($scope.page + 1);\n            }\n        };\n\n        function broadcastAddStartFixedNodeEvent() {\n            if (checkPageAndMode()) {\n                $scope.$broadcast('addStartFixedNodeAutomatically', {startIRI: $scope.newConfig.startIRI});\n            }\n        }\n\n        function checkPageAndMode() {\n            return $scope.page === 1 && $scope.newConfig.startMode === 'node';\n        }\n\n        $scope.saveGraphConfig = function () {\n           broadcastAddStartFixedNodeEvent();\n\n            if (checkPageAndMode() && !selectedFixedNodeChanged) {\n                return;\n            }\n\n            $scope.newConfig.startQueryIncludeInferred = $scope.currentQuery.inference;\n            $scope.newConfig.startQuerySameAs = $scope.currentQuery.sameAs;\n\n            $scope.validateCurrentPage(function () {\n                if (!$scope.newConfig.name) {\n                    showInvalidMsg($translate.instant('graphexplore.provide.config.name'));\n                    return;\n                }\n                $scope.isUpdate ? $scope.updateGraphConfig($scope.newConfig) : $scope.createGraphConfig($scope.newConfig);\n            });\n        };\n\n        $scope.updateModel = function () {\n            const query = window.editor.getValue().trim();\n            if ($scope.newConfig.startMode === 'query' && $scope.page === 1) {\n                $scope.newConfig.startGraphQuery = query;\n            } else if ($scope.page === 2) {\n                $scope.newConfig.expandQuery = query;\n            } else if ($scope.page === 3) {\n                $scope.newConfig.resourceQuery = query;\n            } else if ($scope.page === 4) {\n                $scope.newConfig.predicateLabelQuery = query;\n            } else if ($scope.page === 5) {\n                $scope.newConfig.resourcePropertiesQuery = query;\n            }\n        };\n\n        // Called when user clicks on a sample query\n        $scope.setQuery = function (query) {\n            // Hack for YASQE bug\n            window.editor.setValue(query ? query : ' ');\n        };\n\n        $scope.updateDirty = function () {\n            if ($scope.revertConfig) {\n                const q1 = getQueryForCurrentPage($scope.revertConfig);\n                const q2 = window.editor.getValue().trim();\n                $scope.queryEditorIsDirty = q1 !== q2;\n            }\n        };\n\n        // Updates the position of the query editor to match the current div placeholder\n        // and sets the editor's query to the relevant query from the model.\n        $scope.updateEditor = function () {\n            $timeout(function () {\n                $scope.currentQuery.query = getQueryForCurrentPage($scope.newConfig);\n                // // Check for ontop repository and override nocount property (it's default value is false)\n                if ($repositories.isActiveRepoOntopType()) {\n                    $scope.nocount = true;\n                }\n                $scope.currentQuery.inference = $scope.newConfig.startQueryIncludeInferred;\n                $scope.currentQuery.sameAs = $scope.newConfig.startQuerySameAs;\n                loadTab();\n                selectTab($scope.currentQuery.id);\n            }, 100);\n\n        };\n\n        $scope.showEditor = function () {\n            if (window.editor && window.editor.xhr) {\n                window.editor.xhr.abort();\n            }\n            $scope.viewMode = 'yasr';\n        };\n\n        $scope.showPreview = function () {\n            // For some reason YASR gets confused and sets this to rawResponse\n            // if we execute a CONSTRUCT and then a SELECT. This makes sure it's always table.\n            $scope.currentQuery.outputType = 'table';\n            $scope.runQuery();\n        };\n\n        $scope.revertEditor = function () {\n            $scope.setQuery(getQueryForCurrentPage($scope.revertConfig));\n        };\n\n        // Trigger for showing the editor and moving it to the right position\n        $scope.$watch('newConfig.startMode', function (value) {\n            if (value === 'query') {\n                $timeout(function () {\n                    $scope.updateEditor();\n                }, 0);\n            }\n        });\n\n        // Trigger for showing the editor and moving it to the right position\n        $scope.$watch('page', function (value) {\n            if ($scope.newConfig.startMode === 'query' || value > 1) {\n                $timeout(function () {\n                    $scope.showEditor();\n                    $scope.updateEditor();\n                }, 0);\n            }\n        });\n    }\n\n    // DOWN HERE WE KEEP EVERYTHING PURELY QUERY EDITOR (MOSTLY BORROWED FROM query-editor.controller.js)\n    // But Why? Can't we reuse it instead of borrow?\n\n    const defaultTabConfig = {\n        id: '1',\n        name: '',\n        query: 'select * where { \\n' +\n        '\\t?s ?p ?o .\\n' +\n        '} limit 100 \\n',\n        inference: $scope.newConfig.startQueryIncludeInferred,\n        sameAs: $scope.newConfig.startQuerySameAs\n    };\n\n    $scope.resetCurrentTabConfig = function () {\n        $scope.currentTabConfig = {\n            pageSize: 100, // page limit 100 as this is only used for preview\n            page: 1,\n            allResultsCount: 0,\n            resultsCount: 0\n        };\n    };\n\n    $scope.queryExists = false;\n\n    $scope.resetCurrentTabConfig();\n\n    $scope.tabsData = $scope.tabs = [defaultTabConfig];\n\n    // query tab operations\n    $scope.saveTab = saveTab;\n    $scope.loadTab = loadTab;\n    $scope.addNewTab = addNewTab;\n\n    // query operations\n    $scope.runQuery = runQuery;\n    $scope.getNamespaces = getNamespaces;\n    $scope.changePagination = changePagination;\n    $scope.toggleSampleQueries = toggleSampleQueries;\n    $scope.addKnownPrefixes = addKnownPrefixes;\n    $scope.getExistingTabId = getExistingTabId;\n    $scope.querySelected = querySelected;\n    $scope.saveQueryToLocal = saveQueryToLocal;\n\n    $scope.setLoader = setLoader;\n    $scope.getLoaderMessage = getLoaderMessage;\n\n    // query editor and results orientation\n    $scope.fixSizesOnHorizontalViewModeSwitch = fixSizesOnHorizontalViewModeSwitch;\n    $scope.changeViewMode = changeViewMode;\n    $scope.showHideEditor = showHideEditor;\n    $scope.focusQueryEditor = focusQueryEditor;\n    $scope.orientationViewMode = true;\n\n    // start of repository actions\n\n    function saveQueryToLocal(currentQueryTab) {\n    }\n\n    function setLoader(isRunning, progressMessage, extraMessage) {\n        const yasrInnerContainer = angular.element(document.getElementById('yasr-inner'));\n        $scope.queryIsRunning = isRunning;\n        if (isRunning) {\n            $scope.queryStartTime = Date.now();\n            $scope.countTimeouted = false;\n            $scope.progressMessage = progressMessage;\n            $scope.extraMessage = extraMessage;\n            yasrInnerContainer.addClass('hide');\n        } else {\n            $scope.progressMessage = '';\n            $scope.extraMessage = '';\n            yasrInnerContainer.removeClass('hide');\n        }\n        // We might call this from angular or outside angular so take care of applying the scope.\n        if ($scope.$$phase === null) {\n            $scope.$apply();\n        }\n    }\n\n    function getLoaderMessage() {\n        const timeSeconds = (Date.now() - $scope.queryStartTime) / 1000;\n        const timeHuman = $scope.getHumanReadableSeconds(timeSeconds);\n        let message;\n\n        if ($scope.progressMessage) {\n            message = $scope.progressMessage + '... ' + timeHuman;\n        } else {\n            message = $translate.instant('common.running.operation', {timeHuman: timeHuman});\n        }\n        if ($scope.extraMessage && timeSeconds > 10) {\n            message += '\\n' + $scope.extraMessage;\n        }\n\n        return message;\n    }\n\n\n    // start of query editor results orientation operations\n    function fixSizesOnHorizontalViewModeSwitch(verticalViewParam) {\n        function visibleWindowHeight() {\n            return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight || 0;\n        }\n\n        const codemirrorWrapperSelector = '.CodeMirror-wrap';\n        const verticalView = verticalViewParam;\n        if (!$scope.orientationViewMode) {\n            $scope.noPadding = {paddingRight: 15, paddingLeft: 0};\n\n            // window.editor is undefined if no repo is selected\n            if (window.editor && document.querySelector(codemirrorWrapperSelector)) {\n                let newHeight = visibleWindowHeight() - (document.querySelector(codemirrorWrapperSelector).getBoundingClientRect().top);\n                newHeight -= 40;\n                document.querySelector(codemirrorWrapperSelector).style.height = newHeight + 'px';\n                document.getElementById('yasr').style.minHeight = newHeight + 'px';\n            } else {\n                let timer;\n                if (verticalView) {\n                    timer = $timeout(function () {\n                        $scope.fixSizesOnHorizontalViewModeSwitch(verticalView)\n                    }, 100);\n                } else {\n                    timer = $timeout($scope.fixSizesOnHorizontalViewModeSwitch, 100);\n                }\n\n                $scope.$on('$destroy', function () {\n                    $timeout.cancel(timer);\n                });\n            }\n        } else {\n            if ($scope.viewMode === 'yasr') {\n                let newHeight = visibleWindowHeight() - (document.querySelector(codemirrorWrapperSelector).getBoundingClientRect().top);\n                newHeight -= 40;\n                document.querySelector(codemirrorWrapperSelector).style.height = newHeight + 'px';\n            } else {\n                $scope.noPadding = {};\n                document.querySelector(codemirrorWrapperSelector).style.height = '';\n            }\n            document.getElementById('yasr').style.minHeight = '';\n        }\n        if (window.yasr && window.yasr.container) {\n            $timeout(function () {\n                window.yasr.container.resize();\n            }, 100);\n        }\n    }\n\n    if (!$scope.orientationViewMode) {\n        showHideEditor();\n    }\n\n    function changeViewMode(tabID) {\n        $scope.viewMode = 'none';\n        $scope.orientationViewMode = !$scope.orientationViewMode;\n        fixSizesOnHorizontalViewModeSwitch();\n        $('.dataTables_filter').remove();\n        $('.resultsTable').remove();\n        $timeout(function () {\n            loadTab();\n            selectTab(tabID);\n        }, 100);\n    }\n\n    function showHideEditor() {\n        fixSizesOnHorizontalViewModeSwitch(true);\n    }\n\n    function focusQueryEditor() {\n        if (!angular.element(document).find('.editable-input').is(':focus')) {\n            angular.element(document).find('.CodeMirror textarea:first-child').focus();\n        }\n    }\n\n    function selectTab(id) {\n        $timeout(function () {\n            $('a[data-id = \"' + id + '\"]').tab('show');\n        }, 0);\n    }\n\n    // start of query operations\n    function runQuery(changePage, explain) {\n        $scope.executedQueryTab = $scope.currentQuery;\n        if (explain && !(window.editor.getQueryType() === 'SELECT' || window.editor.getQueryType() === 'CONSTRUCT')) {\n            toastr.warning($translate.instant('query.editor.warning.msg'));\n            return;\n        }\n\n        if (window.editor.getQueryMode() === 'update') {\n            toastr.warning($translate.instant('cannot.execute.update.error'));\n            return;\n        }\n\n        $scope.explainRequested = explain;\n        if (!$scope.queryIsRunning) {\n            if (changePage) {\n                $scope.currentTabConfig.resultsCount = 0;\n            } else {\n                $scope.resetCurrentTabConfig();\n            }\n\n            // Hides the editor and shows the yasr results\n            $scope.viewMode = 'editor';\n            if ($scope.orientationViewMode) {\n                $scope.fixSizesOnHorizontalViewModeSwitch()\n            }\n\n            setLoader(true, $translate.instant('evaluating.query.msg'));\n            window.editor.query();\n        }\n    }\n\n    function getNamespaces() {\n        // Signals the namespaces are to be fetched => loader will be shown\n        setLoader(true, $translate.instant('common.refreshing.namespaces'), $translate.instant('common.extra.message'));\n        RDF4JRepositoriesRestService.getRepositoryNamespaces()\n            .success(function (data) {\n                const usedPrefixes = {};\n                data.results.bindings.forEach(function (e) {\n                    usedPrefixes[e.prefix.value] = e.namespace.value;\n                });\n                $scope.namespaces = usedPrefixes;\n            })\n            .error(function (data) {\n                $scope.repositoryError = getError(data);\n            })\n            .finally(function () {\n                // Signals namespaces were fetched => loader will be hidden\n                setLoader(false);\n            });\n    }\n\n    function changePagination() {\n        runQuery(true, $scope.explainRequested);\n    }\n\n    if ($scope.getActiveRepository()) {\n        getNamespaces();\n    }\n\n    $scope.$on('$destroy', function () {\n        window.editor = null;\n        window.yasr = null;\n    });\n\n    function toggleSampleQueries() {\n    }\n\n    // Add known prefixes\n    function addKnownPrefixes() {\n        SparqlRestService.addKnownPrefixes(JSON.stringify(window.editor.getValue()))\n            .success(function (data) {\n                if (angular.isDefined(window.editor) && angular.isDefined(data) && data !== window.editor.getValue()) {\n                    window.editor.setValue(data);\n                }\n            })\n            .error(function (data) {\n                let msg = getError(data);\n                toastr.error(msg, $translate.instant('common.add.known.prefixes.error'));\n                return true;\n            });\n    }\n\n    $('textarea').on('paste', function () {\n        $timeout(function () {\n            addKnownPrefixes();\n        }, 0);\n    });\n\n    function querySelected(query) {\n        const tabId = getExistingTabId(query);\n        $scope.toggleSampleQueries();\n        if (!angular.isDefined(tabId)) {\n            $scope.addNewTab(null, query.name, query.body);\n        } else {\n            selectTab(tabId);\n        }\n    }\n\n    function getExistingTabId(query) {\n        let existingTabId = undefined;\n        angular.forEach($scope.tabsData, function (item) {\n            if (item.name === query.name && item.query === query.body) {\n                existingTabId = item.id;\n                return item;\n            }\n        });\n\n        return existingTabId;\n    }\n\n    // end of query operations\n\n    // start of query tab operations\n    function findTabIndexByID(id) {\n        for (let i = 0; i < $scope.tabsData.length; i++) {\n            const tab = $scope.tabsData[i];\n            if (tab.id === id) {\n                return i;\n            }\n        }\n    }\n\n    $scope.$watchCollection('[currentQuery.inference, currentQuery.sameAs]', function () {\n        saveQueryToLocal($scope.currentQuery);\n    });\n\n    function saveTab(id) {\n        const idx = findTabIndexByID(id);\n        // Tab was deleted, don't try to save it's state\n        if (idx === undefined) {\n            return {};\n        }\n        const tab = $scope.tabsData[idx];\n        $scope.saveQueryToLocal(tab);\n        return tab;\n    }\n\n    function addNewTab(callback, tabName, savedQuery) {\n    }\n\n    function loadTab() {\n        $scope.tabsData = [$scope.currentQuery];\n\n        let tab = $scope.currentQuery;\n\n        if ($scope.currentQuery.query == null || $scope.currentQuery.query === '') {\n            // hack for YASQE bug\n            window.editor.setValue(' ');\n        } else {\n            window.editor.setValue($scope.currentQuery.query);\n        }\n\n        $timeout(function () {\n            $scope.currentTabConfig = {};\n            $scope.currentTabConfig.queryType = tab.queryType;\n            $scope.currentTabConfig.resultsCount = tab.resultsCount;\n\n            $scope.currentTabConfig.offset = tab.offset;\n            $scope.currentTabConfig.allResultsCount = tab.allResultsCount;\n            $scope.currentTabConfig.page = tab.page;\n            $scope.currentTabConfig.pageSize = tab.pageSize;\n\n            $scope.currentTabConfig.timeFinished = tab.timeFinished;\n            $scope.currentTabConfig.timeTook = tab.timeTook;\n            $scope.currentTabConfig.sizeDelta = tab.sizeDelta;\n            $scope.$apply();\n        }, 0);\n\n        //Remove padding of yasr so it will be aligned with sparql editor\n        $('#yasr').css('padding', '0');\n    }\n\n    function getQueryID(element) {\n        return $(element).attr('data-id');\n    }\n\n    $scope.$on('tabAction', function (e, tabEvent) {\n        if (tabEvent.relatedTarget) {\n            $scope.saveTab(getQueryID(tabEvent.relatedTarget));\n        }\n        $scope.loadTab(getQueryID(tabEvent.target));\n    });\n\n    $scope.$on('deleteAllexeptSelected', function (e, tabs) {\n        $scope.tabsData = tabs;\n        $scope.tabs = tabs;\n    });\n    // end of query tab operations\n\n    $scope.currentQuery = angular.copy(defaultTabConfig);\n    // $scope.state = {};\n    $scope.showSampleQueries = false;\n    $scope.savedQuery = {};\n    $scope.sampleQueries = {};\n\n    $scope.getResultsDescription = function () {\n    };\n\n    $scope.getUpdateDescription = function () {\n    };\n\n    $scope.getStaleWarningMessage = function () {\n    }\n\n}\n"],"sourceRoot":""}